"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
self["webpackHotUpdate_N_E"]("_app-pages-browser_src_components_Dashboard_tsx",{

/***/ "(app-pages-browser)/./src/services/kilnService.ts":
/*!*************************************!*\
  !*** ./src/services/kilnService.ts ***!
  \*************************************/
/***/ (function(module, __webpack_exports__, __webpack_require__) {

eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   kilnService: function() { return /* binding */ kilnService; }\n/* harmony export */ });\nconst SUPPORTED_NETWORKS = [\n    {\n        id: \"bbn\",\n        name: \"Babylon\"\n    },\n    {\n        id: \"ada\",\n        name: \"Cardano\"\n    },\n    {\n        id: \"tia\",\n        name: \"Celestia\"\n    },\n    {\n        id: \"atom\",\n        name: \"Cosmos\"\n    },\n    {\n        id: \"cro\",\n        name: \"Cronos\"\n    },\n    {\n        id: \"dydx\",\n        name: \"DyDx\"\n    },\n    {\n        id: \"eth\",\n        name: \"Ethereum\"\n    },\n    {\n        id: \"fet\",\n        name: \"Fetch.ai\"\n    },\n    {\n        id: \"inj\",\n        name: \"Injective\"\n    },\n    {\n        id: \"kava\",\n        name: \"Kava\"\n    },\n    {\n        id: \"ksm\",\n        name: \"Kusama\"\n    },\n    {\n        id: \"om\",\n        name: \"Mantra\"\n    },\n    {\n        id: \"egld\",\n        name: \"MultiversX\"\n    },\n    {\n        id: \"near\",\n        name: \"Near\"\n    },\n    {\n        id: \"noble\",\n        name: \"Noble\"\n    },\n    {\n        id: \"osmo\",\n        name: \"Osmosis\"\n    },\n    {\n        id: \"dot\",\n        name: \"Polkadot\"\n    },\n    {\n        id: \"pol\",\n        name: \"Polygon\"\n    },\n    {\n        id: \"sol\",\n        name: \"Solana\"\n    },\n    {\n        id: \"xtz\",\n        name: \"Tezos\"\n    },\n    {\n        id: \"ton\",\n        name: \"The Open Network\"\n    },\n    {\n        id: \"trx\",\n        name: \"Tron\"\n    },\n    {\n        id: \"zeta\",\n        name: \"ZetaChain\"\n    }\n];\nconst kilnService = {\n    getSupportedNetworks () {\n        return SUPPORTED_NETWORKS;\n    },\n    async getNetworkStats (networkId) {\n        const response = await fetch(\"/api/\".concat(networkId, \"/network-stats\"));\n        if (!response.ok) {\n            throw new Error(\"Failed to fetch stats for \".concat(networkId));\n        }\n        return response.json();\n    },\n    async getAllNetworksStats () {\n        const networks = this.getSupportedNetworks();\n        const statsMap = new Map();\n        await Promise.all(networks.map(async (network)=>{\n            try {\n                const stats = await this.getNetworkStats(network.id);\n                console.log(\"Stats for \".concat(network.id, \":\"), stats);\n                statsMap.set(network.id, stats);\n            } catch (error) {\n                console.error(\"Error fetching stats for \".concat(network.id, \":\"), error);\n            }\n        }));\n        return statsMap;\n    }\n};\n\n\n;\n    // Wrapped in an IIFE to avoid polluting the global scope\n    ;\n    (function () {\n        var _a, _b;\n        // Legacy CSS implementations will `eval` browser code in a Node.js context\n        // to extract CSS. For backwards compatibility, we need to check we're in a\n        // browser context before continuing.\n        if (typeof self !== 'undefined' &&\n            // AMP / No-JS mode does not inject these helpers:\n            '$RefreshHelpers$' in self) {\n            // @ts-ignore __webpack_module__ is global\n            var currentExports = module.exports;\n            // @ts-ignore __webpack_module__ is global\n            var prevSignature = (_b = (_a = module.hot.data) === null || _a === void 0 ? void 0 : _a.prevSignature) !== null && _b !== void 0 ? _b : null;\n            // This cannot happen in MainTemplate because the exports mismatch between\n            // templating and execution.\n            self.$RefreshHelpers$.registerExportsForReactRefresh(currentExports, module.id);\n            // A module can be accepted automatically based on its exports, e.g. when\n            // it is a Refresh Boundary.\n            if (self.$RefreshHelpers$.isReactRefreshBoundary(currentExports)) {\n                // Save the previous exports signature on update so we can compare the boundary\n                // signatures. We avoid saving exports themselves since it causes memory leaks (https://github.com/vercel/next.js/pull/53797)\n                module.hot.dispose(function (data) {\n                    data.prevSignature =\n                        self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports);\n                });\n                // Unconditionally accept an update to this module, we'll check if it's\n                // still a Refresh Boundary later.\n                // @ts-ignore importMeta is replaced in the loader\n                module.hot.accept();\n                // This field is set when the previous version of this module was a\n                // Refresh Boundary, letting us know we need to check for invalidation or\n                // enqueue an update.\n                if (prevSignature !== null) {\n                    // A boundary can become ineligible if its exports are incompatible\n                    // with the previous exports.\n                    //\n                    // For example, if you add/remove/change exports, we'll want to\n                    // re-execute the importing modules, and force those components to\n                    // re-render. Similarly, if you convert a class component to a\n                    // function, we want to invalidate the boundary.\n                    if (self.$RefreshHelpers$.shouldInvalidateReactRefreshBoundary(prevSignature, self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports))) {\n                        module.hot.invalidate();\n                    }\n                    else {\n                        self.$RefreshHelpers$.scheduleUpdate();\n                    }\n                }\n            }\n            else {\n                // Since we just executed the code for the module, it's possible that the\n                // new exports made it ineligible for being a boundary.\n                // We only care about the case when we were _previously_ a boundary,\n                // because we already accepted this update (accidental side effect).\n                var isNoLongerABoundary = prevSignature !== null;\n                if (isNoLongerABoundary) {\n                    module.hot.invalidate();\n                }\n            }\n        }\n    })();\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwcC1wYWdlcy1icm93c2VyKS8uL3NyYy9zZXJ2aWNlcy9raWxuU2VydmljZS50cyIsIm1hcHBpbmdzIjoiOzs7O0FBT0EsTUFBTUEscUJBQW9DO0lBQ3hDO1FBQUVDLElBQUk7UUFBT0MsTUFBTTtJQUFVO0lBQzdCO1FBQUVELElBQUk7UUFBT0MsTUFBTTtJQUFVO0lBQzdCO1FBQUVELElBQUk7UUFBT0MsTUFBTTtJQUFXO0lBQzlCO1FBQUVELElBQUk7UUFBUUMsTUFBTTtJQUFTO0lBQzdCO1FBQUVELElBQUk7UUFBT0MsTUFBTTtJQUFTO0lBQzVCO1FBQUVELElBQUk7UUFBUUMsTUFBTTtJQUFPO0lBQzNCO1FBQUVELElBQUk7UUFBT0MsTUFBTTtJQUFXO0lBQzlCO1FBQUVELElBQUk7UUFBT0MsTUFBTTtJQUFXO0lBQzlCO1FBQUVELElBQUk7UUFBT0MsTUFBTTtJQUFZO0lBQy9CO1FBQUVELElBQUk7UUFBUUMsTUFBTTtJQUFPO0lBQzNCO1FBQUVELElBQUk7UUFBT0MsTUFBTTtJQUFTO0lBQzVCO1FBQUVELElBQUk7UUFBTUMsTUFBTTtJQUFTO0lBQzNCO1FBQUVELElBQUk7UUFBUUMsTUFBTTtJQUFhO0lBQ2pDO1FBQUVELElBQUk7UUFBUUMsTUFBTTtJQUFPO0lBQzNCO1FBQUVELElBQUk7UUFBU0MsTUFBTTtJQUFRO0lBQzdCO1FBQUVELElBQUk7UUFBUUMsTUFBTTtJQUFVO0lBQzlCO1FBQUVELElBQUk7UUFBT0MsTUFBTTtJQUFXO0lBQzlCO1FBQUVELElBQUk7UUFBT0MsTUFBTTtJQUFVO0lBQzdCO1FBQUVELElBQUk7UUFBT0MsTUFBTTtJQUFTO0lBQzVCO1FBQUVELElBQUk7UUFBT0MsTUFBTTtJQUFRO0lBQzNCO1FBQUVELElBQUk7UUFBT0MsTUFBTTtJQUFtQjtJQUN0QztRQUFFRCxJQUFJO1FBQU9DLE1BQU07SUFBTztJQUMxQjtRQUFFRCxJQUFJO1FBQVFDLE1BQU07SUFBWTtDQUNqQztBQUVNLE1BQU1DLGNBQWM7SUFDekJDO1FBQ0UsT0FBT0o7SUFDVDtJQUVBLE1BQU1LLGlCQUFnQkMsU0FBaUI7UUFDckMsTUFBTUMsV0FBVyxNQUFNQyxNQUFNLFFBQWtCLE9BQVZGLFdBQVU7UUFDL0MsSUFBSSxDQUFDQyxTQUFTRSxFQUFFLEVBQUU7WUFDaEIsTUFBTSxJQUFJQyxNQUFNLDZCQUF1QyxPQUFWSjtRQUMvQztRQUNBLE9BQU9DLFNBQVNJLElBQUk7SUFDdEI7SUFFQSxNQUFNQztRQUNKLE1BQU1DLFdBQVcsSUFBSSxDQUFDVCxvQkFBb0I7UUFDMUMsTUFBTVUsV0FBVyxJQUFJQztRQUVyQixNQUFNQyxRQUFRQyxHQUFHLENBQ2ZKLFNBQVNLLEdBQUcsQ0FBQyxPQUFPQztZQUNsQixJQUFJO2dCQUNGLE1BQU1DLFFBQVEsTUFBTSxJQUFJLENBQUNmLGVBQWUsQ0FBQ2MsUUFBUWxCLEVBQUU7Z0JBQ25Eb0IsUUFBUUMsR0FBRyxDQUFDLGFBQXdCLE9BQVhILFFBQVFsQixFQUFFLEVBQUMsTUFBSW1CO2dCQUN4Q04sU0FBU1MsR0FBRyxDQUFDSixRQUFRbEIsRUFBRSxFQUFFbUI7WUFDM0IsRUFBRSxPQUFPSSxPQUFPO2dCQUNkSCxRQUFRRyxLQUFLLENBQUMsNEJBQXVDLE9BQVhMLFFBQVFsQixFQUFFLEVBQUMsTUFBSXVCO1lBQzNEO1FBQ0Y7UUFHRixPQUFPVjtJQUNUO0FBQ0YsRUFBRSIsInNvdXJjZXMiOlsid2VicGFjazovL19OX0UvLi9zcmMvc2VydmljZXMva2lsblNlcnZpY2UudHM/MzJjOSJdLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBOZXR3b3JrU3RhdHMgfSBmcm9tICdAa2lsbi1tb25vcmVwby9zaGFyZWQnO1xuXG5leHBvcnQgaW50ZXJmYWNlIE5ldHdvcmtJbmZvIHtcbiAgaWQ6IHN0cmluZztcbiAgbmFtZTogc3RyaW5nO1xufVxuXG5jb25zdCBTVVBQT1JURURfTkVUV09SS1M6IE5ldHdvcmtJbmZvW10gPSBbXG4gIHsgaWQ6ICdiYm4nLCBuYW1lOiAnQmFieWxvbicgfSxcbiAgeyBpZDogJ2FkYScsIG5hbWU6ICdDYXJkYW5vJyB9LFxuICB7IGlkOiAndGlhJywgbmFtZTogJ0NlbGVzdGlhJyB9LFxuICB7IGlkOiAnYXRvbScsIG5hbWU6ICdDb3Ntb3MnIH0sXG4gIHsgaWQ6ICdjcm8nLCBuYW1lOiAnQ3Jvbm9zJyB9LFxuICB7IGlkOiAnZHlkeCcsIG5hbWU6ICdEeUR4JyB9LFxuICB7IGlkOiAnZXRoJywgbmFtZTogJ0V0aGVyZXVtJyB9LFxuICB7IGlkOiAnZmV0JywgbmFtZTogJ0ZldGNoLmFpJyB9LFxuICB7IGlkOiAnaW5qJywgbmFtZTogJ0luamVjdGl2ZScgfSxcbiAgeyBpZDogJ2thdmEnLCBuYW1lOiAnS2F2YScgfSxcbiAgeyBpZDogJ2tzbScsIG5hbWU6ICdLdXNhbWEnIH0sXG4gIHsgaWQ6ICdvbScsIG5hbWU6ICdNYW50cmEnIH0sXG4gIHsgaWQ6ICdlZ2xkJywgbmFtZTogJ011bHRpdmVyc1gnIH0sXG4gIHsgaWQ6ICduZWFyJywgbmFtZTogJ05lYXInIH0sXG4gIHsgaWQ6ICdub2JsZScsIG5hbWU6ICdOb2JsZScgfSxcbiAgeyBpZDogJ29zbW8nLCBuYW1lOiAnT3Ntb3NpcycgfSxcbiAgeyBpZDogJ2RvdCcsIG5hbWU6ICdQb2xrYWRvdCcgfSxcbiAgeyBpZDogJ3BvbCcsIG5hbWU6ICdQb2x5Z29uJyB9LFxuICB7IGlkOiAnc29sJywgbmFtZTogJ1NvbGFuYScgfSxcbiAgeyBpZDogJ3h0eicsIG5hbWU6ICdUZXpvcycgfSxcbiAgeyBpZDogJ3RvbicsIG5hbWU6ICdUaGUgT3BlbiBOZXR3b3JrJyB9LFxuICB7IGlkOiAndHJ4JywgbmFtZTogJ1Ryb24nIH0sXG4gIHsgaWQ6ICd6ZXRhJywgbmFtZTogJ1pldGFDaGFpbicgfVxuXTtcblxuZXhwb3J0IGNvbnN0IGtpbG5TZXJ2aWNlID0ge1xuICBnZXRTdXBwb3J0ZWROZXR3b3JrcygpIHtcbiAgICByZXR1cm4gU1VQUE9SVEVEX05FVFdPUktTO1xuICB9LFxuXG4gIGFzeW5jIGdldE5ldHdvcmtTdGF0cyhuZXR3b3JrSWQ6IHN0cmluZyk6IFByb21pc2U8TmV0d29ya1N0YXRzPiB7XG4gICAgY29uc3QgcmVzcG9uc2UgPSBhd2FpdCBmZXRjaChgL2FwaS8ke25ldHdvcmtJZH0vbmV0d29yay1zdGF0c2ApO1xuICAgIGlmICghcmVzcG9uc2Uub2spIHtcbiAgICAgIHRocm93IG5ldyBFcnJvcihgRmFpbGVkIHRvIGZldGNoIHN0YXRzIGZvciAke25ldHdvcmtJZH1gKTtcbiAgICB9XG4gICAgcmV0dXJuIHJlc3BvbnNlLmpzb24oKTtcbiAgfSxcblxuICBhc3luYyBnZXRBbGxOZXR3b3Jrc1N0YXRzKCk6IFByb21pc2U8TWFwPHN0cmluZywgTmV0d29ya1N0YXRzPj4ge1xuICAgIGNvbnN0IG5ldHdvcmtzID0gdGhpcy5nZXRTdXBwb3J0ZWROZXR3b3JrcygpO1xuICAgIGNvbnN0IHN0YXRzTWFwID0gbmV3IE1hcDxzdHJpbmcsIE5ldHdvcmtTdGF0cz4oKTtcblxuICAgIGF3YWl0IFByb21pc2UuYWxsKFxuICAgICAgbmV0d29ya3MubWFwKGFzeW5jIChuZXR3b3JrKSA9PiB7XG4gICAgICAgIHRyeSB7XG4gICAgICAgICAgY29uc3Qgc3RhdHMgPSBhd2FpdCB0aGlzLmdldE5ldHdvcmtTdGF0cyhuZXR3b3JrLmlkKTtcbiAgICAgICAgICBjb25zb2xlLmxvZyhgU3RhdHMgZm9yICR7bmV0d29yay5pZH06YCwgc3RhdHMpO1xuICAgICAgICAgIHN0YXRzTWFwLnNldChuZXR3b3JrLmlkLCBzdGF0cyk7XG4gICAgICAgIH0gY2F0Y2ggKGVycm9yKSB7XG4gICAgICAgICAgY29uc29sZS5lcnJvcihgRXJyb3IgZmV0Y2hpbmcgc3RhdHMgZm9yICR7bmV0d29yay5pZH06YCwgZXJyb3IpO1xuICAgICAgICB9XG4gICAgICB9KVxuICAgICk7XG5cbiAgICByZXR1cm4gc3RhdHNNYXA7XG4gIH1cbn07ICJdLCJuYW1lcyI6WyJTVVBQT1JURURfTkVUV09SS1MiLCJpZCIsIm5hbWUiLCJraWxuU2VydmljZSIsImdldFN1cHBvcnRlZE5ldHdvcmtzIiwiZ2V0TmV0d29ya1N0YXRzIiwibmV0d29ya0lkIiwicmVzcG9uc2UiLCJmZXRjaCIsIm9rIiwiRXJyb3IiLCJqc29uIiwiZ2V0QWxsTmV0d29ya3NTdGF0cyIsIm5ldHdvcmtzIiwic3RhdHNNYXAiLCJNYXAiLCJQcm9taXNlIiwiYWxsIiwibWFwIiwibmV0d29yayIsInN0YXRzIiwiY29uc29sZSIsImxvZyIsInNldCIsImVycm9yIl0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(app-pages-browser)/./src/services/kilnService.ts\n"));

/***/ })

});
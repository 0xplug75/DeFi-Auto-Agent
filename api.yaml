openapi: 3.0.3
info:
  x-logo:
    url: assets/logo-preview.png
  title: Kiln API
  description: |-
    This API provides reporting staking data on various protocols as
    well as network wide data, staking transaction crafting features
    and so on.

    ### ACCESS

    In order to use the Kiln API, you must first get an API token
    from your <a href="https://dashboard.kiln.fi/">Kiln dashboard</a>
    (applications section). If you don't have access to our dashboard,
    please get in touch at hello@kiln.fi.

    Once you have your API token, you can set it as a bearer token in
    your HTTP request headers, and target the Kiln API endpoint with
    the current MAJOR version of the API as a prefix to routes:

    <blockquote>
    curl "https://api.kiln.fi/v1/..." -H "Authorization: Bearer $KILN_API_TOKEN"
    </blockquote>

    <i>
    If you need a development environment, please reach out to
    hello@kiln.fi to have a specific access to our testnet environment
    and dedicated API endpoint.
    </i>

    ### VERSIONING

    Versions of the Kiln API use <b>MAJOR.MINOR.PATCH</b> where:

    - <b>MAJOR</b> version is increased when there is major
      incompatible API changes, major versions will be communicated in
      advance to all customers with a smooth transition path that
      spans over a minimum period of 3 MINOR versions or ~3
      months. <i>Intended frequency: 1 year</i>.
    - <b>MINOR</b> version is increased for backward compatible API
      changes without notice, or communicated breaking changes with a
      1 minor version notice and a smooth migration path. Minor
      versions will be communicated regularly to customers with the
      changelog. <i>Intended frequency: 1 month</i>.
    - <b>PATCH</b> version is increased for backward compatible
      hot-fixes, patch versions will be communicated to affected
      customers.

    <i>
    Due to the nature of blockchains (protocol disappearing,
    breaking protocol upgrades), Kiln may introduce
    backward-incompatible changes in MINOR versions after following
    a 1 MINOR version deprecation path (~1 month). These impacting
    changes will be narrowed as much as possible to the protocol,
    heavily communicated with clear guidelines and support. Customer
    not relying on affected protocols will not be affected.
    </i>

    ### BACKWARD COMPATIBILITY

    Kiln considers the following changes to be backward compatible:

    - Adding new API routes.
    - Adding new optional request parameters to existing API methods.
    - Adding new properties to existing API responses.
    - Changing the order of properties in existing API responses.
    - Adding new event types in existing enums.

    Non-breaking changes may be introduced in our API and subject to
    modification before being officialy communicated and documented
    here. Your application should not depend on them until part of
    this specification. The preview Kiln API specifications with
    upcoming and experimental new features can be found
    [here](/preview.html).

    ### REWARDS BEHAVIOR

    - No `start_date`: Returns rewards from validator activation date.
    - No `end_date`: Returns rewards up to yesterday.
  termsOfService: https://kiln.fi/
  contact:
    email: contact@kiln.fi
  license:
    name: Apache 2.0
    url: http://www.apache.org/licenses/LICENSE-2.0.html
  version: Preview
servers:
  - url: https://api.kiln.fi/v1
  - url: https://api.testnet.kiln.fi/v1
tags:
  - name: Accounts
    description: Manage your Kiln accounts. Accounts are like folders in which you can organize your stakes or clients' stakes. An account can contain stakes on multiple protocols.
  - name: Organizations
    description: Manage your Kiln organizations.
  - name: Babylon (BBN)
    description: Staking facilities for the Babylon protocol
  - name: Cardano (ADA)
    description: Staking facilities for the Cardano protocol
  - name: Celestia (TIA)
    description: Staking facilities for the Celestia protocol
  - name: Cosmos (ATOM)
    description: Staking facilities for the ATOM protocol
  - name: Cronos (CRO)
    description: Staking facilities for the Cronos protocol
  - name: DeFi
    description: Facilities for the DeFi protocols
  - name: Deployments
    description: Get deployments of the current organization
  - name: DyDx (DYDX)
    description: Staking facilities for the DYDX protocol
  - name: Ethereum (EigenLayer)
    description: ReStaking facilities for EigenLayer
  - name: Ethereum (ETH)
    description: Staking facilities for the Ethereum protocol
  - name: Ethereum (OnChain)
    description: Staking facilities for OnChain v1 & v2
  - name: Fetch.ai (FET)
    description: Staking facilities for the Fetch.IA protocol
  - name: Injective (INJ)
    description: Staking facilities for the Injective protocol
  - name: Kava (KAVA)
    description: Staking facilities for the Kava protocol
  - name: Kusama (KSM)
    description: Staking facilities for the Kusama protocol
  - name: Mantra (OM)
    description: Staking facilities for the Mantra protocol
  - name: MultiversX (EGLD)
    description: Staking facilities for the MultiversX protocol
  - name: Near (NEAR)
    description: Staking facilities for the Near protocol
  - name: Noble (NOBLE)
    description: Staking facilities for the Noble protocol
  - name: Osmosis (OSMO)
    description: Staking facilities for the OSMO protocol
  - name: Polkadot (DOT)
    description: Staking facilities for the Polkadot protocol
  - name: Polygon (MATIC)
    description: Deprecated endpoints that will be removed in a future version. Please use POL endpoints instead. Staking facilities for the Polygon protocol.
  - name: Polygon (POL)
    description: Staking facilities for the Polygon protocol
  - name: Positions
  - name: Solana (SOL)
    description: Staking facilities for the Solana protocol
  - name: Tezos (XTZ)
    description: Staking facilities for the Tezos protocol
  - name: The Open Network (TON)
    description: Staking facilities for the The Open Network protocol
  - name: Tron (TRX)
    description: Staking facilities for the Tron protocol
  - name: ZetaChain (ZETA)
    description: Staking facilities for the ZetaChain protocol
paths:
  /accounts:
    get:
      tags:
        - Accounts
      summary: Accounts
      description: Retrieve accounts in your organization
      operationId: getAccounts
      responses:
        '200':
          description: Successful operation
          content:
            application/json; charset=utf-8:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/AccountsResponse'
        '401':
          description: Unauthorized
        '500':
          description: Internal server error
    post:
      tags:
        - Accounts
      summary: Accounts
      description: Create a new account in your organization
      operationId: postAccount
      requestBody:
        description: Account to create
        required: true
        content:
          application/json; charset=utf-8:
            schema:
              $ref: '#/components/schemas/AccountPayload'
      responses:
        '201':
          description: Successful operation
          content:
            application/json; charset=utf-8:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/Account'
        '400':
          description: Invalid parameters
        '401':
          description: Unauthorized
        '500':
          description: Internal server error
  /accounts/{id}:
    get:
      tags:
        - Accounts
      summary: Account
      description: Retrieve an account in your organization
      operationId: getAccount
      parameters:
        - $ref: '#/components/parameters/AccountIdParam'
      responses:
        '200':
          description: Successful operation
          content:
            application/json; charset=utf-8:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/Account'
        '401':
          description: Unauthorized
        '500':
          description: Internal server error
    put:
      tags:
        - Accounts
      summary: Account
      description: Update an account in your organization
      operationId: putAccount
      parameters:
        - $ref: '#/components/parameters/AccountIdParam'
      requestBody:
        description: Account to update
        required: true
        content:
          application/json; charset=utf-8:
            schema:
              $ref: '#/components/schemas/AccountPayload'
      responses:
        '200':
          description: Successful operation
          content:
            application/json; charset=utf-8:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/Account'
        '400':
          description: Invalid parameters
        '401':
          description: Unauthorized
        '500':
          description: Internal server error
    delete:
      tags:
        - Accounts
      summary: Account
      description: Delete an account in your organization
      operationId: deleteAccount
      parameters:
        - $ref: '#/components/parameters/AccountIdParam'
      responses:
        '200':
          description: Successful operation
          content:
            application/json; charset=utf-8:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/Account'
        '401':
          description: Unauthorized
        '500':
          description: Internal server error
  /accounts/{id}/portfolio:
    get:
      tags:
        - Accounts
      summary: Account Portfolio
      description: Retrieve an account asset portfolio. USD balances are calculated based on recent asset prices. We use CoinGecko API to retrieve asset prices. The data is cached for 24h but it is possible to get real time data by using the refresh parameter.
      operationId: getAccountPortfolio
      parameters:
        - $ref: '#/components/parameters/AccountIdParam'
        - $ref: '#/components/parameters/RefreshParam'
      responses:
        '200':
          description: Successful operation
          content:
            application/json; charset=utf-8:
              schema:
                type: object
                required:
                  - data
                properties:
                  data:
                    $ref: '#/components/schemas/Portfolio'
        '401':
          description: Unauthorized
        '500':
          description: Internal server error
  /accounts/{id}/reports:
    get:
      tags:
        - Accounts
      summary: Account Report
      description: Get report of the account's stakes.
      operationId: getAccountReports
      parameters:
        - $ref: '#/components/parameters/AccountIdParam'
      responses:
        '200':
          description: Successful operation
          content:
            application/octet-stream:
              schema:
                type: string
                format: binary
                example: ...
        '401':
          description: Unauthorized
        '500':
          description: Internal server error
  /organizations/{id}/portfolio:
    get:
      tags:
        - Organizations
      summary: Organization Portfolio
      description: Retrieve an organization asset portfolio. USD balances are calculated based on recent asset prices. We use CoinGecko API to retrieve asset prices. The data is cached for 24h but it is possible to get real time data by using the refresh parameter.
      operationId: getOrganizationPortfolio
      parameters:
        - $ref: '#/components/parameters/OrganizationIdParam'
        - $ref: '#/components/parameters/RefreshParam'
      responses:
        '200':
          description: Successful operation
          content:
            application/json; charset=utf-8:
              schema:
                type: object
                required:
                  - data
                properties:
                  data:
                    $ref: '#/components/schemas/Portfolio'
        '401':
          description: Unauthorized
        '500':
          description: Internal server error
  /organizations/{id}/reports:
    get:
      tags:
        - Organizations
      summary: Organization Report
      description: Get report of the organization's stakes.
      operationId: getOrganizationReports
      parameters:
        - $ref: '#/components/parameters/OrganizationIdParam'
      responses:
        '200':
          description: Successful operation
          content:
            application/octet-stream:
              schema:
                type: string
                format: binary
                example: ...
        '401':
          description: Unauthorized
        '500':
          description: Internal server error
  /deployments:
    get:
      tags:
        - Deployments
      summary: Deployments
      description: Get deployments of the current organization
      operationId: getDeployments
      responses:
        '200':
          description: Successful operation
          content:
            application/json; charset=utf-8:
              schema:
                type: object
                required:
                  - data
                properties:
                  data:
                    type: array
                    items:
                      $ref: '#/components/schemas/Deployment'
        '401':
          description: Unauthorized
        '500':
          description: Internal server error
  /eth/stakes:
    get:
      tags:
        - Ethereum (ETH)
      summary: Stakes
      description: Get the status of Ethereum stakes.
      operationId: getEthStakes
      parameters:
        - $ref: '#/components/parameters/ETHValidatorsParam'
        - $ref: '#/components/parameters/ETHScopeParam'
        - $ref: '#/components/parameters/ETHWalletsParam'
        - $ref: '#/components/parameters/ETHProxiesParam'
        - $ref: '#/components/parameters/ETHWithdrawalCredentialsParam'
        - $ref: '#/components/parameters/ETHValidatorIndexesParam'
        - $ref: '#/components/parameters/ETHIncludeEigenLayerParam'
        - $ref: '#/components/parameters/AccountsParam'
        - $ref: '#/components/parameters/PaginationPageParam'
        - $ref: '#/components/parameters/PaginationPageSizeParam'
        - $ref: '#/components/parameters/FilterStatesParam'
      responses:
        '200':
          description: Successful operation
          content:
            application/json; charset=utf-8:
              schema:
                type: object
                required:
                  - data
                properties:
                  data:
                    type: array
                    items:
                      $ref: '#/components/schemas/ETHStake'
                  pagination:
                    $ref: '#/components/schemas/Pagination'
        '400':
          description: Invalid parameters
        '401':
          description: Unauthorized
        '500':
          description: Internal server error
    post:
      tags:
        - Ethereum (ETH)
      summary: Create stakes
      description: Link ETH stakes to a Kiln account
      operationId: postEthStakes
      requestBody:
        description: Stakes to create
        required: true
        content:
          application/json; charset=utf-8:
            schema:
              $ref: '#/components/schemas/PostETHStakesPayload'
      responses:
        '201':
          description: Successful operation
          content:
            application/json; charset=utf-8:
              schema:
                type: object
                properties:
                  data:
                    type: array
                    items:
                      $ref: '#/components/schemas/ETHStake'
                  pagination:
                    $ref: '#/components/schemas/Pagination'
        '400':
          description: Invalid parameters
        '401':
          description: Unauthorized
        '500':
          description: Internal server error
  /eth/rewards:
    get:
      tags:
        - Ethereum (ETH)
      summary: Rewards
      description: Get historical rewards by day of Ethereum stakes
      operationId: getEthRewards
      parameters:
        - $ref: '#/components/parameters/ETHValidatorsParam'
        - $ref: '#/components/parameters/ETHScopeParam'
        - $ref: '#/components/parameters/ETHWalletsParam'
        - $ref: '#/components/parameters/ETHProxiesParam'
        - $ref: '#/components/parameters/ETHValidatorIndexesParam'
        - $ref: '#/components/parameters/AccountsParam'
        - $ref: '#/components/parameters/StartDateParam'
        - $ref: '#/components/parameters/EndDateParam'
        - $ref: '#/components/parameters/IncludeUSDParam'
      responses:
        '200':
          description: Successful operation
          content:
            application/json; charset=utf-8:
              schema:
                type: object
                required:
                  - data
                properties:
                  data:
                    type: array
                    items:
                      $ref: '#/components/schemas/ETHReward'
              examples:
                rewards:
                  value:
                    data:
                      - date: 2023-01-15,
                        consensus_rewards: 2988504000000000,
                        execution_rewards: 0,
                        mev_execution_rewards: 0,
                        non_mev_execution_rewards: 0,
                        median_execution_reward: 0,
                        rewards: 2988504000000000,
                        stake_balance: 64000000000000000000,
                        gross_apy: 3.407,
                        cl_apy: 3.407,
                        el_apy: 0,
                        active_validator_count: 152636.33,
                        rewards_usd: 0,
                        stake_balance_usd: 0
                      - date: 2023-01-16,
                        consensus_rewards: 2954604000000000,
                        execution_rewards: 0,
                        mev_execution_rewards: 0,
                        non_mev_execution_rewards: 0,
                        median_execution_reward: 0,
                        rewards: 2954604000000000,
                        stake_balance: 64000000000000000000,
                        gross_apy: 3.407,
                        cl_apy: 3.407,
                        el_apy: 0,
                        active_validator_count: 152636.33,
                        rewards_usd: 0,
                        stake_balance_usd: 0
        '400':
          description: Invalid parameters
        '401':
          description: Unauthorized
        '500':
          description: Internal server error
  /eth/operations:
    get:
      tags:
        - Ethereum (ETH)
      summary: Operations
      description: Get the operations of Ethereum stakes
      operationId: getEthOperations
      parameters:
        - $ref: '#/components/parameters/ETHValidatorsParam'
        - $ref: '#/components/parameters/ETHWalletsParam'
        - $ref: '#/components/parameters/ETHProxiesParam'
        - $ref: '#/components/parameters/ETHValidatorIndexesParam'
        - $ref: '#/components/parameters/AccountsParam'
        - $ref: '#/components/parameters/StartDateParam'
        - $ref: '#/components/parameters/EndDateParam'
      responses:
        '200':
          description: Successful operation
          content:
            application/json; charset=utf-8:
              schema:
                type: object
                properties:
                  data:
                    type: array
                    items:
                      anyOf:
                        - $ref: '#/components/schemas/ETHOperationDeposit'
                        - $ref: '#/components/schemas/ETHOperationConsensusWithdrawal'
                        - $ref: '#/components/schemas/ETHOperationExecutionReward'
                        - $ref: '#/components/schemas/ETHOperationKilnExitRequest'
                        - $ref: '#/components/schemas/ETHOperationLidoExitRequest'
                        - $ref: '#/components/schemas/ETHOperationRioExitRequest'
                        - $ref: '#/components/schemas/ETHOperationVoluntaryExit'
                      discriminator:
                        propertyName: type
                        mapping:
                          deposit: '#/components/schemas/ETHOperationDeposit'
                          consensus_withdrawal: '#/components/schemas/ETHOperationConsensusWithdrawal'
                          execution_reward: '#/components/schemas/ETHOperationExecutionReward'
                          kiln_exit_request: '#/components/schemas/ETHOperationKilnExitRequest'
                          lido_exit_request: '#/components/schemas/ETHOperationLidoExitRequest'
                          rio_exit_request: '#/components/schemas/ETHOperationRioExitRequest'
                          voluntary_exit: '#/components/schemas/ETHOperationVoluntaryExit'
        '400':
          description: Invalid parameters
        '401':
          description: Unauthorized
        '500':
          description: Internal server error
  /eth/network-stats:
    get:
      tags:
        - Ethereum (ETH)
      summary: Network Stats
      description: Get some network statistics on Ethereum staking.
      operationId: getEthNetworkStats
      responses:
        '200':
          description: Successful operation
          content:
            application/json; charset=utf-8:
              schema:
                type: object
                required:
                  - data
                properties:
                  data:
                    $ref: '#/components/schemas/ETHNetworkStats'
        '400':
          description: Invalid parameters
        '401':
          description: Unauthorized
        '500':
          description: Internal server error
  /eth/kiln-stats:
    get:
      tags:
        - Ethereum (ETH)
      summary: Kiln Stats
      description: Get some Kiln statistics on Ethereum staking
      operationId: getEthKilnStats
      responses:
        '200':
          description: Successful operation
          content:
            application/json; charset=utf-8:
              schema:
                type: object
                required:
                  - data
                properties:
                  data:
                    $ref: '#/components/schemas/ETHKilnStats'
        '400':
          description: Invalid parameters
        '401':
          description: Unauthorized
        '500':
          description: Internal server error
  /eth/keys:
    post:
      tags:
        - Ethereum (ETH)
      summary: Validation Keys
      description: |
        Create Ethereum native validation keys on Kiln's infrastructure.
      operationId: postEthKeys
      requestBody:
        description: Ethereum keys to generate
        required: true
        content:
          application/json; charset=utf-8:
            schema:
              $ref: '#/components/schemas/ETHPostKeysPayload'
      responses:
        '201':
          description: Successful operation
          content:
            application/json; charset=utf-8:
              schema:
                type: object
                required:
                  - data
                properties:
                  data:
                    anyOf:
                      - $ref: '#/components/schemas/ETHPostKeysCliResponse'
                      - $ref: '#/components/schemas/ETHPostKeysBatchResponse'
        '400':
          description: Invalid parameters
        '401':
          description: Unauthorized
        '500':
          description: Internal server error
  /eth/transaction/stake:
    post:
      tags:
        - Ethereum (ETH)
      summary: Stake Transaction
      description: Generates an Ethereum EIP 1559 stake transaction
      operationId: postEthStakeTx
      requestBody:
        description: Transaction to craft
        required: true
        content:
          application/json; charset=utf-8:
            schema:
              $ref: '#/components/schemas/ETHCraftStakeTxPayload'
      responses:
        '200':
          description: Successful operation
          content:
            application/json; charset=utf-8:
              schema:
                type: object
                required:
                  - data
                properties:
                  data:
                    $ref: '#/components/schemas/ETHUnsignedTx'
        '400':
          description: Invalid parameters
        '401':
          description: Unauthorized
        '500':
          description: Internal server error
  /eth/transaction/prepare:
    post:
      tags:
        - Ethereum (ETH)
      summary: Prepare Transaction
      description: Prepare an Ethereum transaction for broadcasting. It takes a serialized transaction and its signatures and returns a serialized signed transaction that can be broadcasted.
      operationId: postEthPrepareTx
      requestBody:
        description: Transaction to prepare
        required: true
        content:
          application/json; charset=utf-8:
            schema:
              $ref: '#/components/schemas/ETHPrepareTxPayload'
      responses:
        '200':
          description: Successful operation
          content:
            application/json; charset=utf-8:
              schema:
                type: object
                required:
                  - data
                properties:
                  data:
                    $ref: '#/components/schemas/ETHSignedTx'
        '400':
          description: Invalid parameters
        '401':
          description: Unauthorized
        '500':
          description: Internal server error
  /eth/transaction/broadcast:
    post:
      tags:
        - Ethereum (ETH)
      summary: Broadcast Transaction
      description: Broadcasts a signed Ethereum transaction
      operationId: postEthBroadcastTx
      requestBody:
        description: Transaction to broadcast
        required: true
        content:
          application/json; charset=utf-8:
            schema:
              $ref: '#/components/schemas/ETHBroadcastTxPayload'
      responses:
        '200':
          description: Successful operation
          content:
            application/json; charset=utf-8:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/ETHBroadcastedTx'
        '400':
          description: Invalid parameters
        '401':
          description: Unauthorized
        '500':
          description: Internal server error
  /eth/transaction/status:
    get:
      tags:
        - Ethereum (ETH)
      summary: Transaction Status
      description: Get the status of an Ethereum transaction
      operationId: getEthTxStatus
      parameters:
        - name: tx_hash
          in: query
          description: Hash of the transaction
          required: true
          style: form
          explode: false
          schema:
            type: string
            example: '0x43244f90814b31dec250de24df5bb023a338790c1d5a39244cf1064cf6d98c94'
      responses:
        '200':
          description: Successful operation
          content:
            application/json; charset=utf-8:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/ETHTxStatus'
        '400':
          description: Invalid parameters
        '401':
          description: Unauthorized
        '500':
          description: Internal server error
  /eth/transaction/exit-request:
    post:
      tags:
        - Ethereum (ETH)
      summary: Request Exit
      description: Generates an Ethereum EIP 1559 request-exit transaction
      operationId: postEthRequestExitTx
      requestBody:
        description: Transaction to craft
        required: true
        content:
          application/json; charset=utf-8:
            schema:
              $ref: '#/components/schemas/ETHCraftRequestExitTxPayload'
      responses:
        '200':
          description: Successful operation
          content:
            application/json; charset=utf-8:
              schema:
                type: object
                required:
                  - data
                properties:
                  data:
                    $ref: '#/components/schemas/ETHUnsignedTx'
        '400':
          description: Invalid parameters
        '401':
          description: Unauthorized
        '500':
          description: Internal server error
  /eth/transaction/decode:
    get:
      tags:
        - Ethereum (ETH)
      summary: Transaction Decoding
      description: Decode a transaction
      operationId: getEthTxDecoding
      parameters:
        - name: tx_serialized
          in: query
          description: Raw transaction to decode
          required: true
          style: form
          explode: false
          schema:
            type: string
            example: 02f902dc058202978477359400847735940a830223d4945fadfdb7efffd3b4aa03f0f29d9200cf5f191f318901bc16d674ec800000b902a4ca0bfcce0000000000000000000000000000000000000000000000000000000000000080000000000000000000000000000000000000000000000000000000000000012000000000000000000000000000000000000000000000000000000000000001a0000000000000000000000000000000000000000000000000000000000000026000000000000000000000000000000000000000000000000000000000000000010000000000000000000000000000000000000000000000000000000000000020000000000000000000000000000000000000000000000000000000000000003084eefa87510e735d0e6db65fde2c940517c197f252a0e40b90adf693d7198fa8c610a7b710b5fcaa54fe0dbbc87c0bb500000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000100000000000000000000000000000000000000000000000000000000000000200000000000000000000000000000000000000000000000000000000000000020010000000000000000000000bc86717bad3f8ccf86d2882a6bc351c94580a994000000000000000000000000000000000000000000000000000000000000000100000000000000000000000000000000000000000000000000000000000000200000000000000000000000000000000000000000000000000000000000000060b15db0eddc3bdd62a10ec61ff120a6870d176b55249beab45223659547610e688195189e4f614447e68bfe055d903d1a0a74d82af486d01cfd75b9469fcdf776d99ef633ca3797c8670608a5f391f61694ae61f5573f79c90ea719fbe0d23c2d0000000000000000000000000000000000000000000000000000000000000001fb0c78163db38377fbe3e570d5a29ef4345b73087b9f60ec46a06589f6a6bb19c0808080
      responses:
        '200':
          description: Successful operation
          content:
            application/json; charset=utf-8:
              schema:
                type: object
                description: Decoded transaction
                example:
                  r: '0x0000000000000000000000000000000000000000000000000000000000000000'
                  s: '0x0000000000000000000000000000000000000000000000000000000000000000'
                  v: '27'
                  yParity: 0
                  chainId: 5
                  type: eip1559
                  to: '0x5fadfdb7efffd3b4aa03f0f29d9200cf5f191f31'
                  gas: '140244'
                  data: '0xca0bfcce0000000000000000000000000000000000000000000000000000000000000080000000000000000000000000000000000000000000000000000000000000012000000000000000000000000000000000000000000000000000000000000001a0000000000000000000000000000000000000000000000000000000000000026000000000000000000000000000000000000000000000000000000000000000010000000000000000000000000000000000000000000000000000000000000020000000000000000000000000000000000000000000000000000000000000003084eefa87510e735d0e6db65fde2c940517c197f252a0e40b90adf693d7198fa8c610a7b710b5fcaa54fe0dbbc87c0bb500000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000100000000000000000000000000000000000000000000000000000000000000200000000000000000000000000000000000000000000000000000000000000020010000000000000000000000bc86717bad3f8ccf86d2882a6bc351c94580a994000000000000000000000000000000000000000000000000000000000000000100000000000000000000000000000000000000000000000000000000000000200000000000000000000000000000000000000000000000000000000000000060b15db0eddc3bdd62a10ec61ff120a6870d176b55249beab45223659547610e688195189e4f614447e68bfe055d903d1a0a74d82af486d01cfd75b9469fcdf776d99ef633ca3797c8670608a5f391f61694ae61f5573f79c90ea719fbe0d23c2d0000000000000000000000000000000000000000000000000000000000000001fb0c78163db38377fbe3e570d5a29ef4345b73087b9f60ec46a06589f6a6bb19'
                  nonce: 663
                  value: '32000000000000000000'
                  maxFeePerGas: '2000000010'
                  maxPriorityFeePerGas: '2000000000'
                  functionName: batchDeposit
                  args:
                    - - '0x84eefa87510e735d0e6db65fde2c940517c197f252a0e40b90adf693d7198fa8c610a7b710b5fcaa54fe0dbbc87c0bb5'
                    - - '0x010000000000000000000000bc86717bad3f8ccf86d2882a6bc351c94580a994'
                    - - '0xb15db0eddc3bdd62a10ec61ff120a6870d176b55249beab45223659547610e688195189e4f614447e68bfe055d903d1a0a74d82af486d01cfd75b9469fcdf776d99ef633ca3797c8670608a5f391f61694ae61f5573f79c90ea719fbe0d23c2d'
                    - - '0xfb0c78163db38377fbe3e570d5a29ef4345b73087b9f60ec46a06589f6a6bb19'
        '400':
          description: Invalid parameters
        '401':
          description: Unauthorized
        '500':
          description: Internal server error
  /eth/reports:
    get:
      tags:
        - Ethereum (ETH)
      summary: Excel Reports
      description: Generates an Excel report sheet for your stakes and rewards
      operationId: getEthReports
      parameters:
        - $ref: '#/components/parameters/ETHValidatorsParam'
        - $ref: '#/components/parameters/ETHWalletsParam'
        - $ref: '#/components/parameters/AccountsParam'
      responses:
        '200':
          description: Successful operation
          content:
            application/octet-stream:
              schema:
                type: string
                format: binary
                example: ...
        '400':
          description: Invalid parameters
        '401':
          description: Unauthorized
        '500':
          description: Internal server error
  /eth/exit-messages:
    get:
      tags:
        - Ethereum (ETH)
      summary: Exit Messages
      description: Get encrypted exit message for a validator
      operationId: getExitMessage
      parameters:
        - $ref: '#/components/parameters/ETHValidatorsParam'
      responses:
        '200':
          description: Successful operation
          content:
            application/json; charset=utf-8:
              schema:
                type: object
                properties:
                  data:
                    type: array
                    items:
                      $ref: '#/components/schemas/ETHExitMessage'
        '400':
          description: Invalid parameters
        '401':
          description: Unauthorized
        '500':
          description: Internal server error
  /eth/eigenlayer/eigenpod:
    get:
      tags:
        - Ethereum (EigenLayer)
      summary: EigenLayer EigenPod
      description: Get the EigenPod of the given wallet
      operationId: getEigenLayerEigenPod
      parameters:
        - $ref: '#/components/parameters/ETHEigenLayerRequiredWalletParam'
      responses:
        '200':
          description: Successful operation
          content:
            application/json; charset=utf-8:
              schema:
                type: object
                required:
                  - data
                properties:
                  data:
                    example: '0x991c468AbcE2b4DD627a6210C145373EbABdd186'
                    description: The EigenPod address of the given wallet
                    type: string
        '400':
          description: Invalid parameters
        '401':
          description: Unauthorized
        '500':
          description: Internal server error
  /eth/eigenlayer/operator:
    get:
      tags:
        - Ethereum (EigenLayer)
      summary: EigenLayer Operator
      description: Get information about an EigenLayer Operator
      operationId: getEigenLayerOperator
      parameters:
        - $ref: '#/components/parameters/ETHEigenLayerOperatorParam'
      responses:
        '200':
          description: Successful operation
          content:
            application/json; charset=utf-8:
              schema:
                type: object
                required:
                  - data
                properties:
                  data:
                    $ref: '#/components/schemas/ETHEigenLayerOperator'
        '400':
          description: Invalid parameters
        '401':
          description: Unauthorized
        '500':
          description: Internal server error
  /eth/eigenlayer/summary:
    get:
      tags:
        - Ethereum (EigenLayer)
      summary: EigenLayer Summary
      description: Get a summary of your wallet on EigenLayer
      operationId: getEigenLayerSummary
      parameters:
        - $ref: '#/components/parameters/ETHEigenLayerWalletParam'
        - $ref: '#/components/parameters/ETHEigenLayerEigenPodParam'
      responses:
        '200':
          description: Successful operation
          content:
            application/json; charset=utf-8:
              schema:
                type: object
                required:
                  - data
                properties:
                  data:
                    $ref: '#/components/schemas/ETHEigenLayerSummary'
        '400':
          description: Invalid parameters
        '401':
          description: Unauthorized
        '500':
          description: Internal server error
  /eth/eigenlayer/avs-rewards:
    get:
      tags:
        - Ethereum (EigenLayer)
      summary: EigenLayer AVS rewards
      description: Get the claimable AVS rewards of a wallet
      operationId: getEigenLayerAvsRewards
      parameters:
        - $ref: '#/components/parameters/ETHEigenLayerRequiredWalletParam'
      responses:
        '200':
          description: Successful operation
          content:
            application/json; charset=utf-8:
              schema:
                type: object
                required:
                  - data
                properties:
                  data:
                    type: array
                    items:
                      $ref: '#/components/schemas/ETHEigenLayerAvsReward'
        '400':
          description: Invalid parameters
        '401':
          description: Unauthorized
        '500':
          description: Internal server error
  /eth/eigenlayer/native/points:
    get:
      deprecated: true
      tags:
        - Ethereum (EigenLayer)
      summary: EigenLayer Native Points
      description: Get restaked points of your EigenPod
      operationId: getEigenLayerNativePoints
      parameters:
        - $ref: '#/components/parameters/ETHEigenLayerWalletParam'
        - $ref: '#/components/parameters/ETHEigenLayerEigenPodParam'
      responses:
        '200':
          description: Successful operation
          content:
            application/json; charset=utf-8:
              schema:
                type: object
                required:
                  - data
                properties:
                  data:
                    $ref: '#/components/schemas/ETHEigenLayerNativePoints'
        '400':
          description: Invalid parameters
        '401':
          description: Unauthorized
        '500':
          description: Internal server error
  /eth/eigenlayer/native/undelegations:
    get:
      tags:
        - Ethereum (EigenLayer)
      summary: EigenLayer Native Undelegations
      description: Get undelegations of your EigenPod
      operationId: getEigenLayerNativeUndelegations
      parameters:
        - $ref: '#/components/parameters/ETHEigenLayerWalletParam'
        - $ref: '#/components/parameters/ETHEigenLayerEigenPodParam'
      responses:
        '200':
          description: Successful operation
          content:
            application/json; charset=utf-8:
              schema:
                type: object
                required:
                  - data
                properties:
                  data:
                    type: array
                    items:
                      $ref: '#/components/schemas/ETHEigenLayerNativeUndelegation'
        '400':
          description: Invalid parameters
        '401':
          description: Unauthorized
        '500':
          description: Internal server error
  /eth/eigenlayer/liquid/points:
    get:
      deprecated: true
      tags:
        - Ethereum (EigenLayer)
      summary: EigenLayer Liquid Points
      description: Get restaked points of your Liquid Staking Tokens
      operationId: getEigenLayerLiquidPoints
      parameters:
        - $ref: '#/components/parameters/ETHEigenLayerRequiredWalletParam'
      responses:
        '200':
          description: Successful operation
          content:
            application/json; charset=utf-8:
              schema:
                type: object
                required:
                  - data
                properties:
                  data:
                    $ref: '#/components/schemas/ETHEigenLayerLiquidPoints'
        '400':
          description: Invalid parameters
        '401':
          description: Unauthorized
        '500':
          description: Internal server error
  /eth/eigenlayer/liquid/deposits:
    get:
      tags:
        - Ethereum (EigenLayer)
      summary: EigenLayer Liquid Deposits
      description: Get deposits of Liquid staking tokens on EigenLayer
      operationId: getEigenLayerLiquidDeposits
      parameters:
        - $ref: '#/components/parameters/ETHEigenLayerRequiredWalletParam'
      responses:
        '200':
          description: Successful operation
          content:
            application/json; charset=utf-8:
              schema:
                type: object
                required:
                  - data
                properties:
                  data:
                    type: array
                    items:
                      $ref: '#/components/schemas/ETHEigenLayerLiquidDeposit'
        '400':
          description: Invalid parameters
        '401':
          description: Unauthorized
        '500':
          description: Internal server error
  /eth/eigenlayer/liquid/withdrawals:
    get:
      tags:
        - Ethereum (EigenLayer)
      summary: EigenLayer Liquid Withdrawals
      description: Get withdrawals of your Liquid Staking Tokens
      operationId: getEigenLayerWithdrawals
      parameters:
        - $ref: '#/components/parameters/ETHEigenLayerRequiredWalletParam'
      responses:
        '200':
          description: Successful operation
          content:
            application/json; charset=utf-8:
              schema:
                type: object
                required:
                  - data
                properties:
                  data:
                    type: array
                    items:
                      $ref: '#/components/schemas/ETHEigenLayerLiquidWithdrawal'
        '400':
          description: Invalid parameters
        '401':
          description: Unauthorized
        '500':
          description: Internal server error
  /eth/eigenlayer/transaction/claim-rewards:
    post:
      tags:
        - Ethereum (EigenLayer)
      summary: EigenLayer Generate Claim Rewards Transaction
      description: Craft a processClaim transaction to retrieve AVS rewards
      operationId: postEigenLayerClaimRewardsTx
      requestBody:
        required: true
        content:
          application/json; charset=utf-8:
            schema:
              type: object
              required:
                - earner_address
              properties:
                earner_address:
                  description: Address that earned the rewards
                  type: string
                  example: '0x11ed089a9715aDB1e294A73f4e8C40A7a455b6d3'
                receiver_address:
                  description: Address that will receive the rewards, if not provided, the `earner_address` will be used.
                  type: string
                  example: '0x11ed089a9715aDB1e294A73f4e8C40A7a455b6d3'
                token_addresses:
                  description: Array of ERC20 token addresses for which you have unclaimed rewards. If not provided, we will automatically process all tokens with rewards available to you.
                  example:
                    - '0x0E859E11bD289e8983f4E78f3503b26F192A7a95'
                    - '0x3B78576F7D6837500bA3De27A60c7f594934027E'
                  type: array
                  items:
                    type: string
                    description: ERC20 token address
      responses:
        '200':
          description: Successful operation
          content:
            application/json; charset=utf-8:
              schema:
                type: object
                required:
                  - data
                properties:
                  data:
                    $ref: '#/components/schemas/ETHUnsignedTx'
        '400':
          description: Invalid parameters or No rewards to claim
          content:
            application/json; charset=utf-8:
              example:
                message: No rewards to claim.
        '401':
          description: Unauthorized
        '500':
          description: Internal server error
  /eth/eigenlayer/transaction/verify-checkpoint-proofs:
    post:
      tags:
        - Ethereum (EigenLayer)
      summary: EigenLayer Generate Checkpoint Proofs Transaction
      description: Craft a verifyCheckpointProofs transaction to verify the given validators
      operationId: postEigenLayerVerifyCheckpointProofsTx
      requestBody:
        required: true
        content:
          application/json; charset=utf-8:
            schema:
              type: object
              required:
                - wallet
              properties:
                wallet:
                  description: Address of the EigenPod owner
                  type: string
                  example: '0x7fF0B7D8b99E4cD685355A786B6ad5287B6552C1'
                validator_indexes:
                  description: Array of validator indexes to process, they must have their `withdrawal_credentials` pointed to the EigenPod of the given `wallet`. If not provided, all validators with `withdrawal_credentials` pointed to the EigenPod of the provided `wallet` will be processed
                  example:
                    - 1659766
                    - 1659767
                  type: array
                  items:
                    type: integer
                    description: Validator index
      responses:
        '200':
          description: Successful operation
          content:
            application/json; charset=utf-8:
              schema:
                type: object
                required:
                  - data
                properties:
                  data:
                    $ref: '#/components/schemas/ETHUnsignedTx'
        '400':
          description: Invalid parameters or No more checkpoint proofs to process
          content:
            application/json; charset=utf-8:
              example:
                message: No checkpoint proofs to process.
        '401':
          description: Unauthorized
        '500':
          description: Internal server error
  /eth/eigenlayer/transaction/verify-withdrawal-credentials:
    post:
      tags:
        - Ethereum (EigenLayer)
      summary: EigenLayer Restake Transaction
      description: Craft a verifyWithdrawalCredentials transaction to restake the given validators
      operationId: postEigenLayerVerifyWithdrawalCredentialsTx
      requestBody:
        required: true
        content:
          application/json; charset=utf-8:
            schema:
              type: object
              required:
                - wallet
              properties:
                wallet:
                  description: Address of the EigenPod owner
                  type: string
                  example: '0x7fF0B7D8b99E4cD685355A786B6ad5287B6552C1'
                validator_indexes:
                  description: Array of validator indexes to restake, they must have their `withdrawal_credentials` pointed to the EigenPod of the given wallet. If not provided, all validators with `withdrawal_credentials` pointed to the provided EigenPod will be processed
                  type: array
                  items:
                    type: integer
                    description: Validator index
                    example: 1
      responses:
        '200':
          description: Successful operation
          content:
            application/json; charset=utf-8:
              schema:
                type: object
                required:
                  - data
                properties:
                  data:
                    $ref: '#/components/schemas/ETHUnsignedTx'
        '400':
          description: Invalid parameters
        '401':
          description: Unauthorized
        '500':
          description: Internal server error
  /defi/stakes:
    get:
      tags:
        - DeFi
      summary: Stakes
      description: Get stakes of wallets on the given vaults
      operationId: getDefiStakes
      parameters:
        - $ref: '#/components/parameters/DefiWalletParam'
        - $ref: '#/components/parameters/DefiVaultsParam'
      responses:
        '200':
          description: Successful operation
          content:
            application/json; charset=utf-8:
              schema:
                type: object
                required:
                  - data
                properties:
                  data:
                    type: array
                    items:
                      $ref: '#/components/schemas/DefiStake'
        '401':
          description: Unauthorized
        '422':
          description: Invalid parameters
          content:
            application/json; charset=utf-8:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    description: Error message
                    example: 'The vaults.0 is invalid. It should be in the format: <network>_<address>.'
                  errors:
                    type: object
                    description: Details of all the errors
                    example:
                      vaults.0:
                        - 'The vaults.0 is invalid. It should be in the format: <network>_<address>.'
        '500':
          description: Internal server error
  /defi/operations:
    get:
      tags:
        - DeFi
      summary: Operations
      description: Get operations of wallets on the given vaults
      operationId: getDefiOperations
      parameters:
        - $ref: '#/components/parameters/DefiWalletParam'
        - $ref: '#/components/parameters/DefiVaultsParam'
      responses:
        '200':
          description: Successful operation
          content:
            application/json; charset=utf-8:
              schema:
                type: object
                required:
                  - data
                properties:
                  data:
                    type: array
                    example:
                      - type: deposit
                        assets: '1000000'
                        shares: '996951'
                        sender: '0x9d94BF9DE2f770645186814556eA3C080E68D2F4'
                        timestamp: '2024-06-12T11:37:48+00:00'
                        tx_hash: '0xae6cd6c0180dc7ea54f7ef701c20d6d7c30533e7030485f6b720284a13e00da3'
                        vault: '0x682cFC8A3d956FBA2c40791ec8d5a49E13BAaFbD'
                        owner: '0x9d94BF9DE2f770645186814556eA3C080E68D2F4'
                        chain: eth
                      - type: withdrawal
                        assets: '1000000000'
                        shares: '996995364'
                        sender: '0x821B6341bEC60Cb276fBc5E7E25d68D1ca14b180'
                        timestamp: '2024-06-11T18:43:12+00:00'
                        tx_hash: '0x6f26fdfad5b13a79dcfd2f8b1fcfe59c411a6d3ea411902f8abd217199302635'
                        vault: '0x682cFC8A3d956FBA2c40791ec8d5a49E13BAaFbD'
                        owner: '0x821B6341bEC60Cb276fBc5E7E25d68D1ca14b180'
                        chain: eth
                    items:
                      $ref: '#/components/schemas/DefiOperation'
        '401':
          description: Unauthorized
        '422':
          description: Invalid parameters
          content:
            application/json; charset=utf-8:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    description: Error message
                    example: 'The vaults.0 is invalid. It should be in the format: <network>_<address>.'
                  errors:
                    type: object
                    description: Details of all the errors
                    example:
                      vaults.0:
                        - 'The vaults.0 is invalid. It should be in the format: <network>_<address>.'
        '500':
          description: Internal server error
  /defi/network-stats:
    get:
      tags:
        - DeFi
      summary: Network Stats
      description: Get network stats of the given vaults
      operationId: getDefiNetworkStats
      parameters:
        - $ref: '#/components/parameters/DefiVaultsParam'
      responses:
        '200':
          description: Successful operation
          content:
            application/json; charset=utf-8:
              schema:
                type: object
                required:
                  - data
                properties:
                  data:
                    type: array
                    items:
                      $ref: '#/components/schemas/DefiNetworkStats'
        '401':
          description: Unauthorized
        '422':
          description: Invalid parameters
          content:
            application/json; charset=utf-8:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    description: Error message
                    example: 'The vaults.0 is invalid. It should be in the format: <network>_<address>.'
                  errors:
                    type: object
                    description: Details of all the errors
                    example:
                      vaults.0:
                        - 'The vaults.0 is invalid. It should be in the format: <network>_<address>.'
        '500':
          description: Internal server error
  /eth/onchain/v1/keys:
    post:
      tags:
        - Ethereum (OnChain)
      summary: Validation On-Chain V1 Keys
      description: |
        Create Ethereum validation keys for the Kiln On-Chain V1
        smart-contract suite. This route is for Ethereum operators
        only of the Kiln On-Chain V1 smart-contract. Use `/v1/eth/keys`
        if you want to use classic native staking.
      operationId: postEthOnChainKeys
      requestBody:
        description: Ethereum keys to generate
        required: true
        content:
          application/json; charset=utf-8:
            schema:
              $ref: '#/components/schemas/ETHPostKeysOnChainPayload'
      responses:
        '201':
          description: Successful operation
          content:
            application/json; charset=utf-8:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/ETHPostKeysCliResponse'
        '400':
          description: Invalid parameters
        '401':
          description: Unauthorized
        '500':
          description: Internal server error
  /eth/onchain/v2/keys:
    post:
      tags:
        - Ethereum (OnChain)
      summary: Validation On-Chain V2 Keys
      description: |
        Create Ethereum validation keys for the Kiln On-Chain V2
        smart-contract suite. This route is for Ethereum operators
        only of the Kiln On-Chain V2 (vSuite) smart-contract of type vNFT. Use `/v1/eth/keys` if
        you want to use  Kiln On-Chain V2 of type vPool (ERC20) or classic native staking.
      operationId: postEthVSuiteKeys
      requestBody:
        description: Ethereum keys to generate on withdrawal channel 0 (vNFT) of the vSuite contract
        required: true
        content:
          application/json; charset=utf-8:
            schema:
              $ref: '#/components/schemas/ETHPostKeysVSuitePayload'
      responses:
        '201':
          description: Successful operation
          content:
            application/json; charset=utf-8:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/ETHPostKeysCliResponse'
        '400':
          description: Invalid parameters
        '401':
          description: Unauthorized
        '500':
          description: Internal server error
  /eth/onchain/v2/stakes:
    get:
      tags:
        - Ethereum (OnChain)
      summary: On-Chain V2 Stakes
      description: Get the status of Ethereum OnChain V2 (vSuite) stakes
      operationId: getEthOnchainV2Stakes
      parameters:
        - $ref: '#/components/parameters/ETHWalletsParam'
      responses:
        '200':
          description: Successful operation
          content:
            application/json; charset=utf-8:
              schema:
                type: object
                properties:
                  data:
                    type: array
                    items:
                      $ref: '#/components/schemas/ETHOnchainV2Stake'
        '400':
          description: Invalid parameters
        '401':
          description: Unauthorized
        '500':
          description: Internal server error
  /eth/onchain/v2/operations:
    get:
      tags:
        - Ethereum (OnChain)
      summary: On-Chain V2 Operations
      description: Get the operations of Ethereum OnChain V2 (vSuite) operations
      operationId: getEthOnchainV2Operations
      parameters:
        - $ref: '#/components/parameters/ETHWalletsParam'
        - $ref: '#/components/parameters/ETHOnChainOperationIDs'
        - $ref: '#/components/parameters/StartDateParam'
        - $ref: '#/components/parameters/EndDateParam'
      responses:
        '200':
          description: Successful operation
          content:
            application/json; charset=utf-8:
              schema:
                type: object
                properties:
                  data:
                    type: array
                    items:
                      $ref: '#/components/schemas/ETHOnchainV2Operation'
        '400':
          description: Invalid parameters
        '401':
          description: Unauthorized
        '500':
          description: Internal server error
  /eth/onchain/v2/rewards:
    get:
      tags:
        - Ethereum (OnChain)
      summary: On-Chain V2 Rewards
      description: Get historical rewards of Ethereum OnChain V2 (vSuite) daily rewards
      operationId: getEthOnchainV2Rewards
      parameters:
        - $ref: '#/components/parameters/ETHWalletsParam'
        - $ref: '#/components/parameters/StartDateParam'
        - $ref: '#/components/parameters/EndDateParam'
        - $ref: '#/components/parameters/IncludeUSDParam'
        - $ref: '#/components/parameters/ETHOnChainIntegrationParam'
          required: false
      responses:
        '200':
          description: Successful operation
          content:
            application/json; charset=utf-8:
              schema:
                type: object
                required:
                  - data
                properties:
                  data:
                    type: array
                    items:
                      $ref: '#/components/schemas/ETHOnchainV2Reward'
        '400':
          description: Invalid parameters
        '401':
          description: Unauthorized
        '500':
          description: Internal server error
  /eth/onchain/v2/network-stats:
    get:
      tags:
        - Ethereum (OnChain)
      summary: On-Chain V2 Network Stats
      description: Get the network stats of Ethereum OnChain V2 (vSuite) integration
      operationId: getEthOnchainV2NetworkStats
      parameters:
        - $ref: '#/components/parameters/ETHOnChainIntegrationParam'
          required: true
      responses:
        '200':
          description: Successful operation
          content:
            application/json; charset=utf-8:
              schema:
                type: object
                required:
                  - data
                properties:
                  data:
                    $ref: '#/components/schemas/ETHOnchainV2NetworkStats'
        '400':
          description: Invalid parameters
        '401':
          description: Unauthorized
        '500':
          description: Internal server error
  /eth/onchain/v2/exit-tickets:
    get:
      tags:
        - Ethereum (OnChain)
      summary: On-Chain V2 Exit Tickets
      description: Get the exit tickets of Ethereum OnChain V2 (vSuite) integration
      operationId: getEthOnchainV2ExitTickets
      parameters:
        - $ref: '#/components/parameters/ETHWalletsParam'
          required: true
      responses:
        '200':
          description: Successful operation
          content:
            application/json; charset=utf-8:
              schema:
                type: object
                required:
                  - data
                properties:
                  data:
                    type: array
                    items:
                      $ref: '#/components/schemas/ETHOnchainV2ExitTicket'
        '400':
          description: Invalid parameters
        '401':
          description: Unauthorized
        '500':
          description: Internal server error
  /xtz/stakes:
    get:
      tags:
        - Tezos (XTZ)
      summary: Stakes
      description: Get the status of Tezos stakes
      operationId: getXtzStakes
      parameters:
        - $ref: '#/components/parameters/XTZWalletsParam'
        - $ref: '#/components/parameters/AccountsParam'
        - $ref: '#/components/parameters/XTZValidatorsParam'
      responses:
        '200':
          description: Successful operation
          content:
            application/json; charset=utf-8:
              schema:
                type: object
                required:
                  - data
                properties:
                  data:
                    type: array
                    items:
                      $ref: '#/components/schemas/XTZStake'
        '400':
          description: Invalid parameters
        '401':
          description: Unauthorized
        '500':
          description: Internal server error
  /xtz/rewards:
    get:
      tags:
        - Tezos (XTZ)
      summary: Rewards
      description: Get historical rewards of Tezos stakes
      operationId: getXtzRewards
      parameters:
        - $ref: '#/components/parameters/XTZWalletsParam'
        - $ref: '#/components/parameters/AccountsParam'
        - $ref: '#/components/parameters/XTZValidatorsParam'
        - $ref: '#/components/parameters/XTZRewardsFormatParam'
        - $ref: '#/components/parameters/StartDateParam'
        - $ref: '#/components/parameters/EndDateParam'
        - $ref: '#/components/parameters/XTZStartCycleParam'
        - $ref: '#/components/parameters/XTZEndCycleParam'
        - $ref: '#/components/parameters/IncludeUSDParam'
      responses:
        '200':
          description: Successful operation
          content:
            application/json; charset=utf-8:
              schema:
                type: object
                required:
                  - data
                properties:
                  data:
                    type: array
                    items:
                      oneOf:
                        - $ref: '#/components/schemas/XTZRewardByDay'
                        - $ref: '#/components/schemas/XTZRewardByCycle'
              examples:
                rewards:
                  value:
                    data:
                      - date: '2023-01-15'
                        rewards: '27098488'
                        active_balance: '420000000000'
                        staked_rewards: '1278500'
                        staked_balance: '1500000000'
                        net_apy: 3.42
                        rewards_usd: '12'
                        stake_balance_usd: '25400'
                      - date: '2023-01-16'
                        rewards: '27098498'
                        active_balance: '420000000000'
                        staked_rewards: '1347910'
                        staked_balance: '1501278500'
                        net_apy: 3.4
                        rewards_usd: '13'
                        stake_balance_usd: '25412'
        '400':
          description: Invalid parameters
        '401':
          description: Unauthorized
        '500':
          description: Internal server error
  /xtz/operations:
    get:
      tags:
        - Tezos (XTZ)
      summary: Operations
      description: Get historical operations of Tezos stakes
      operationId: getXtzOperations
      parameters:
        - $ref: '#/components/parameters/XTZWalletsParam'
        - $ref: '#/components/parameters/AccountsParam'
        - $ref: '#/components/parameters/XTZValidatorsParam'
        - $ref: '#/components/parameters/StartDateParam'
        - $ref: '#/components/parameters/EndDateParam'
      responses:
        '200':
          description: Successful operation
          content:
            application/json; charset=utf-8:
              schema:
                type: object
                required:
                  - data
                properties:
                  data:
                    type: array
                    items:
                      anyOf:
                        - $ref: '#/components/schemas/XTZOperationDelegate'
                        - $ref: '#/components/schemas/XTZOperationUndelegate'
                        - $ref: '#/components/schemas/XTZOperationActivation'
                        - $ref: '#/components/schemas/XTZOperationPayment'
                        - $ref: '#/components/schemas/XTZOperationStake'
                        - $ref: '#/components/schemas/XTZOperationUnstake'
                        - $ref: '#/components/schemas/XTZOperationFinalize'
                      discriminator:
                        propertyName: type
                        mapping:
                          delegate: '#/components/schemas/XTZOperationDelegate'
                          undelegate: '#/components/schemas/XTZOperationUndelegate'
                          activation: '#/components/schemas/XTZOperationActivation'
                          payment: '#/components/schemas/XTZOperationPayment'
                          stake: '#/components/schemas/XTZOperationStake'
                          unstake: '#/components/schemas/XTZOperationUnstake'
                          finalize: '#/components/schemas/XTZOperationFinalize'
        '400':
          description: Invalid parameters
        '401':
          description: Unauthorized
        '500':
          description: Internal server error
  /xtz/network-stats:
    get:
      tags:
        - Tezos (XTZ)
      summary: Network Stats
      description: Get some network statistics on Tezos staking
      operationId: getXtzNetworkStats
      responses:
        '200':
          description: Successful operation
          content:
            application/json; charset=utf-8:
              schema:
                type: object
                required:
                  - data
                properties:
                  data:
                    $ref: '#/components/schemas/XTZNetworkStats'
        '401':
          description: Unauthorized
        '500':
          description: Internal server error
  /xtz/reports:
    get:
      tags:
        - Tezos (XTZ)
      summary: Excel Reports
      description: Generates an Excel report sheet for your stakes and rewards
      operationId: getXtzReports
      parameters:
        - $ref: '#/components/parameters/XTZWalletsParam'
        - $ref: '#/components/parameters/AccountsParam'
      responses:
        '200':
          description: Successful operation
          content:
            application/octet-stream:
              schema:
                type: string
                format: binary
                example: ...
        '400':
          description: Invalid parameters
        '401':
          description: Unauthorized
        '500':
          description: Internal server error
  /xtz/transaction/delegate:
    post:
      tags:
        - Tezos (XTZ)
      summary: Delegate Transaction
      description: Generates a delegate transaction on Tezos
      operationId: postXtzDelegateTx
      requestBody:
        description: Transaction to craft
        required: true
        content:
          application/json; charset=utf-8:
            schema:
              $ref: '#/components/schemas/XTZCraftDelegateTxPayload'
      responses:
        '200':
          description: Successful operation
          content:
            application/json; charset=utf-8:
              schema:
                type: object
                required:
                  - data
                properties:
                  data:
                    $ref: '#/components/schemas/XTZUnsignedTx'
        '400':
          description: Invalid parameters
        '401':
          description: Unauthorized
        '500':
          description: Internal server error
  /xtz/transaction/undelegate:
    post:
      tags:
        - Tezos (XTZ)
      summary: Undelegate Transaction
      description: Generates an undelegate transaction on Tezos
      operationId: postXtzUndelegateTx
      requestBody:
        description: Transaction to craft
        required: true
        content:
          application/json; charset=utf-8:
            schema:
              $ref: '#/components/schemas/XTZCraftUndelegateTxPayload'
      responses:
        '200':
          description: Successful operation
          content:
            application/json; charset=utf-8:
              schema:
                type: object
                required:
                  - data
                properties:
                  data:
                    $ref: '#/components/schemas/XTZUnsignedTx'
        '400':
          description: Invalid parameters
        '401':
          description: Unauthorized
        '500':
          description: Internal server error
  /xtz/transaction/stake:
    post:
      tags:
        - Tezos (XTZ)
      summary: Stake Transaction
      description: Generates a stake transaction on Tezos. You must delegate to a baker accepting external stakes prior to use this endpoint. Staked tezos remain in your wallet but are frozen for staking purposes and subject to slashing.
      operationId: postXtzStakeTx
      requestBody:
        description: Transaction to craft
        required: true
        content:
          application/json; charset=utf-8:
            schema:
              $ref: '#/components/schemas/XTZCraftStakeTxPayload'
      responses:
        '200':
          description: Successful operation
          content:
            application/json; charset=utf-8:
              schema:
                type: object
                required:
                  - data
                properties:
                  data:
                    $ref: '#/components/schemas/XTZUnsignedTx'
        '400':
          description: Invalid parameters
        '401':
          description: Unauthorized
        '500':
          description: Internal server error
  /xtz/transaction/unstake:
    post:
      tags:
        - Tezos (XTZ)
      summary: Unstake Transaction
      description: Generates an unstake transaction on Tezos. Your unstaked balance remains locked for 4 cycles. After this period, you can unlock your funds by calling /v1/xtz/transaction/finalize-unstake.
      operationId: postXtzUnStakeTx
      requestBody:
        description: Transaction to craft
        required: true
        content:
          application/json; charset=utf-8:
            schema:
              $ref: '#/components/schemas/XTZCraftUnstakeTxPayload'
      responses:
        '200':
          description: Successful operation
          content:
            application/json; charset=utf-8:
              schema:
                type: object
                required:
                  - data
                properties:
                  data:
                    $ref: '#/components/schemas/XTZUnsignedTx'
        '400':
          description: Invalid parameters
        '401':
          description: Unauthorized
        '500':
          description: Internal server error
  /xtz/transaction/finalize-unstake:
    post:
      tags:
        - Tezos (XTZ)
      summary: Finalize Unstake Transaction
      description: Generates a finalize unstake transaction on Tezos. This transaction unlocks your unstaked tezos after the 4 cycles lock period.
      operationId: postXtzFinalizeUnstakeTx
      requestBody:
        description: Transaction to craft
        required: true
        content:
          application/json; charset=utf-8:
            schema:
              $ref: '#/components/schemas/XTZCraftUndelegateTxPayload'
      responses:
        '200':
          description: Successful operation
          content:
            application/json; charset=utf-8:
              schema:
                type: object
                required:
                  - data
                properties:
                  data:
                    $ref: '#/components/schemas/XTZUnsignedTx'
        '400':
          description: Invalid parameters
        '401':
          description: Unauthorized
        '500':
          description: Internal server error
  /xtz/transaction/prepare:
    post:
      tags:
        - Tezos (XTZ)
      summary: Prepare Transaction
      description: Prepare a Tezos transaction for broadcasting. It takes a serialized transaction and its signatures and returns a serialized signed transaction that can be broadcasted.
      operationId: postXtzPrepareTx
      requestBody:
        description: Transaction to prepare
        required: true
        content:
          application/json; charset=utf-8:
            schema:
              $ref: '#/components/schemas/XTZPrepareTxPayload'
      responses:
        '200':
          description: Successful operation
          content:
            application/json; charset=utf-8:
              schema:
                type: object
                required:
                  - data
                properties:
                  data:
                    $ref: '#/components/schemas/XTZSignedTx'
        '400':
          description: Invalid parameters
        '401':
          description: Unauthorized
        '500':
          description: Internal server error
  /xtz/transaction/broadcast:
    post:
      tags:
        - Tezos (XTZ)
      summary: Broadcast Transaction
      description: Broadcasts a signed Tezos transaction
      operationId: postXtzBroadcastTx
      requestBody:
        description: Transaction to broadcast
        required: true
        content:
          application/json; charset=utf-8:
            schema:
              $ref: '#/components/schemas/XTZBroadcastTxPayload'
      responses:
        '200':
          description: Successful operation
          content:
            application/json; charset=utf-8:
              schema:
                type: object
                required:
                  - data
                properties:
                  data:
                    $ref: '#/components/schemas/XTZBroadcastedTx'
        '400':
          description: Invalid parameters
        '401':
          description: Unauthorized
        '500':
          description: Internal server error
  /xtz/transaction/status:
    get:
      tags:
        - Tezos (XTZ)
      summary: Transaction Status
      description: Get the status of a Tezos transaction
      operationId: getXtzTxStatus
      parameters:
        - name: tx_hash
          in: query
          description: Hash of the transaction
          required: true
          style: form
          explode: false
          schema:
            type: string
            example: '0x43244f90814b31dec250de24df5bb023a338790c1d5a39244cf1064cf6d98c94'
        - name: block_number
          in: query
          description: Block number in which the transaction was included
          required: true
          style: form
          explode: false
          schema:
            type: string
            example: '2344324'
      responses:
        '200':
          description: Successful operation
          content:
            application/json; charset=utf-8:
              schema:
                type: object
                required:
                  - data
                properties:
                  data:
                    $ref: '#/components/schemas/XTZTxStatus'
        '400':
          description: Invalid parameters
        '401':
          description: Unauthorized
        '500':
          description: Internal server error
  /xtz/transaction/decode:
    get:
      tags:
        - Tezos (XTZ)
      summary: Transaction Decoding
      description: Decode a Tezos transaction
      operationId: getXtzTxDecoding
      parameters:
        - name: tx_serialized
          in: query
          description: Raw transaction to decode
          required: true
          style: form
          explode: false
          schema:
            type: string
            example: a67058acc52080bb8ab4f4d0c3e08bab1484a6799c216d43fdff0a8aa445e7146e00566eaa0198f3df9230489abd1a64f5ef9b98b270940ac4cb9807f44e00ff00344c5e59a1de5370e1cee5d2fcf706a649bba15b
      responses:
        '200':
          description: Successful operation
          content:
            application/json; charset=utf-8:
              schema:
                type: object
                description: Decoded transaction
                example:
                  branch: BLyanvyskrD6KrZaxh7TNp9EfUaHUUnqRRKMFirvrfmu2qcQkB4
                  contents:
                    - kind: delegation
                      source: tz1TX3Nh6h6js1VxXCuQ7rAF7LoGpd81FSw3
                      fee: '1300'
                      counter: '15082948'
                      gas_limit: '10100'
                      storage_limit: '0'
                      delegate: tz1QQZKGt3ouyd7x8JUDwcvRyxzsmD7CFbMd
        '400':
          description: Invalid parameters
        '401':
          description: Unauthorized
        '500':
          description: Internal server error
  /sol/stakes:
    get:
      tags:
        - Solana (SOL)
      summary: Stakes
      description: Get the status of Solana stakes
      operationId: getSolStakes
      parameters:
        - $ref: '#/components/parameters/SOLStakeAccountsParam'
        - $ref: '#/components/parameters/SOLValidatorsParam'
        - $ref: '#/components/parameters/SOLWalletsParam'
        - $ref: '#/components/parameters/AccountsParam'
      responses:
        '200':
          description: Successful operation
          content:
            application/json; charset=utf-8:
              schema:
                type: object
                required:
                  - data
                properties:
                  data:
                    type: array
                    items:
                      $ref: '#/components/schemas/SOLStake'
        '400':
          description: Invalid parameters
        '401':
          description: Unauthorized
        '500':
          description: Internal server error
    post:
      tags:
        - Solana (SOL)
      summary: Create stakes
      description: Create Solana stakes and linked them to a Kiln account
      operationId: postSolStakes
      requestBody:
        description: Stakes to create
        required: true
        content:
          application/json; charset=utf-8:
            schema:
              $ref: '#/components/schemas/SOLPostStakesPayload'
      responses:
        '201':
          description: Successful operation
          content:
            application/json; charset=utf-8:
              schema:
                type: object
                required:
                  - data
                properties:
                  data:
                    $ref: '#/components/schemas/CoreStake'
        '400':
          description: Invalid parameters
        '401':
          description: Unauthorized
        '500':
          description: Internal server error
  /sol/rewards:
    get:
      tags:
        - Solana (SOL)
      summary: Rewards
      description: Get historical rewards of Solana stakes
      operationId: getSolRewards
      parameters:
        - $ref: '#/components/parameters/SOLStakeAccountsParam'
        - $ref: '#/components/parameters/SOLValidatorsParam'
        - $ref: '#/components/parameters/SOLWalletsParam'
        - $ref: '#/components/parameters/AccountsParam'
        - $ref: '#/components/parameters/SOLRewardsFormatParam'
        - $ref: '#/components/parameters/StartDateParam'
        - $ref: '#/components/parameters/EndDateParam'
        - $ref: '#/components/parameters/SOLStartEpochParam'
        - $ref: '#/components/parameters/SOLEndEpochParam'
        - $ref: '#/components/parameters/IncludeUSDParam'
      responses:
        '200':
          description: Successful operation
          content:
            application/json; charset=utf-8:
              schema:
                type: object
                required:
                  - data
                properties:
                  data:
                    type: array
                    items:
                      oneOf:
                        - $ref: '#/components/schemas/SOLRewardByEpoch'
                        - $ref: '#/components/schemas/SOLRewardByDay'
              examples:
                rewards:
                  value:
                    data:
                      - date: '2023-01-15'
                        rewards: '3575891083876864200000'
                        active_balance: '6300000000000000000000000'
                        gross_mev_rewards: '11542454895'
                        mev_commission: '869533'
                        net_apy: 3.42
                      - date: '2023-01-16'
                        rewards: '3575891083876864200000'
                        gross_mev_rewards: '11642454895'
                        mev_commission: '869533'
                        active_balance: '6300000000000000000000000'
                        net_apy: 3.4
        '400':
          description: Invalid parameters
        '401':
          description: Unauthorized
        '500':
          description: Internal server error
  /sol/operations:
    get:
      tags:
        - Solana (SOL)
      summary: Operations
      description: Get the operations of Solana stakes
      operationId: getSolOperations
      parameters:
        - $ref: '#/components/parameters/SOLStakeAccountsParam'
        - $ref: '#/components/parameters/SOLValidatorsParam'
        - $ref: '#/components/parameters/SOLWalletsParam'
        - $ref: '#/components/parameters/AccountsParam'
        - $ref: '#/components/parameters/StartDateParam'
        - $ref: '#/components/parameters/EndDateParam'
      responses:
        '200':
          description: Successful operation
          content:
            application/json; charset=utf-8:
              schema:
                type: object
                required:
                  - data
                properties:
                  data:
                    type: array
                    items:
                      anyOf:
                        - $ref: '#/components/schemas/SOLOperationCreateAccountWithSeed'
                        - $ref: '#/components/schemas/SOLOperationCreateAccount'
                        - $ref: '#/components/schemas/SOLOperationDelegate'
                        - $ref: '#/components/schemas/SOLOperationDeactivate'
                        - $ref: '#/components/schemas/SOLOperationRedelegate'
                        - $ref: '#/components/schemas/SOLOperationSplit'
                        - $ref: '#/components/schemas/SOLOperationWithdraw'
                        - $ref: '#/components/schemas/SOLOperationMerge'
                      discriminator:
                        propertyName: type
                        mapping:
                          create_account_with_seed: '#/components/schemas/SOLOperationCreateAccountWithSeed'
                          create_account: '#/components/schemas/SOLOperationCreateAccount'
                          delegate: '#/components/schemas/SOLOperationDelegate'
                          deactivate: '#/components/schemas/SOLOperationDeactivate'
                          redelegate: '#/components/schemas/SOLOperationRedelegate'
                          split: '#/components/schemas/SOLOperationSplit'
                          withdraw: '#/components/schemas/SOLOperationWithdraw'
                          merge: '#/components/schemas/SOLOperationMerge'
        '400':
          description: Invalid parameters
        '401':
          description: Unauthorized
        '500':
          description: Internal server error
  /sol/network-stats:
    get:
      tags:
        - Solana (SOL)
      summary: Network Stats
      description: Get some network statistics on Solana staking
      operationId: getSolNetworkStats
      responses:
        '200':
          description: Successful operation
          content:
            application/json; charset=utf-8:
              schema:
                type: object
                required:
                  - data
                properties:
                  data:
                    $ref: '#/components/schemas/SOLNetworkStats'
        '401':
          description: Unauthorized
        '500':
          description: Internal server error
  /sol/reports:
    get:
      tags:
        - Solana (SOL)
      summary: Reports
      description: Get reports on Solana staking
      operationId: getSolReports
      parameters:
        - $ref: '#/components/parameters/SOLStakeAccountsParam'
        - $ref: '#/components/parameters/SOLWalletsParam'
        - $ref: '#/components/parameters/SOLValidatorsParam'
        - $ref: '#/components/parameters/AccountsParam'
      responses:
        '200':
          description: Successful operation
          content:
            application/octet-stream:
              schema:
                type: string
                format: binary
                example: ...
        '400':
          description: Invalid parameters
        '401':
          description: Unauthorized
        '500':
          description: Internal server error
  /sol/nonce-account:
    get:
      tags:
        - Solana (SOL)
      summary: Nonce Account
      description: Get Kiln nonce account details. This can be used to partially sign transactions with a durable nonce.
      operationId: getSolNonceAccount
      responses:
        '200':
          description: Successful operation
          content:
            application/json; charset=utf-8:
              schema:
                type: object
                required:
                  - data
                properties:
                  data:
                    $ref: '#/components/schemas/SOLNonceAccount'
        '401':
          description: Unauthorized
        '500':
          description: Internal server error
  /sol/transaction/stake:
    post:
      tags:
        - Solana (SOL)
      summary: Stake Transaction
      description: Craft a stake transaction. This results in a new stake account created with the amount given.
      operationId: postSolStakeTx
      requestBody:
        description: Stake transaction to create
        required: true
        content:
          application/json; charset=utf-8:
            schema:
              $ref: '#/components/schemas/SOLStakeTxPayload'
      responses:
        '200':
          description: Successful operation
          content:
            application/json; charset=utf-8:
              schema:
                type: object
                required:
                  - data
                properties:
                  data:
                    $ref: '#/components/schemas/SOLStakeTx'
        '400':
          description: Invalid parameters
        '401':
          description: Unauthorized
        '500':
          description: Internal server error
  /sol/transaction/deactivate-stake:
    post:
      tags:
        - Solana (SOL)
      summary: Deactivate Stake Transaction
      description: Craft a deactivate stake account transaction.
      operationId: postSolDeactivateStakeTx
      requestBody:
        description: Stake to deactivate
        required: true
        content:
          application/json; charset=utf-8:
            schema:
              $ref: '#/components/schemas/SOLDeactivateStakeTxPayload'
      responses:
        '200':
          description: Successful operation
          content:
            application/json; charset=utf-8:
              schema:
                type: object
                required:
                  - data
                properties:
                  data:
                    $ref: '#/components/schemas/SOLStakeTx'
        '400':
          description: Invalid parameters
        '401':
          description: Unauthorized
        '500':
          description: Internal server error
  /sol/transaction/withdraw-stake:
    post:
      tags:
        - Solana (SOL)
      summary: Withdraw Stake Transaction
      description: Craft a withdraw stake transaction.
      operationId: postSolWithdrawStakeTx
      requestBody:
        description: Stake to withdraw
        required: true
        content:
          application/json; charset=utf-8:
            schema:
              $ref: '#/components/schemas/SOLWithdrawStakeTxPayload'
      responses:
        '200':
          description: Successful operation
          content:
            application/json; charset=utf-8:
              schema:
                type: object
                required:
                  - data
                properties:
                  data:
                    $ref: '#/components/schemas/SOLStakeTx'
        '400':
          description: Invalid parameters
        '401':
          description: Unauthorized
        '500':
          description: Internal server error
  /sol/transaction/merge-stakes:
    post:
      tags:
        - Solana (SOL)
      summary: Merge Stakes Transaction
      description: Craft a merge stakes transaction.
      operationId: postSolMergeStakesTx
      requestBody:
        description: Stakes to merge
        required: true
        content:
          application/json; charset=utf-8:
            schema:
              $ref: '#/components/schemas/SOLMergeStakesTxPayload'
      responses:
        '200':
          description: Successful operation
          content:
            application/json; charset=utf-8:
              schema:
                type: object
                required:
                  - data
                properties:
                  data:
                    $ref: '#/components/schemas/SOLStakeTx'
        '400':
          description: Invalid parameters
        '401':
          description: Unauthorized
        '500':
          description: Internal server error
  /sol/transaction/split-stake:
    post:
      tags:
        - Solana (SOL)
      summary: Split Stake Transaction
      description: Craft a solana split stake transaction
      operationId: postSolSplitStakeTx
      requestBody:
        description: Stake to split
        required: true
        content:
          application/json; charset=utf-8:
            schema:
              $ref: '#/components/schemas/SOLSplitStakeTxPayload'
      responses:
        '200':
          description: Successful operation
          content:
            application/json; charset=utf-8:
              schema:
                type: object
                required:
                  - data
                properties:
                  data:
                    $ref: '#/components/schemas/SOLStakeTx'
        '400':
          description: Invalid parameters
        '401':
          description: Unauthorized
        '500':
          description: Internal server error
  /sol/transaction/prepare:
    post:
      tags:
        - Solana (SOL)
      summary: Prepare Transaction
      description: Prepare an unsigned transaction for broadcast by adding signatures to it
      operationId: postSolPrepareTx
      requestBody:
        description: Transaction to sign
        required: true
        content:
          application/json; charset=utf-8:
            schema:
              $ref: '#/components/schemas/SOLPrepareTxPayload'
      responses:
        '200':
          description: Successful operation
          content:
            application/json; charset=utf-8:
              schema:
                type: object
                required:
                  - data
                properties:
                  data:
                    $ref: '#/components/schemas/SOLPreparedTx'
        '400':
          description: Invalid parameters
        '401':
          description: Unauthorized
        '500':
          description: Internal server error
  /sol/transaction/broadcast:
    post:
      tags:
        - Solana (SOL)
      summary: Broadcast Transaction
      description: Broadcast a serialized signed transaction to the blockchain
      operationId: postSolBroadcastTx
      requestBody:
        description: Signed transaction to broadcast
        required: true
        content:
          application/json; charset=utf-8:
            schema:
              $ref: '#/components/schemas/SOLBroadcastTxPayload'
      responses:
        '200':
          description: Successful operation
          content:
            application/json; charset=utf-8:
              schema:
                type: object
                required:
                  - data
                properties:
                  data:
                    $ref: '#/components/schemas/SOLBroadcastTx'
        '400':
          description: Invalid parameters
        '401':
          description: Unauthorized
        '500':
          description: Internal server error
  /sol/transaction/status:
    get:
      tags:
        - Solana (SOL)
      summary: Transaction Status
      description: Get the status of a transaction
      operationId: getSolTxStatus
      parameters:
        - name: tx_hash
          in: query
          description: Hash of the transaction
          required: true
          style: form
          explode: false
          schema:
            type: string
            example: '0x43244f90814b31dec250de24df5bb023a338790c1d5a39244cf1064cf6d98c94'
      responses:
        '200':
          description: Successful operation
          content:
            application/json; charset=utf-8:
              schema:
                type: object
                required:
                  - data
                properties:
                  data:
                    $ref: '#/components/schemas/SOLTxStatus'
        '400':
          description: Invalid parameters
        '401':
          description: Unauthorized
        '500':
          description: Internal server error
  /sol/transaction/decode:
    get:
      tags:
        - Solana (SOL)
      summary: Transaction Decoding
      description: Decode a transaction
      operationId: getSolTxDecoding
      parameters:
        - name: tx_serialized
          in: query
          description: Raw transaction to decode
          required: true
          style: form
          explode: false
          schema:
            type: string
            example: 030000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000061d1b66df290eb088227c3d92fb617046083673fb018071cae9c0f507b372fec0a5c45e0b43d46fb8a092f7fdcec2c52070497c1b1d681d17f33ee4324538a07deabe78a609fdf76d0f11d2006314cc98fa78f58e90c42d45bf3d36f24748b613eed28a1bb6142c79819b56f7e8fdac39fbb5af683de240d62837db99aa4a00a0301080c373c6f8e84c6822a9f87035f65cccf899eef3fcdee61077041a93e1805bab24e15580b7b08f8a771c463905b0ece9f9fc642deef72b67f65954c920e801d602651f5f3871e65b84cc393458d0f23a413184cf2bb7093ae4e2c99d55b39a575c5f98e3135fcb53e71e6fafcb4da3a3cc36af1c76a1a7e72aa12eae1346d724c6c00000000000000000000000000000000000000000000000000000000000000004792650d1e9a4fe99721617c7d47c8712c14c20a76bf043368c6528c9090531a06a1d8179137542a983437bdfe2a7ab2557f535c8a78722b68a49dc00000000006a1d817a502050b680791e6ce6db88e1e5b7150f61fc6790a4eb4d10000000006a7d51718c774c928566398691d5eb68b5eb8a39b4b6d5c73555b210000000006a7d517192c568ee08a845f73d29788cf035c3145b21ab344d8062ea940000006a7d517192c5c51218cc94c3d4af17f58daee089ba1fd44e3dbd98a0000000006a7d517193584d0feed9bb3431d13206be544281b57b8566cc5375ff40000008cb7df03f52969a55bab8272195daca0b8619b10db0dffa05572f3ea636dfadd04040303090204040000000402000134000000000080c6a47e8d0300c80000000000000006a1d8179137542a983437bdfe2a7ab2557f535c8a78722b68a49dc0000000000602010a7400000000373c6f8e84c6822a9f87035f65cccf899eef3fcdee61077041a93e1805bab24e373c6f8e84c6822a9f87035f65cccf899eef3fcdee61077041a93e1805bab24e00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000006060105080b07000402000000
      responses:
        '200':
          description: Successful operation
          content:
            application/json; charset=utf-8:
              schema:
                type: object
                description: Decoded transaction
                example:
                  recentBlockhash: AUJhGWuM8vPH4qv8uFH8G4WQeYZDbWDKK7mkqVtDVNyz
                  feePayer: 4icse2mPXNgyxxn11tVM7sTnSqDqwJSEzdnaCQnRzvA9
                  nonceInfo: null
                  instructions:
                    - keys:
                        - pubkey: HoAGnvTdp4Qgrq3NWtNQFS6FixasBhLqui23Seq7riSw
                          isSigner: false
                          isWritable: true
                        - pubkey: SysvarRecentB1ockHashes11111111111111111111
                          isSigner: false
                          isWritable: false
                        - pubkey: 6WwYZH8zdqF7kELtRfo1yAnvD1wvXwTg4m1jBhUCqC68
                          isSigner: true
                          isWritable: false
                      programId: '11111111111111111111111111111111'
                      data:
                        - 4
                        - 0
                        - 0
                        - 0
                    - keys:
                        - pubkey: 4icse2mPXNgyxxn11tVM7sTnSqDqwJSEzdnaCQnRzvA9
                          isSigner: true
                          isWritable: true
                        - pubkey: 2SKRt2UySaYNjfPqLERF2wHnxmzqzsaVDLrS3RmBbvnH
                          isSigner: true
                          isWritable: true
                      programId: '11111111111111111111111111111111'
                      data:
                        - 0
                        - 0
                        - 0
                        - 0
                        - 0
                        - 128
                        - 198
                        - 164
                        - 126
                        - 141
                        - 3
                        - 0
                        - 200
                        - 0
                        - 0
                        - 0
                        - 0
                        - 0
                        - 0
                        - 0
                        - 6
                        - 161
                        - 216
                        - 23
                        - 145
                        - 55
                        - 84
                        - 42
                        - 152
                        - 52
                        - 55
                        - 189
                        - 254
                        - 42
                        - 122
                        - 178
                        - 85
                        - 127
                        - 83
                        - 92
                        - 138
                        - 120
                        - 114
                        - 43
                        - 104
                        - 164
                        - 157
                        - 192
                        - 0
                        - 0
                        - 0
                        - 0
                    - keys:
                        - pubkey: 2SKRt2UySaYNjfPqLERF2wHnxmzqzsaVDLrS3RmBbvnH
                          isSigner: true
                          isWritable: true
                        - pubkey: SysvarRent111111111111111111111111111111111
                          isSigner: false
                          isWritable: false
                      programId: Stake11111111111111111111111111111111111111
                      data:
                        - 0
                        - 0
                        - 0
                        - 0
                        - 55
                        - 60
                        - 111
                        - 142
                        - 132
                        - 198
                        - 130
                        - 42
                        - 159
                        - 135
                        - 3
                        - 95
                        - 101
                        - 204
                        - 207
                        - 137
                        - 158
                        - 239
                        - 63
                        - 205
                        - 238
                        - 97
                        - 7
                        - 112
                        - 65
                        - 169
                        - 62
                        - 24
                        - 5
                        - 186
                        - 178
                        - 78
                        - 55
                        - 60
                        - 111
                        - 142
                        - 132
                        - 198
                        - 130
                        - 42
                        - 159
                        - 135
                        - 3
                        - 95
                        - 101
                        - 204
                        - 207
                        - 137
                        - 158
                        - 239
                        - 63
                        - 205
                        - 238
                        - 97
                        - 7
                        - 112
                        - 65
                        - 169
                        - 62
                        - 24
                        - 5
                        - 186
                        - 178
                        - 78
                        - 0
                        - 0
                        - 0
                        - 0
                        - 0
                        - 0
                        - 0
                        - 0
                        - 0
                        - 0
                        - 0
                        - 0
                        - 0
                        - 0
                        - 0
                        - 0
                        - 0
                        - 0
                        - 0
                        - 0
                        - 0
                        - 0
                        - 0
                        - 0
                        - 0
                        - 0
                        - 0
                        - 0
                        - 0
                        - 0
                        - 0
                        - 0
                        - 0
                        - 0
                        - 0
                        - 0
                        - 0
                        - 0
                        - 0
                        - 0
                        - 0
                        - 0
                        - 0
                        - 0
                        - 0
                        - 0
                        - 0
                        - 0
                    - keys:
                        - pubkey: 2SKRt2UySaYNjfPqLERF2wHnxmzqzsaVDLrS3RmBbvnH
                          isSigner: true
                          isWritable: true
                        - pubkey: 5pPRHniefFjkiaArbGX3Y8NUysJmQ9tMZg3FrFGwHzSm
                          isSigner: false
                          isWritable: false
                        - pubkey: SysvarC1ock11111111111111111111111111111111
                          isSigner: false
                          isWritable: false
                        - pubkey: SysvarStakeHistory1111111111111111111111111
                          isSigner: false
                          isWritable: false
                        - pubkey: StakeConfig11111111111111111111111111111111
                          isSigner: false
                          isWritable: false
                        - pubkey: 4icse2mPXNgyxxn11tVM7sTnSqDqwJSEzdnaCQnRzvA9
                          isSigner: true
                          isWritable: true
                      programId: Stake11111111111111111111111111111111111111
                      data:
                        - 2
                        - 0
                        - 0
                        - 0
                  signers:
                    - 4icse2mPXNgyxxn11tVM7sTnSqDqwJSEzdnaCQnRzvA9
                    - 2SKRt2UySaYNjfPqLERF2wHnxmzqzsaVDLrS3RmBbvnH
                    - 6WwYZH8zdqF7kELtRfo1yAnvD1wvXwTg4m1jBhUCqC68
        '400':
          description: Invalid parameters
        '401':
          description: Unauthorized
        '500':
          description: Internal server error
  /atom/stakes:
    get:
      tags:
        - Cosmos (ATOM)
      summary: Stakes
      description: |
        Retrieve the status of ATOM stakes, expressed in uATOM (10⁻⁶ ATOM). All stakes that have been active since [Theta v7 (12/04/2022)](https://github.com/cosmos/gaia/releases/tag/v7.0.0) are available. For stakes without a specific delegation timestamp, the API computes the status based on the first available reward snapshot to provide a comprehensive overview.
      operationId: getAtomStakes
      parameters:
        - $ref: '#/components/parameters/ATOMValidatorsParam'
        - $ref: '#/components/parameters/ATOMDelegatorsParam'
        - $ref: '#/components/parameters/AccountsParam'
        - $ref: '#/components/parameters/ATOMPrecisionParam'
      responses:
        '200':
          description: Successful operation
          content:
            application/json; charset=utf-8:
              schema:
                type: object
                required:
                  - data
                properties:
                  data:
                    type: array
                    items:
                      $ref: '#/components/schemas/ATOMStake'
        '400':
          description: Invalid parameters
        '401':
          description: Unauthorized
        '500':
          description: Internal server error
    post:
      tags:
        - Cosmos (ATOM)
      summary: Create stakes
      description: Link an ATOM stake to a Kiln account
      operationId: postAtomStakes
      requestBody:
        description: Stakes to create
        required: true
        content:
          application/json; charset=utf-8:
            schema:
              $ref: '#/components/schemas/PostATOMStakesPayload'
      responses:
        '201':
          description: Successful operation
          content:
            application/json; charset=utf-8:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/CoreStake'
        '400':
          description: Invalid parameters
        '401':
          description: Unauthorized
        '500':
          description: Internal server error
  /atom/rewards:
    get:
      tags:
        - Cosmos (ATOM)
      summary: Rewards
      description: Get historical rewards by day of ATOM stakes. Units are in uATOM (10⁻⁶ ATOM). Only daily breakdowns after 13/04/2022 ([Theta v7](https://github.com/cosmos/gaia/releases/tag/v7.0.0)) are available.
      operationId: getAtomRewards
      parameters:
        - $ref: '#/components/parameters/ATOMValidatorsParam'
        - $ref: '#/components/parameters/ATOMDelegatorsParam'
        - $ref: '#/components/parameters/AccountsParam'
        - $ref: '#/components/parameters/StartDateParam'
        - $ref: '#/components/parameters/EndDateParam'
        - $ref: '#/components/parameters/IncludeUSDParam'
        - $ref: '#/components/parameters/ATOMPrecisionParam'
      responses:
        '200':
          description: Successful operation
          content:
            application/json; charset=utf-8:
              schema:
                type: object
                required:
                  - data
                properties:
                  data:
                    type: array
                    items:
                      $ref: '#/components/schemas/ATOMReward'
              examples:
                rewards:
                  value:
                    data:
                      - date: '2023-01-15'
                        rewards: '3575891083876864200000'
                        active_balance: '6300000000000000000000000'
                        net_apy: 3.42
                        rewards_usd: '12'
                        stake_balance_usd: '25400'
                      - date: '2023-01-16'
                        rewards: '3575891083876864200000'
                        active_balance: '6300000000000000000000000'
                        net_apy: 3.4
                        rewards_usd: '13'
                        stake_balance_usd: '25412'
        '400':
          description: Invalid parameters
        '401':
          description: Unauthorized
        '500':
          description: Internal server error
  /atom/operations:
    get:
      tags:
        - Cosmos (ATOM)
      summary: Operations
      description: Get the operations of ATOM stakes. Units are in uATOM (10⁻⁶ ATOM). All operations after [Theta v7 (12/04/2022)](https://github.com/cosmos/gaia/releases/tag/v7.0.0) are available.
      operationId: getAtomOperations
      parameters:
        - $ref: '#/components/parameters/ATOMValidatorsParam'
        - $ref: '#/components/parameters/ATOMDelegatorsParam'
        - $ref: '#/components/parameters/ATOMAuthzFlagParam'
        - $ref: '#/components/parameters/AccountsParam'
        - $ref: '#/components/parameters/StartDateParam'
        - $ref: '#/components/parameters/EndDateParam'
        - $ref: '#/components/parameters/ATOMPrecisionParam'
      responses:
        '200':
          description: Successful operation
          content:
            application/json; charset=utf-8:
              schema:
                type: object
                properties:
                  data:
                    type: array
                    items:
                      anyOf:
                        - $ref: '#/components/schemas/ATOMOperationDelegate'
                        - $ref: '#/components/schemas/ATOMOperationUndelegate'
                        - $ref: '#/components/schemas/ATOMOperationRedelegate'
                        - $ref: '#/components/schemas/ATOMOperationWithdrawRewards'
                        - $ref: '#/components/schemas/ATOMOperationGrant'
                        - $ref: '#/components/schemas/ATOMOperationExec'
                      discriminator:
                        propertyName: type
                        mapping:
                          staking.MsgDelegate: '#/components/schemas/ATOMOperationDelegate'
                          staking.MsgUndelegate: '#/components/schemas/ATOMOperationUndelegate'
                          staking.MsgBeginRedelegate: '#/components/schemas/ATOMOperationRedelegate'
                          distr.MsgWithdrawDelegatorReward: '#/components/schemas/ATOMOperationWithdrawRewards'
                          authz.Grant: '#/components/schemas/ATOMOperationGrant'
                          authz.Exec: '#/components/schemas/ATOMOperationExec'
        '400':
          description: Invalid parameters
        '401':
          description: Unauthorized
        '500':
          description: Internal server error
  /atom/network-stats:
    get:
      tags:
        - Cosmos (ATOM)
      summary: Network Stats
      description: Get some network statistics on Cosmos
      operationId: getAtomNetworkStats
      responses:
        '200':
          description: Successful operation
          content:
            application/json; charset=utf-8:
              schema:
                type: object
                required:
                  - data
                properties:
                  data:
                    $ref: '#/components/schemas/ATOMNetworkStats'
        '401':
          description: Unauthorized
        '500':
          description: Internal server error
  /atom/reports:
    get:
      tags:
        - Cosmos (ATOM)
      summary: Reports
      description: Get reports on Cosmos staking
      operationId: getAtomReports
      parameters:
        - $ref: '#/components/parameters/ATOMDelegatorsParam'
        - $ref: '#/components/parameters/ATOMValidatorsParam'
        - $ref: '#/components/parameters/AccountsParam'
      responses:
        '200':
          description: Successful operation
          content:
            application/octet-stream:
              schema:
                type: string
                format: binary
                example: ...
        '400':
          description: Invalid parameters
        '401':
          description: Unauthorized
        '500':
          description: Internal server error
  /atom/transaction/stake:
    post:
      tags:
        - Cosmos (ATOM)
      summary: Stake Transaction
      description: Generates a delegate transaction on Cosmos
      operationId: postAtomStakeTx
      requestBody:
        description: Transaction to craft
        required: true
        content:
          application/json; charset=utf-8:
            schema:
              $ref: '#/components/schemas/ATOMCraftStakeTxPayload'
      responses:
        '200':
          description: Successful operation
          content:
            application/json; charset=utf-8:
              schema:
                type: object
                required:
                  - data
                properties:
                  data:
                    $ref: '#/components/schemas/ATOMStakeUnsignedTx'
        '400':
          description: Invalid parameters
        '401':
          description: Unauthorized
        '500':
          description: Internal server error
  /atom/transaction/withdraw-rewards:
    post:
      tags:
        - Cosmos (ATOM)
      summary: Withdraw Rewards Transaction
      description: Generates a withdraw rewards transaction on Cosmos
      operationId: postAtomWithdrawRewardsTx
      requestBody:
        description: Transaction to craft
        required: true
        content:
          application/json; charset=utf-8:
            schema:
              $ref: '#/components/schemas/ATOMCraftWithdrawRewardsTxPayload'
      responses:
        '200':
          description: Successful operation
          content:
            application/json; charset=utf-8:
              schema:
                type: object
                required:
                  - data
                properties:
                  data:
                    $ref: '#/components/schemas/ATOMUnsignedTx'
        '400':
          description: Invalid parameters
        '401':
          description: Unauthorized
        '500':
          description: Internal server error
  /atom/transaction/restake-rewards:
    post:
      tags:
        - Cosmos (ATOM)
      summary: Restake Rewards Transaction
      description: Generates a restake rewards transaction on Cosmos
      operationId: postAtomRestakeRewardsTx
      requestBody:
        description: Transaction to craft
        required: true
        content:
          application/json; charset=utf-8:
            schema:
              $ref: '#/components/schemas/ATOMCraftRestakeRewardsTxPayload'
      responses:
        '200':
          description: Successful operation
          content:
            application/json; charset=utf-8:
              schema:
                type: object
                required:
                  - data
                properties:
                  data:
                    $ref: '#/components/schemas/ATOMUnsignedTx'
        '400':
          description: Invalid parameters
        '401':
          description: Unauthorized
        '500':
          description: Internal server error
  /atom/transaction/unstake:
    post:
      tags:
        - Cosmos (ATOM)
      summary: Unstake Transaction
      description: Generates an undelegate transaction on Cosmos
      operationId: postAtomUnstakeTx
      requestBody:
        description: Transaction to craft
        required: true
        content:
          application/json; charset=utf-8:
            schema:
              $ref: '#/components/schemas/ATOMCraftUnstakeTxPayload'
      responses:
        '200':
          description: Successful operation
          content:
            application/json; charset=utf-8:
              schema:
                type: object
                required:
                  - data
                properties:
                  data:
                    $ref: '#/components/schemas/ATOMUnsignedTx'
        '400':
          description: Invalid parameters
        '401':
          description: Unauthorized
        '500':
          description: Internal server error
  /atom/transaction/redelegate:
    post:
      tags:
        - Cosmos (ATOM)
      summary: Redelegate Transaction
      description: Generates a redelegate transaction on Cosmos to move a stake from a validator to another without going through the 21 days unbonding period.
      operationId: postAtomRedelegateTx
      requestBody:
        description: Transaction to craft
        required: true
        content:
          application/json; charset=utf-8:
            schema:
              $ref: '#/components/schemas/ATOMCraftRedelegateTxPayload'
      responses:
        '200':
          description: Successful operation
          content:
            application/json; charset=utf-8:
              schema:
                type: object
                required:
                  - data
                properties:
                  data:
                    $ref: '#/components/schemas/ATOMUnsignedTx'
        '400':
          description: Invalid parameters
        '401':
          description: Unauthorized
        '500':
          description: Internal server error
  /atom/transaction/prepare:
    post:
      tags:
        - Cosmos (ATOM)
      summary: Prepare Transaction
      description: Prepare an unsigned transaction for broadcast by adding signatures to it
      operationId: postAtomPrepareTx
      requestBody:
        description: Transaction to prepare
        required: true
        content:
          application/json; charset=utf-8:
            schema:
              $ref: '#/components/schemas/ATOMPrepareTxPayload'
      responses:
        '200':
          description: Successful operation
          content:
            application/json; charset=utf-8:
              schema:
                type: object
                required:
                  - data
                properties:
                  data:
                    $ref: '#/components/schemas/ATOMSignedTx'
        '400':
          description: Invalid parameters
        '401':
          description: Unauthorized
        '500':
          description: Internal server error
  /atom/transaction/broadcast:
    post:
      tags:
        - Cosmos (ATOM)
      summary: Broadcast Transaction
      description: Broadcast a signed transaction to the Cosmos network
      operationId: postAtomBroadcastTx
      requestBody:
        description: Transaction to broadcast
        required: true
        content:
          application/json; charset=utf-8:
            schema:
              $ref: '#/components/schemas/ATOMBroadcastTxPayload'
      responses:
        '200':
          description: Successful operation
          content:
            application/json; charset=utf-8:
              schema:
                type: object
                required:
                  - data
                properties:
                  data:
                    $ref: '#/components/schemas/ATOMTxHash'
        '400':
          description: Invalid parameters
        '401':
          description: Unauthorized
        '500':
          description: Internal server error
  /atom/transaction/status:
    get:
      tags:
        - Cosmos (ATOM)
      summary: Transaction Status
      description: Get the status of a transaction
      operationId: getAtomTxStatus
      parameters:
        - name: tx_hash
          in: query
          description: Hash of the transaction
          required: true
          style: form
          explode: false
          schema:
            type: string
            example: 2B4F732E12D5D5AF1F907AD03B199167A718EDC6201DE5713143AB80990420CB
      responses:
        '200':
          description: Successful operation
          content:
            application/json; charset=utf-8:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/ATOMTxStatus'
        '400':
          description: Invalid parameters
        '401':
          description: Unauthorized
        '500':
          description: Internal server error
  /atom/transaction/decode:
    get:
      tags:
        - Cosmos (ATOM)
      summary: Transaction Decoding
      description: Decode a transaction
      operationId: getAtomTxDecoding
      parameters:
        - name: tx_serialized
          in: query
          description: Raw transaction to decode
          required: true
          style: form
          explode: false
          schema:
            type: string
            example: 0aa1010a9e010a232f636f736d6f732e7374616b696e672e763162657461312e4d736744656c656761746512770a2d636f736d6f733139633966646834383876716a636c6c74777036386a6d3530796477796833366a7165617465761234636f736d6f7376616c6f706572313679733065673933356d6b71706b79646b6766636a39616765326175386c39366e61657265391a100a057561746f6d12073130303030303012670a500a460a1f2f636f736d6f732e63727970746f2e736563703235366b312e5075624b657912230a21039ce47b2a813d13876131a9c3be77e8c4afa49e948744abbee11f939e2a420f4612040a020801186612130a0d0a057561746f6d1204353030301080897a1a1174686574612d746573746e65742d30303120e0cd2a
      responses:
        '200':
          description: Successful operation
          content:
            application/json; charset=utf-8:
              schema:
                type: object
                description: Decoded transaction
                example:
                  authInfo:
                    signerInfos:
                      - publicKey:
                          typeUrl: /cosmos.crypto.secp256k1.PubKey
                          value:
                            '0': 10
                            '1': 33
                            '2': 3
                            '3': 156
                            '4': 228
                            '5': 123
                            '6': 42
                            '7': 129
                            '8': 61
                            '9': 19
                            '10': 135
                            '11': 97
                            '12': 49
                            '13': 169
                            '14': 195
                            '15': 190
                            '16': 119
                            '17': 232
                            '18': 196
                            '19': 175
                            '20': 164
                            '21': 158
                            '22': 148
                            '23': 135
                            '24': 68
                            '25': 171
                            '26': 190
                            '27': 225
                            '28': 31
                            '29': 147
                            '30': 158
                            '31': 42
                            '32': 66
                            '33': 15
                            '34': 70
                        modeInfo:
                          single:
                            mode: 1
                        sequence:
                          low: 102
                          high: 0
                          unsigned: true
                    fee:
                      amount:
                        - denom: uatom
                          amount: '5000'
                      gasLimit:
                        low: 2000000
                        high: 0
                        unsigned: true
                      payer: ''
                      granter: ''
                  body:
                    messages:
                      - typeUrl: /cosmos.staking.v1beta1.MsgDelegate
                        value:
                          '0': 10
                          '1': 45
                          '2': 99
                          '3': 111
                          '4': 115
                          '5': 109
                          '6': 111
                          '7': 115
                          '8': 49
                          '9': 57
                          '10': 99
                          '11': 57
                          '12': 102
                          '13': 100
                          '14': 104
                          '15': 52
                          '16': 56
                          '17': 56
                          '18': 118
                          '19': 113
                          '20': 106
                          '21': 99
                          '22': 108
                          '23': 108
                          '24': 116
                          '25': 119
                          '26': 112
                          '27': 54
                          '28': 56
                          '29': 106
                          '30': 109
                          '31': 53
                          '32': 48
                          '33': 121
                          '34': 100
                          '35': 119
                          '36': 121
                          '37': 104
                          '38': 51
                          '39': 54
                          '40': 106
                          '41': 113
                          '42': 101
                          '43': 97
                          '44': 116
                          '45': 101
                          '46': 118
                          '47': 18
                          '48': 52
                          '49': 99
                          '50': 111
                          '51': 115
                          '52': 109
                          '53': 111
                          '54': 115
                          '55': 118
                          '56': 97
                          '57': 108
                          '58': 111
                          '59': 112
                          '60': 101
                          '61': 114
                          '62': 49
                          '63': 54
                          '64': 121
                          '65': 115
                          '66': 48
                          '67': 101
                          '68': 103
                          '69': 57
                          '70': 51
                          '71': 53
                          '72': 109
                          '73': 107
                          '74': 113
                          '75': 112
                          '76': 107
                          '77': 121
                          '78': 100
                          '79': 107
                          '80': 103
                          '81': 102
                          '82': 99
                          '83': 106
                          '84': 57
                          '85': 97
                          '86': 103
                          '87': 101
                          '88': 50
                          '89': 97
                          '90': 117
                          '91': 56
                          '92': 108
                          '93': 57
                          '94': 54
                          '95': 110
                          '96': 97
                          '97': 101
                          '98': 114
                          '99': 101
                          '100': 57
                          '101': 26
                          '102': 16
                          '103': 10
                          '104': 5
                          '105': 117
                          '106': 97
                          '107': 116
                          '108': 111
                          '109': 109
                          '110': 18
                          '111': 7
                          '112': 49
                          '113': 48
                          '114': 48
                          '115': 48
                          '116': 48
                          '117': 48
                          '118': 48
                    memo: ''
                    timeoutHeight:
                      low: 0
                      high: 0
                      unsigned: true
                    extensionOptions: []
                    nonCriticalExtensionOptions: []
                  signatures:
                    - '0': 116
                      '1': 104
                      '2': 101
                      '3': 116
                      '4': 97
                      '5': 45
                      '6': 116
                      '7': 101
                      '8': 115
                      '9': 116
                      '10': 110
                      '11': 101
                      '12': 116
                      '13': 45
                      '14': 48
                      '15': 48
                      '16': 49
        '400':
          description: Invalid parameters
        '401':
          description: Unauthorized
        '500':
          description: Internal server error
  /cro/stakes:
    get:
      tags:
        - Cronos (CRO)
      summary: Stakes
      description: |
        Retrieve the status of Cronos stakes, expressed in microCRO (10⁻⁶ CRO).
      operationId: getCroStakes
      parameters:
        - $ref: '#/components/parameters/CROValidatorsParam'
        - $ref: '#/components/parameters/CRODelegatorsParam'
        - $ref: '#/components/parameters/AccountsParam'
        - $ref: '#/components/parameters/CROPrecisionParam'
      responses:
        '200':
          description: Successful operation
          content:
            application/json; charset=utf-8:
              schema:
                type: object
                required:
                  - data
                properties:
                  data:
                    type: array
                    items:
                      $ref: '#/components/schemas/CROStake'
        '400':
          description: Invalid parameters
        '401':
          description: Unauthorized
        '500':
          description: Internal server error
    post:
      tags:
        - Cronos (CRO)
      summary: Create stakes
      description: Link an Cronos stake to a Kiln account
      operationId: postCroStakes
      requestBody:
        description: Stakes to create
        required: true
        content:
          application/json; charset=utf-8:
            schema:
              $ref: '#/components/schemas/PostCROStakesPayload'
      responses:
        '201':
          description: Successful operation
          content:
            application/json; charset=utf-8:
              schema:
                type: object
                required:
                  - data
                properties:
                  data:
                    $ref: '#/components/schemas/CoreStake'
        '400':
          description: Invalid parameters
        '401':
          description: Unauthorized
        '500':
          description: Internal server error
  /cro/rewards:
    get:
      tags:
        - Cronos (CRO)
      summary: Rewards
      description: Get historical rewards by day of Cronos stakes. Units are in microCRO (10⁻⁶ CRO).
      operationId: getCroRewards
      parameters:
        - $ref: '#/components/parameters/CROValidatorsParam'
        - $ref: '#/components/parameters/CRODelegatorsParam'
        - $ref: '#/components/parameters/AccountsParam'
        - $ref: '#/components/parameters/StartDateParam'
        - $ref: '#/components/parameters/EndDateParam'
        - $ref: '#/components/parameters/IncludeUSDParam'
        - $ref: '#/components/parameters/CROPrecisionParam'
      responses:
        '200':
          description: Successful operation
          content:
            application/json; charset=utf-8:
              schema:
                type: object
                required:
                  - data
                properties:
                  data:
                    type: array
                    items:
                      $ref: '#/components/schemas/CROReward'
              examples:
                rewards:
                  value:
                    data:
                      - date: '2023-01-15'
                        rewards: '3575891083876864200000'
                        active_balance: '6300000000000000000000000'
                        net_apy: 3.42
                        rewards_usd: '12'
                        stake_balance_usd: '25400'
                      - date: '2023-01-16'
                        rewards: '3575891083876864200000'
                        active_balance: '6300000000000000000000000'
                        net_apy: 3.4
                        rewards_usd: '13'
                        stake_balance_usd: '25412'
        '400':
          description: Invalid parameters
        '401':
          description: Unauthorized
        '500':
          description: Internal server error
  /cro/operations:
    get:
      tags:
        - Cronos (CRO)
      summary: Operations
      description: Get the operations of Cronos stakes. Units are in microCRO (10⁻⁶ CRO).
      operationId: getCroOperations
      parameters:
        - $ref: '#/components/parameters/CROValidatorsParam'
        - $ref: '#/components/parameters/CRODelegatorsParam'
        - $ref: '#/components/parameters/CROAuthzFlagParam'
        - $ref: '#/components/parameters/AccountsParam'
        - $ref: '#/components/parameters/StartDateParam'
        - $ref: '#/components/parameters/EndDateParam'
        - $ref: '#/components/parameters/CROPrecisionParam'
      responses:
        '200':
          description: Successful operation
          content:
            application/json; charset=utf-8:
              schema:
                type: object
                required:
                  - data
                properties:
                  data:
                    type: array
                    items:
                      anyOf:
                        - $ref: '#/components/schemas/CROOperationDelegate'
                        - $ref: '#/components/schemas/CROOperationUndelegate'
                        - $ref: '#/components/schemas/CROOperationRedelegate'
                        - $ref: '#/components/schemas/CROOperationWithdrawRewards'
                        - $ref: '#/components/schemas/CROOperationGrant'
                        - $ref: '#/components/schemas/CROOperationExec'
                      discriminator:
                        propertyName: type
                        mapping:
                          staking.MsgDelegate: '#/components/schemas/CROOperationDelegate'
                          staking.MsgUndelegate: '#/components/schemas/CROOperationUndelegate'
                          staking.MsgBeginRedelegate: '#/components/schemas/CROOperationRedelegate'
                          distr.MsgWithdrawDelegatorReward: '#/components/schemas/CROOperationWithdrawRewards'
                          authz.Grant: '#/components/schemas/CROOperationGrant'
                          authz.Exec: '#/components/schemas/CROOperationExec'
        '400':
          description: Invalid parameters
        '401':
          description: Unauthorized
        '500':
          description: Internal server error
  /cro/network-stats:
    get:
      tags:
        - Cronos (CRO)
      summary: Network Stats
      description: Get some network statistics on Cosmos
      operationId: getCroNetworkStats
      responses:
        '200':
          description: Successful operation
          content:
            application/json; charset=utf-8:
              schema:
                type: object
                required:
                  - data
                properties:
                  data:
                    $ref: '#/components/schemas/CRONetworkStats'
        '401':
          description: Unauthorized
        '500':
          description: Internal server error
  /cro/reports:
    get:
      tags:
        - Cronos (CRO)
      summary: Reports
      description: Get reports on Cosmos staking
      operationId: getCroReports
      parameters:
        - $ref: '#/components/parameters/CRODelegatorsParam'
        - $ref: '#/components/parameters/CROValidatorsParam'
        - $ref: '#/components/parameters/AccountsParam'
      responses:
        '200':
          description: Successful operation
          content:
            application/octet-stream:
              schema:
                type: string
                format: binary
                example: ...
        '400':
          description: Invalid parameters
        '401':
          description: Unauthorized
        '500':
          description: Internal server error
  /cro/balance:
    post:
      tags:
        - Cronos (CRO)
      summary: Get balance
      description: Get balance of a Cronos account
      operationId: postCroGetBalance
      requestBody:
        description: Account to query
        required: true
        content:
          application/json; charset=utf-8:
            schema:
              $ref: '#/components/schemas/CROGetBalancePayload'
      responses:
        '200':
          description: Successful operation
          content:
            application/json; charset=utf-8:
              schema:
                type: object
                required:
                  - data
                properties:
                  data:
                    type: object
                    required:
                      - amount
                      - denom
                    properties:
                      amount:
                        type: string
                        description: The balance of the account
                        example: '1000000'
                      denom:
                        type: string
                        description: The denomination of the balance
                        example: basecro
        '400':
          description: Invalid parameters
        '401':
          description: Unauthorized
        '500':
          description: Internal server error
  /cro/transaction/stake:
    post:
      tags:
        - Cronos (CRO)
      summary: Stake Transaction
      description: Generates a delegate transaction on Cronos
      operationId: postCroStakeTx
      requestBody:
        description: Transaction to craft
        required: true
        content:
          application/json; charset=utf-8:
            schema:
              $ref: '#/components/schemas/CROCraftStakeTxPayload'
      responses:
        '200':
          description: Successful operation
          content:
            application/json; charset=utf-8:
              schema:
                type: object
                required:
                  - data
                properties:
                  data:
                    $ref: '#/components/schemas/CROStakeUnsignedTx'
        '400':
          description: Invalid parameters
        '401':
          description: Unauthorized
        '500':
          description: Internal server error
  /cro/transaction/withdraw-rewards:
    post:
      tags:
        - Cronos (CRO)
      summary: Withdraw Rewards Transaction
      description: Generates a withdraw rewards transaction on Cronos
      operationId: postCroWithdrawRewardsTx
      requestBody:
        description: Transaction to craft
        required: true
        content:
          application/json; charset=utf-8:
            schema:
              $ref: '#/components/schemas/CROCraftWithdrawRewardsTxPayload'
      responses:
        '200':
          description: Successful operation
          content:
            application/json; charset=utf-8:
              schema:
                type: object
                required:
                  - data
                properties:
                  data:
                    $ref: '#/components/schemas/CROUnsignedTx'
        '400':
          description: Invalid parameters
        '401':
          description: Unauthorized
        '500':
          description: Internal server error
  /cro/transaction/restake-rewards:
    post:
      tags:
        - Cronos (CRO)
      summary: Restake Rewards Transaction
      description: Generates a restake rewards transaction on Cronos
      operationId: postCroRestakeRewardsTx
      requestBody:
        description: Transaction to craft
        required: true
        content:
          application/json; charset=utf-8:
            schema:
              $ref: '#/components/schemas/CROCraftRestakeRewardsTxPayload'
      responses:
        '200':
          description: Successful operation
          content:
            application/json; charset=utf-8:
              schema:
                type: object
                required:
                  - data
                properties:
                  data:
                    $ref: '#/components/schemas/CROUnsignedTx'
        '400':
          description: Invalid parameters
        '401':
          description: Unauthorized
        '500':
          description: Internal server error
  /cro/transaction/unstake:
    post:
      tags:
        - Cronos (CRO)
      summary: Unstake Transaction
      description: Generates an undelegate transaction on Cronos
      operationId: postCroUnstakeTx
      requestBody:
        description: Transaction to craft
        required: true
        content:
          application/json; charset=utf-8:
            schema:
              $ref: '#/components/schemas/CROCraftUnstakeTxPayload'
      responses:
        '200':
          description: Successful operation
          content:
            application/json; charset=utf-8:
              schema:
                type: object
                required:
                  - data
                properties:
                  data:
                    $ref: '#/components/schemas/CROUnsignedTx'
        '400':
          description: Invalid parameters
        '401':
          description: Unauthorized
        '500':
          description: Internal server error
  /cro/transaction/redelegate:
    post:
      tags:
        - Cronos (CRO)
      summary: Redelegate Transaction
      description: Generates a redelegate transaction on Cronos to move a stake from a validator to another without going through the 21 days unbonding period.
      operationId: postCroRedelegateTx
      requestBody:
        description: Transaction to craft
        required: true
        content:
          application/json; charset=utf-8:
            schema:
              $ref: '#/components/schemas/CROCraftRedelegateTxPayload'
      responses:
        '200':
          description: Successful operation
          content:
            application/json; charset=utf-8:
              schema:
                type: object
                required:
                  - data
                properties:
                  data:
                    $ref: '#/components/schemas/CROUnsignedTx'
        '400':
          description: Invalid parameters
        '401':
          description: Unauthorized
        '500':
          description: Internal server error
  /cro/transaction/prepare:
    post:
      tags:
        - Cronos (CRO)
      summary: Prepare Transaction
      description: Prepare an unsigned transaction for broadcast by adding signatures to it
      operationId: postCroPrepareTx
      requestBody:
        description: Transaction to prepare
        required: true
        content:
          application/json; charset=utf-8:
            schema:
              $ref: '#/components/schemas/CROPrepareTxPayload'
      responses:
        '200':
          description: Successful operation
          content:
            application/json; charset=utf-8:
              schema:
                type: object
                required:
                  - data
                properties:
                  data:
                    $ref: '#/components/schemas/CROSignedTx'
        '400':
          description: Invalid parameters
        '401':
          description: Unauthorized
        '500':
          description: Internal server error
  /cro/transaction/broadcast:
    post:
      tags:
        - Cronos (CRO)
      summary: Broadcast Transaction
      description: Broadcast a signed transaction to the Cronos network
      operationId: postCroBroadcastTx
      requestBody:
        description: Transaction to broadcast
        required: true
        content:
          application/json; charset=utf-8:
            schema:
              $ref: '#/components/schemas/CROBroadcastTxPayload'
      responses:
        '200':
          description: Successful operation
          content:
            application/json; charset=utf-8:
              schema:
                type: object
                required:
                  - data
                properties:
                  data:
                    $ref: '#/components/schemas/CROTxHash'
        '400':
          description: Invalid parameters
        '401':
          description: Unauthorized
        '500':
          description: Internal server error
  /cro/transaction/send:
    post:
      tags:
        - Cronos (CRO)
      summary: Send Transaction
      description: Generates a send transaction on Cronos
      operationId: postCroSendTx
      requestBody:
        description: Transaction to craft
        required: true
        content:
          application/json; charset=utf-8:
            schema:
              $ref: '#/components/schemas/CROCraftSendTxPayload'
      responses:
        '200':
          description: Successful operation
          content:
            application/json; charset=utf-8:
              schema:
                type: object
                required:
                  - data
                properties:
                  data:
                    $ref: '#/components/schemas/CROUnsignedTx'
        '400':
          description: Invalid parameters
        '401':
          description: Unauthorized
        '500':
          description: Internal server error
  /cro/transaction/status:
    get:
      tags:
        - Cronos (CRO)
      summary: Transaction Status
      description: Get the status of a transaction
      operationId: getCroTxStatus
      parameters:
        - name: tx_hash
          in: query
          description: Hash of the transaction
          required: true
          style: form
          explode: false
          schema:
            type: string
            example: 2B4F732E12D5D5AF1F907AD03B199167A718EDC6201DE5713143AB80990420CB
      responses:
        '200':
          description: Successful operation
          content:
            application/json; charset=utf-8:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/CROTxStatus'
        '400':
          description: Invalid parameters
        '401':
          description: Unauthorized
        '500':
          description: Internal server error
  /cro/transaction/decode:
    get:
      tags:
        - Cronos (CRO)
      summary: Transaction Decoding
      description: Decode a transaction
      operationId: getCroTxDecoding
      parameters:
        - name: tx_serialized
          in: query
          description: Raw transaction to decode
          required: true
          style: form
          explode: false
          schema:
            type: string
            example: 0aa1010a9e010a232f636f736d6f732e7374616b696e672e763162657461312e4d736744656c656761746512770a2d636f736d6f733139633966646834383876716a636c6c74777036386a6d3530796477796833366a7165617465761234636f736d6f7376616c6f706572313679733065673933356d6b71706b79646b6766636a39616765326175386c39366e61657265391a100a057561746f6d12073130303030303012670a500a460a1f2f636f736d6f732e63727970746f2e736563703235366b312e5075624b657912230a21039ce47b2a813d13876131a9c3be77e8c4afa49e948744abbee11f939e2a420f4612040a020801186612130a0d0a057561746f6d1204353030301080897a1a1174686574612d746573746e65742d30303120e0cd2a
      responses:
        '200':
          description: Successful operation
          content:
            application/json; charset=utf-8:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/CROTxDecoding'
        '400':
          description: Invalid parameters
        '401':
          description: Unauthorized
        '500':
          description: Internal server error
  /om/stakes:
    get:
      tags:
        - Mantra (OM)
      summary: Stakes
      description: Get the status of OM stakes. Units are in uOM (10⁻⁶ OM).
      operationId: getOmStakes
      parameters:
        - $ref: '#/components/parameters/OMValidatorsParam'
        - $ref: '#/components/parameters/OMDelegatorsParam'
        - $ref: '#/components/parameters/AccountsParam'
        - $ref: '#/components/parameters/OMPrecisionParam'
      responses:
        '200':
          description: Successful operation
          content:
            application/json; charset=utf-8:
              schema:
                type: object
                required:
                  - data
                properties:
                  data:
                    type: array
                    items:
                      $ref: '#/components/schemas/OMStake'
        '400':
          description: Invalid parameters
        '401':
          description: Unauthorized
        '500':
          description: Internal server error
    post:
      tags:
        - Mantra (OM)
      summary: Create stakes
      description: Link a Mantra stake to a Kiln account
      operationId: postOmStakes
      requestBody:
        description: Stakes to create
        required: true
        content:
          application/json; charset=utf-8:
            schema:
              $ref: '#/components/schemas/PostOMStakesPayload'
      responses:
        '201':
          description: Successful operation
          content:
            application/json; charset=utf-8:
              schema:
                type: object
                required:
                  - data
                properties:
                  data:
                    $ref: '#/components/schemas/CoreStake'
        '400':
          description: Invalid parameters
        '401':
          description: Unauthorized
        '500':
          description: Internal server error
  /om/rewards:
    get:
      tags:
        - Mantra (OM)
      summary: Rewards
      description: Get historical rewards by day of Mantra stakes. Units are in uOM (10⁻⁶ OM).
      operationId: getOmRewards
      parameters:
        - $ref: '#/components/parameters/OMValidatorsParam'
        - $ref: '#/components/parameters/OMDelegatorsParam'
        - $ref: '#/components/parameters/AccountsParam'
        - $ref: '#/components/parameters/StartDateParam'
        - $ref: '#/components/parameters/EndDateParam'
        - $ref: '#/components/parameters/IncludeUSDParam'
        - $ref: '#/components/parameters/OMPrecisionParam'
      responses:
        '200':
          description: Successful operation
          content:
            application/json; charset=utf-8:
              schema:
                type: object
                required:
                  - data
                properties:
                  data:
                    type: array
                    items:
                      $ref: '#/components/schemas/OMReward'
              examples:
                rewards:
                  value:
                    data:
                      - date: '2024-04-02'
                        balance: '1241363393778'
                        rewards: '304836574'
                        net_apy: 8.96
                        balance_usd: 3594430.8409594875
                        rewards_usd: 882.6698036449283
                      - date: '2024-04-03'
                        balance: '1241726584155'
                        rewards: '303185463'
                        net_apy: 8.91
                        balance_usd: 3271315.486798869
                        rewards_usd: 798.7388795087446
        '400':
          description: Invalid parameters
        '401':
          description: Unauthorized
        '500':
          description: Internal server error
  /om/operations:
    get:
      tags:
        - Mantra (OM)
      summary: Operations
      description: Get the operations of Mantra stakes. Units are in uOM (10⁻⁶ OM).
      operationId: getOmOperations
      parameters:
        - $ref: '#/components/parameters/OMValidatorsParam'
        - $ref: '#/components/parameters/OMDelegatorsParam'
        - $ref: '#/components/parameters/OMAuthzFlagParam'
        - $ref: '#/components/parameters/AccountsParam'
        - $ref: '#/components/parameters/StartDateParam'
        - $ref: '#/components/parameters/EndDateParam'
        - $ref: '#/components/parameters/OMPrecisionParam'
      responses:
        '200':
          description: Successful operation
          content:
            application/json; charset=utf-8:
              schema:
                type: object
                required:
                  - data
                properties:
                  data:
                    type: array
                    items:
                      anyOf:
                        - $ref: '#/components/schemas/OMOperationDelegate'
                        - $ref: '#/components/schemas/OMOperationUndelegate'
                        - $ref: '#/components/schemas/OMOperationRedelegate'
                        - $ref: '#/components/schemas/OMOperationWithdrawRewards'
                        - $ref: '#/components/schemas/OMOperationGrant'
                        - $ref: '#/components/schemas/OMOperationExec'
                      discriminator:
                        propertyName: type
                        mapping:
                          staking.MsgDelegate: '#/components/schemas/OMOperationDelegate'
                          staking.MsgUndelegate: '#/components/schemas/OMOperationUndelegate'
                          staking.MsgBeginRedelegate: '#/components/schemas/OMOperationRedelegate'
                          distr.MsgWithdrawDelegatorReward: '#/components/schemas/OMOperationWithdrawRewards'
                          authz.Grant: '#/components/schemas/OMOperationGrant'
                          authz.Exec: '#/components/schemas/OMOperationExec'
        '400':
          description: Invalid parameters
        '401':
          description: Unauthorized
        '500':
          description: Internal server error
  /om/network-stats:
    get:
      tags:
        - Mantra (OM)
      summary: Network Stats
      description: Get some network statistics on Mantra
      operationId: getOmNetworkStats
      responses:
        '200':
          description: Successful operation
          content:
            application/json; charset=utf-8:
              schema:
                type: object
                required:
                  - data
                properties:
                  data:
                    $ref: '#/components/schemas/OMNetworkStats'
        '401':
          description: Unauthorized
        '500':
          description: Internal server error
  /om/reports:
    get:
      tags:
        - Mantra (OM)
      summary: Reports
      description: Get reports on Mantra staking
      operationId: getOmReports
      parameters:
        - $ref: '#/components/parameters/OMDelegatorsParam'
        - $ref: '#/components/parameters/OMValidatorsParam'
        - $ref: '#/components/parameters/AccountsParam'
      responses:
        '200':
          description: Successful operation
          content:
            application/octet-stream:
              schema:
                type: string
                format: binary
                example: ...
        '400':
          description: Invalid parameters
        '401':
          description: Unauthorized
        '500':
          description: Internal server error
  /om/balance:
    post:
      tags:
        - Mantra (OM)
      summary: Get balance
      description: Get balance of a Mantra account
      operationId: postOmGetBalance
      requestBody:
        description: Account to query
        required: true
        content:
          application/json; charset=utf-8:
            schema:
              $ref: '#/components/schemas/OMGetBalancePayload'
      responses:
        '200':
          description: Successful operation
          content:
            application/json; charset=utf-8:
              schema:
                type: object
                required:
                  - data
                properties:
                  data:
                    type: object
                    required:
                      - amount
                      - denom
                    properties:
                      amount:
                        type: string
                        description: The balance of the account
                        example: '1000000'
                      denom:
                        type: string
                        description: The denomination of the balance
                        example: uOM
        '400':
          description: Invalid parameters
        '401':
          description: Unauthorized
        '500':
          description: Internal server error
  /om/transaction/stake:
    post:
      tags:
        - Mantra (OM)
      summary: Stake Transaction
      description: Generates a delegate transaction on Mantra
      operationId: postOmStakeTx
      requestBody:
        description: Transaction to craft
        required: true
        content:
          application/json; charset=utf-8:
            schema:
              $ref: '#/components/schemas/OMCraftStakeTxPayload'
      responses:
        '200':
          description: Successful operation
          content:
            application/json; charset=utf-8:
              schema:
                type: object
                required:
                  - data
                properties:
                  data:
                    $ref: '#/components/schemas/OMStakeUnsignedTx'
        '400':
          description: Invalid parameters
        '401':
          description: Unauthorized
        '500':
          description: Internal server error
  /om/transaction/withdraw-rewards:
    post:
      tags:
        - Mantra (OM)
      summary: Withdraw Rewards Transaction
      description: Generates a withdraw rewards transaction on Mantra
      operationId: postOmWithdrawRewardsTx
      requestBody:
        description: Transaction to craft
        required: true
        content:
          application/json; charset=utf-8:
            schema:
              $ref: '#/components/schemas/OMCraftWithdrawRewardsTxPayload'
      responses:
        '200':
          description: Successful operation
          content:
            application/json; charset=utf-8:
              schema:
                type: object
                required:
                  - data
                properties:
                  data:
                    $ref: '#/components/schemas/OMUnsignedTx'
        '400':
          description: Invalid parameters
        '401':
          description: Unauthorized
        '500':
          description: Internal server error
  /om/transaction/restake-rewards:
    post:
      tags:
        - Mantra (OM)
      summary: Restake Rewards Transaction
      description: Generates a restake rewards transaction on Mantra
      operationId: postOmRestakeRewardsTx
      requestBody:
        description: Transaction to craft
        required: true
        content:
          application/json; charset=utf-8:
            schema:
              $ref: '#/components/schemas/OMCraftRestakeRewardsTxPayload'
      responses:
        '200':
          description: Successful operation
          content:
            application/json; charset=utf-8:
              schema:
                type: object
                required:
                  - data
                properties:
                  data:
                    $ref: '#/components/schemas/OMUnsignedTx'
        '400':
          description: Invalid parameters
        '401':
          description: Unauthorized
        '500':
          description: Internal server error
  /om/transaction/unstake:
    post:
      tags:
        - Mantra (OM)
      summary: Unstake Transaction
      description: Generates an undelegate transaction on Mantra
      operationId: postOmUnstakeTx
      requestBody:
        description: Transaction to craft
        required: true
        content:
          application/json; charset=utf-8:
            schema:
              $ref: '#/components/schemas/OMCraftUnstakeTxPayload'
      responses:
        '200':
          description: Successful operation
          content:
            application/json; charset=utf-8:
              schema:
                type: object
                required:
                  - data
                properties:
                  data:
                    $ref: '#/components/schemas/OMUnsignedTx'
        '400':
          description: Invalid parameters
        '401':
          description: Unauthorized
        '500':
          description: Internal server error
  /om/transaction/redelegate:
    post:
      tags:
        - Mantra (OM)
      summary: Redelegate Transaction
      description: Generates a redelegate transaction on Mantra to move a stake from a validator to another without going through the 21 days unbonding period.
      operationId: postOmRedelegateTx
      requestBody:
        description: Transaction to craft
        required: true
        content:
          application/json; charset=utf-8:
            schema:
              $ref: '#/components/schemas/OMCraftRedelegateTxPayload'
      responses:
        '200':
          description: Successful operation
          content:
            application/json; charset=utf-8:
              schema:
                type: object
                required:
                  - data
                properties:
                  data:
                    $ref: '#/components/schemas/OMUnsignedTx'
        '400':
          description: Invalid parameters
        '401':
          description: Unauthorized
        '500':
          description: Internal server error
  /om/transaction/prepare:
    post:
      tags:
        - Mantra (OM)
      summary: Prepare Transaction
      description: Prepare an unsigned transaction for broadcast by adding signatures to it
      operationId: postOmPrepareTx
      requestBody:
        description: Transaction to prepare
        required: true
        content:
          application/json; charset=utf-8:
            schema:
              $ref: '#/components/schemas/OMPrepareTxPayload'
      responses:
        '200':
          description: Successful operation
          content:
            application/json; charset=utf-8:
              schema:
                type: object
                required:
                  - data
                properties:
                  data:
                    $ref: '#/components/schemas/OMSignedTx'
        '400':
          description: Invalid parameters
        '401':
          description: Unauthorized
        '500':
          description: Internal server error
  /om/transaction/broadcast:
    post:
      tags:
        - Mantra (OM)
      summary: Broadcast Transaction
      description: Broadcast a signed transaction to the Mantra network
      operationId: postOmBroadcastTx
      requestBody:
        description: Transaction to broadcast
        required: true
        content:
          application/json; charset=utf-8:
            schema:
              $ref: '#/components/schemas/OMBroadcastTxPayload'
      responses:
        '200':
          description: Successful operation
          content:
            application/json; charset=utf-8:
              schema:
                type: object
                required:
                  - data
                properties:
                  data:
                    $ref: '#/components/schemas/OMTxHash'
        '400':
          description: Invalid parameters
        '401':
          description: Unauthorized
        '500':
          description: Internal server error
  /om/transaction/send:
    post:
      tags:
        - Mantra (OM)
      summary: Send Transaction
      description: Generates a send transaction on Mantra
      operationId: postOmSendTx
      requestBody:
        description: Transaction to craft
        required: true
        content:
          application/json; charset=utf-8:
            schema:
              $ref: '#/components/schemas/OMCraftSendTxPayload'
      responses:
        '200':
          description: Successful operation
          content:
            application/json; charset=utf-8:
              schema:
                type: object
                required:
                  - data
                properties:
                  data:
                    $ref: '#/components/schemas/OMUnsignedTx'
        '400':
          description: Invalid parameters
        '401':
          description: Unauthorized
        '500':
          description: Internal server error
  /om/transaction/status:
    get:
      tags:
        - Mantra (OM)
      summary: Transaction Status
      description: Get the status of a transaction
      operationId: getOmTxStatus
      parameters:
        - name: tx_hash
          in: query
          description: Hash of the transaction
          required: true
          style: form
          explode: false
          schema:
            type: string
            example: 2B4F732E12D5D5AF1F907AD03B199167A718EDC6201DE5713143AB80990420CB
      responses:
        '200':
          description: Successful operation
          content:
            application/json; charset=utf-8:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/OMTxStatus'
        '400':
          description: Invalid parameters
        '401':
          description: Unauthorized
        '500':
          description: Internal server error
  /om/transaction/decode:
    get:
      tags:
        - Mantra (OM)
      summary: Transaction Decoding
      description: Decode a transaction
      operationId: getOmTxDecoding
      parameters:
        - name: tx_serialized
          in: query
          description: Raw transaction to decode
          required: true
          style: form
          explode: false
          schema:
            type: string
            example: 0aa1010a9e010a232f636f736d6f732e7374616b696e672e763162657461312e4d736744656c656761746512770a2d636f736d6f733139633966646834383876716a636c6c74777036386a6d3530796477796833366a7165617465761234636f736d6f7376616c6f706572313679733065673933356d6b71706b79646b6766636a39616765326175386c39366e61657265391a100a057561746f6d12073130303030303012670a500a460a1f2f636f736d6f732e63727970746f2e736563703235366b312e5075624b657912230a21039ce47b2a813d13876131a9c3be77e8c4afa49e948744abbee11f939e2a420f4612040a020801186612130a0d0a057561746f6d1204353030301080897a1a1174686574612d746573746e65742d30303120e0cd2a
      responses:
        '200':
          description: Successful operation
          content:
            application/json; charset=utf-8:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/OMTxDecoding'
        '400':
          description: Invalid parameters
        '401':
          description: Unauthorized
        '500':
          description: Internal server error
  /ada/stakes:
    get:
      tags:
        - Cardano (ADA)
      summary: Stakes
      description: Get the status of Cardano stakes.
      operationId: getAdaStakes
      parameters:
        - $ref: '#/components/parameters/ADAStakeAddressesParam'
        - $ref: '#/components/parameters/ADAWalletsParam'
        - $ref: '#/components/parameters/ADAPoolIDsParam'
        - $ref: '#/components/parameters/AccountsParam'
        - $ref: '#/components/parameters/ADAPaginationPageParam'
        - $ref: '#/components/parameters/ADAPaginationPageSizeParam'
      responses:
        '200':
          description: Successful operation
          content:
            application/json; charset=utf-8:
              schema:
                type: object
                required:
                  - data
                properties:
                  data:
                    type: array
                    items:
                      oneOf:
                        - $ref: '#/components/schemas/ADAStake'
        '400':
          description: Invalid parameters
        '401':
          description: Unauthorized
        '500':
          description: Internal server error
    post:
      tags:
        - Cardano (ADA)
      summary: Create stakes
      description: Link ADA stakes to a Kiln account
      operationId: postAdaStakes
      requestBody:
        description: Stakes to create
        required: true
        content:
          application/json; charset=utf-8:
            schema:
              $ref: '#/components/schemas/ADAPostStakesPayload'
      responses:
        '201':
          description: Successful operation
          content:
            application/json; charset=utf-8:
              schema:
                type: object
                required:
                  - data
                properties:
                  data:
                    $ref: '#/components/schemas/CoreStake'
        '400':
          description: Invalid parameters
        '401':
          description: Unauthorized
        '500':
          description: Internal server error
  /ada/rewards:
    get:
      tags:
        - Cardano (ADA)
      summary: Rewards
      description: Get historical rewards by day of ADA stakes
      operationId: getAdARewards
      parameters:
        - $ref: '#/components/parameters/ADAStakeAddressesParam'
        - $ref: '#/components/parameters/ADAPoolIDsParam'
        - $ref: '#/components/parameters/ADAWalletsParam'
        - $ref: '#/components/parameters/AccountsParam'
        - $ref: '#/components/parameters/ADARewardsFormatParam'
        - $ref: '#/components/parameters/StartDateParam'
        - $ref: '#/components/parameters/EndDateParam'
        - $ref: '#/components/parameters/ADAStartEpochParam'
        - $ref: '#/components/parameters/ADAEndEpochParam'
        - $ref: '#/components/parameters/IncludeUSDParam'
      responses:
        '200':
          description: Successful operation
          content:
            application/json; charset=utf-8:
              schema:
                type: object
                required:
                  - data
                properties:
                  data:
                    type: array
                    items:
                      oneOf:
                        - $ref: '#/components/schemas/ADARewardByDay'
                        - $ref: '#/components/schemas/ADARewardByEpoch'
              examples:
                rewards:
                  value:
                    data:
                      - date: '2023-01-15'
                        rewards: '27098488'
                        active_balance: '420000000000'
                        net_apy: 3.42
                        rewards_usd: '12'
                        stake_balance_usd: '2546'
                      - date: '2023-01-16'
                        rewards: '27099488'
                        active_balance: '420027098488'
                        net_apy: 3.4
                        rewards_usd: '12'
                        stake_balance_usd: '2546'
        '400':
          description: Invalid parameters
        '401':
          description: Unauthorized
        '500':
          description: Internal server error
  /ada/operations:
    get:
      tags:
        - Cardano (ADA)
      summary: Operations
      description: Get the operations of Cardano stakes.
      operationId: getAdaOperations
      parameters:
        - $ref: '#/components/parameters/ADAStakeAddressesParam'
        - $ref: '#/components/parameters/ADAWalletsParam'
        - $ref: '#/components/parameters/ADAPoolIDsParam'
        - $ref: '#/components/parameters/AccountsParam'
        - $ref: '#/components/parameters/StartDateParam'
        - $ref: '#/components/parameters/EndDateParam'
      responses:
        '200':
          description: Successful operation
          content:
            application/json; charset=utf-8:
              schema:
                type: object
                required:
                  - data
                properties:
                  data:
                    type: array
                    items:
                      anyOf:
                        - $ref: '#/components/schemas/ADAOperationStakeRegistration'
                        - $ref: '#/components/schemas/ADAOperationStakeDeregistration'
                        - $ref: '#/components/schemas/ADAOperationDelegation'
                        - $ref: '#/components/schemas/ADAOperationReward'
                        - $ref: '#/components/schemas/ADAOperationWithdrawal'
                      discriminator:
                        propertyName: type
                        mapping:
                          stake_registration: '#/components/schemas/ADAOperationStakeRegistration'
                          stake_deregistration: '#/components/schemas/ADAOperationStakeDeregistration'
                          delegation: '#/components/schemas/ADAOperationDelegation'
                          reward: '#/components/schemas/ADAOperationReward'
                          withdrawal: '#/components/schemas/ADAOperationWithdrawal'
        '400':
          description: Invalid parameters
        '401':
          description: Unauthorized
        '500':
          description: Internal server error
  /ada/reports:
    get:
      tags:
        - Cardano (ADA)
      summary: Reports
      description: Get reports on Cardano staking
      operationId: getAdaReports
      parameters:
        - $ref: '#/components/parameters/ADAStakeAddressesParam'
        - $ref: '#/components/parameters/ADAWalletsParam'
        - $ref: '#/components/parameters/AccountsParam'
        - $ref: '#/components/parameters/ADARewardsFormatParam'
      responses:
        '200':
          description: Successful operation
          content:
            application/octet-stream:
              schema:
                type: string
                format: binary
                example: ...
        '400':
          description: Invalid parameters
        '401':
          description: Unauthorized
        '500':
          description: Internal server error
  /ada/network-stats:
    get:
      tags:
        - Cardano (ADA)
      summary: Network Stats
      description: Get some network statistics on ADA staking
      operationId: getAdaNetworkStats
      responses:
        '200':
          description: Successful operation
          content:
            application/json; charset=utf-8:
              schema:
                type: object
                required:
                  - data
                properties:
                  data:
                    $ref: '#/components/schemas/ADANetworkStats'
        '401':
          description: Unauthorized
        '500':
          description: Internal server error
  /ada/transaction/stake:
    post:
      tags:
        - Cardano (ADA)
      summary: Stake Transaction
      description: Generates a delegate transaction on Cardano. Your wallet must have at least 4 ADA to cover for fees and pool deposit (2 ADA).
      operationId: postAdaStakeTx
      requestBody:
        description: Transaction to craft
        required: true
        content:
          application/json; charset=utf-8:
            schema:
              $ref: '#/components/schemas/ADACraftStakeTxPayload'
      responses:
        '200':
          description: Successful operation
          content:
            application/json; charset=utf-8:
              schema:
                type: object
                required:
                  - data
                properties:
                  data:
                    $ref: '#/components/schemas/ADAUnsignedTx'
        '400':
          description: Invalid parameters
        '401':
          description: Unauthorized
        '500':
          description: Internal server error
  /ada/transaction/withdraw-rewards:
    post:
      tags:
        - Cardano (ADA)
      summary: Withdraw Rewards Transaction
      description: Generates a withdraw rewards transaction on Cardano
      operationId: postAdaWithdrawRewardsTx
      requestBody:
        description: Transaction to craft
        required: true
        content:
          application/json; charset=utf-8:
            schema:
              $ref: '#/components/schemas/ADACraftWithdrawRewardsTxPayload'
      responses:
        '200':
          description: Successful operation
          content:
            application/json; charset=utf-8:
              schema:
                type: object
                required:
                  - data
                properties:
                  data:
                    $ref: '#/components/schemas/ADAUnsignedTx'
        '400':
          description: Invalid parameters
        '401':
          description: Unauthorized
        '500':
          description: Internal server error
  /ada/transaction/unstake:
    post:
      tags:
        - Cardano (ADA)
      summary: Unstake Transaction
      description: Generates an undelegate transaction on Cardano
      operationId: postAdaUnstakeTx
      requestBody:
        description: Transaction to craft
        required: true
        content:
          application/json; charset=utf-8:
            schema:
              $ref: '#/components/schemas/ADACraftUnstakeTxPayload'
      responses:
        '200':
          description: Successful operation
          content:
            application/json; charset=utf-8:
              schema:
                type: object
                required:
                  - data
                properties:
                  data:
                    $ref: '#/components/schemas/ADAUnsignedTx'
        '400':
          description: Invalid parameters
        '401':
          description: Unauthorized
        '500':
          description: Internal server error
  /ada/transaction/prepare:
    post:
      tags:
        - Cardano (ADA)
      summary: Prepare Transaction
      description: Prepare an unsigned transaction for broadcast by adding signatures to it
      operationId: postAdaPrepareTx
      requestBody:
        description: Transaction to prepare
        required: true
        content:
          application/json; charset=utf-8:
            schema:
              $ref: '#/components/schemas/ADAPrepareTxPayload'
      responses:
        '200':
          description: Successful operation
          content:
            application/json; charset=utf-8:
              schema:
                type: object
                required:
                  - data
                properties:
                  data:
                    $ref: '#/components/schemas/ADASignedTx'
        '400':
          description: Invalid parameters
        '401':
          description: Unauthorized
        '500':
          description: Internal server error
  /ada/transaction/broadcast:
    post:
      tags:
        - Cardano (ADA)
      summary: Broadcast Transaction
      description: Broadcast a signed transaction to the Cardano network
      operationId: postAdaBroadcastTx
      requestBody:
        description: Transaction to broadcast
        required: true
        content:
          application/json; charset=utf-8:
            schema:
              $ref: '#/components/schemas/ADABroadcastTxPayload'
      responses:
        '200':
          description: Successful operation
          content:
            application/json; charset=utf-8:
              schema:
                type: object
                required:
                  - data
                properties:
                  data:
                    $ref: '#/components/schemas/ADATxHash'
        '400':
          description: Invalid parameters
        '401':
          description: Unauthorized
        '500':
          description: Internal server error
  /ada/transaction/status:
    get:
      tags:
        - Cardano (ADA)
      summary: Transaction Status
      description: Get the status of a transaction
      operationId: getAdaTxStatus
      parameters:
        - name: tx_hash
          in: query
          description: Hash of the transaction
          required: true
          style: form
          explode: false
          schema:
            type: string
            example: 7f12d9eacd762d130838289397480e495db0fd268bd3be4fd55c74a74fd8372d
      responses:
        '200':
          description: Successful operation
          content:
            application/json; charset=utf-8:
              schema:
                type: object
                required:
                  - data
                properties:
                  data:
                    $ref: '#/components/schemas/ADATxStatus'
        '400':
          description: Invalid parameters
        '401':
          description: Unauthorized
        '500':
          description: Internal server error
  /ada/transaction/decode:
    get:
      tags:
        - Cardano (ADA)
      summary: Transaction Decoding
      description: Decode a transaction
      operationId: getAdaTxDecoding
      parameters:
        - name: tx_serialized
          in: query
          description: Raw transaction to decode
          required: true
          style: form
          explode: false
          schema:
            type: string
            example: 84a50081825820ec36e28de84b27ead8da428efd8ab9a1d2c0aaaec5a5f485451bdf48cb2d795800018182583900491a1d0747fa91f319625e39076232ad4cc274e3257f345ced82dbb2a8565045c49103b521a3827ff64b98889350a22fa9a0b5ccf72b279b1b0000000254f866e0021a000493e0031a02612452048183028200581ca8565045c49103b521a3827ff64b98889350a22fa9a0b5ccf72b279b581ce54d5f9340218a9816cafafc92dc3d5212b6d149ce75e9637cbcd7e0a0f5f6
      responses:
        '200':
          description: Successful operation
          content:
            application/json; charset=utf-8:
              schema:
                type: object
                description: Decoded transaction
                example:
                  body:
                    inputs:
                      - transaction_id: ec36e28de84b27ead8da428efd8ab9a1d2c0aaaec5a5f485451bdf48cb2d7958
                        index: 0
                    outputs:
                      - address: addr_test1qpy358g8glafrucevf0rjpmzx2k5esn5uvjh7dzuakpdhv4g2egyt3y3qw6jrguz0lmyhxygjdg2ytaf5z6ueaety7dsmpcee5
                        amount:
                          coin: '10015500000'
                    fee: '300000'
                    ttl: '39920722'
                    certs:
                      - StakeDelegation:
                          stake_credential:
                            Key: a8565045c49103b521a3827ff64b98889350a22fa9a0b5ccf72b279b
                          pool_keyhash: e54d5f9340218a9816cafafc92dc3d5212b6d149ce75e9637cbcd7e0
                  witness_set: {}
                  is_valid: true
        '400':
          description: Invalid parameters
        '401':
          description: Unauthorized
        '500':
          description: Internal server error
  /bbn/stakes:
    get:
      tags:
        - Babylon (BBN)
      summary: Stakes
      description: BBN
      operationId: getBbnStakes
      parameters:
        - $ref: '#/components/parameters/BBNWalletsParam'
        - $ref: '#/components/parameters/BBNTxIDsParam'
        - $ref: '#/components/parameters/AccountsParam'
      responses:
        '200':
          description: Successful operation
          content:
            application/json; charset=utf-8:
              schema:
                type: object
                required:
                  - data
                properties:
                  data:
                    type: array
                    items:
                      $ref: '#/components/schemas/BBNStake'
        '400':
          description: Invalid parameters
        '401':
          description: Unauthorized
        '500':
          description: Internal server error
    post:
      tags:
        - Babylon (BBN)
      summary: Create stakes
      description: Link BBN stakes to a Kiln account
      operationId: postBbnStakes
      requestBody:
        description: Stakes to create
        required: true
        content:
          application/json; charset=utf-8:
            schema:
              $ref: '#/components/schemas/BBNPostStakesPayload'
      responses:
        '201':
          description: Successful operation
          content:
            application/json; charset=utf-8:
              schema:
                type: object
                required:
                  - data
                properties:
                  data:
                    $ref: '#/components/schemas/CoreStake'
        '400':
          description: Invalid parameters
        '401':
          description: Unauthorized
        '500':
          description: Internal server error
  /bbn/transaction/stake:
    post:
      tags:
        - Babylon (BBN)
      summary: Stake Transaction
      description: Craft a staking transaction to stake your bitcoin
      operationId: postBbnStakeTx
      requestBody:
        description: Transaction to craft
        required: true
        content:
          application/json; charset=utf-8:
            schema:
              $ref: '#/components/schemas/BBNCraftStakeTxPayload'
      responses:
        '200':
          description: Successful operation
          content:
            application/json; charset=utf-8:
              schema:
                type: object
                required:
                  - data
                properties:
                  data:
                    $ref: '#/components/schemas/BBNUnsignedTx'
        '400':
          description: Invalid parameters
        '401':
          description: Unauthorized
        '500':
          description: Internal server error
  /bbn/transaction/broadcast:
    post:
      tags:
        - Babylon (BBN)
      summary: Broadcast Transaction
      description: Broadcast a signed transaction to the Babylon network
      operationId: postBbnBroadcastTx
      requestBody:
        description: Transaction to broadcast
        required: true
        content:
          application/json; charset=utf-8:
            schema:
              $ref: '#/components/schemas/BBNBroadcastTxPayload'
      responses:
        '200':
          description: Successful operation
          content:
            application/json; charset=utf-8:
              schema:
                type: object
                required:
                  - data
                properties:
                  data:
                    $ref: '#/components/schemas/BBNTxHash'
        '400':
          description: Invalid parameters
        '401':
          description: Unauthorized
        '500':
          description: Internal server error
  /matic/stakes:
    get:
      deprecated: true
      tags:
        - Polygon (MATIC)
      summary: Stakes
      description: |
        Get the status of Polygon stakes. All stakes made prior to the [Ethereum block n°16430248 (18/01/2023)](https://etherscan.io/block/16430248)
        aren't fully sync-ed and will have incorrect data.
      operationId: getMaticStakes
      parameters:
        - $ref: '#/components/parameters/MATICWalletsParam'
        - $ref: '#/components/parameters/MATICValidatorIndexesParam'
        - $ref: '#/components/parameters/AccountsParam'
      responses:
        '200':
          description: Successful operation
          content:
            application/json; charset=utf-8:
              schema:
                type: object
                properties:
                  data:
                    type: array
                    items:
                      $ref: '#/components/schemas/MATICStake'
        '400':
          description: Invalid parameters
        '401':
          description: Unauthorized
        '500':
          description: Internal server error
    post:
      deprecated: true
      tags:
        - Polygon (MATIC)
      summary: Create stakes
      description: Link MATIC stakes to a Kiln account
      operationId: postMaticStakes
      requestBody:
        description: Stakes to create
        required: true
        content:
          application/json; charset=utf-8:
            schema:
              $ref: '#/components/schemas/MATICPostStakesPayload'
      responses:
        '201':
          description: Successful operation
          content:
            application/json; charset=utf-8:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/CoreStake'
        '400':
          description: Invalid parameters
        '401':
          description: Unauthorized
        '500':
          description: Internal server error
  /matic/rewards:
    get:
      deprecated: true
      tags:
        - Polygon (MATIC)
      summary: Rewards
      description: |
        Get historical rewards by day of Polygon stakes. All stakes made prior to the [Ethereum block n°16430248 (18/01/2023)](https://etherscan.io/block/16430248)
        aren't fully sync-ed and will have lower than expected rewards.
      operationId: getMaticRewards
      parameters:
        - $ref: '#/components/parameters/MATICWalletsParam'
        - $ref: '#/components/parameters/MATICValidatorIndexesParam'
        - $ref: '#/components/parameters/AccountsParam'
        - $ref: '#/components/parameters/StartDateParam'
        - $ref: '#/components/parameters/EndDateParam'
        - $ref: '#/components/parameters/IncludeUSDParam'
      responses:
        '200':
          description: Successful operation
          content:
            application/json; charset=utf-8:
              schema:
                type: object
                required:
                  - data
                properties:
                  data:
                    type: array
                    items:
                      $ref: '#/components/schemas/MATICReward'
              examples:
                rewards:
                  value:
                    data:
                      - date: '2023-01-15'
                        rewards: '2988504000000000'
                        active_balance: '64000000000000000000'
                        net_apy: 3.42
                        rewards_usd: '12'
                        stake_balance_usd: '25400'
                      - date: '2023-01-16'
                        rewards: '2988504000000000'
                        active_balance: '64000000000000000000'
                        net_apy: 3.407
                        rewards_usd: '13'
                        stake_balance_usd: '25412'
        '400':
          description: Invalid parameters
        '401':
          description: Unauthorized
        '500':
          description: Internal server error
  /matic/operations:
    get:
      deprecated: true
      tags:
        - Polygon (MATIC)
      summary: Operations
      description: |
        Get the operations of Polygon stakes. All operations made prior to the [Ethereum block n°16430248 (18/01/2023)](https://etherscan.io/block/16430248) are unknown to the API.
      operationId: getMaticOperations
      parameters:
        - $ref: '#/components/parameters/MATICWalletsParam'
        - $ref: '#/components/parameters/MATICValidatorIndexesParam'
        - $ref: '#/components/parameters/AccountsParam'
        - $ref: '#/components/parameters/StartDateParam'
        - $ref: '#/components/parameters/EndDateParam'
      responses:
        '200':
          description: Successful operation
          content:
            application/json; charset=utf-8:
              schema:
                type: object
                properties:
                  data:
                    type: array
                    items:
                      anyOf:
                        - $ref: '#/components/schemas/MATICOperationShareMinted'
                        - $ref: '#/components/schemas/MATICOperationShareBurned'
                        - $ref: '#/components/schemas/MATICOperationShareBurnedWithID'
                        - $ref: '#/components/schemas/MATICOperationDelegatorRestaked'
                        - $ref: '#/components/schemas/MATICOperationDelegatorUnstaked'
                        - $ref: '#/components/schemas/MATICOperationDelegatorUnstakedWithID'
                        - $ref: '#/components/schemas/MATICOperationDelegatorClaimedRewards'
                        - $ref: '#/components/schemas/MATICOperationSharesTransfer'
                      discriminator:
                        propertyName: type
                        mapping:
                          share_minted: '#/components/schemas/MATICOperationShareMinted'
                          share_burned: '#/components/schemas/MATICOperationShareBurned'
                          share_burned_with_id: '#/components/schemas/MATICOperationShareBurnedWithID'
                          delegator_restaked: '#/components/schemas/MATICOperationDelegatorRestaked'
                          delegator_unstaked: '#/components/schemas/MATICOperationDelegatorUnstaked'
                          delegator_unstaked_with_id: '#/components/schemas/MATICOperationDelegatorUnstakedWithID'
                          delegator_claimed_rewards: '#/components/schemas/MATICOperationDelegatorClaimedRewards'
                          shares_transfer: '#/components/schemas/MATICOperationSharesTransfer'
        '400':
          description: Invalid parameters
        '401':
          description: Unauthorized
        '500':
          description: Internal server error
  /matic/network-stats:
    get:
      deprecated: true
      tags:
        - Polygon (MATIC)
      summary: Network Stats
      description: Get some network statistics on Polygon staking
      operationId: getMaticNetworkStats
      responses:
        '200':
          description: Successful operation
          content:
            application/json; charset=utf-8:
              schema:
                type: object
                required:
                  - data
                properties:
                  data:
                    $ref: '#/components/schemas/MATICNetworkStats'
        '401':
          description: Unauthorized
        '500':
          description: Internal server error
  /matic/reports:
    get:
      deprecated: true
      tags:
        - Polygon (MATIC)
      summary: Reports
      description: Get reports on Polygon staking
      operationId: getMaticReports
      parameters:
        - $ref: '#/components/parameters/MATICValidatorIndexesParam'
        - $ref: '#/components/parameters/MATICWalletsParam'
        - $ref: '#/components/parameters/AccountsParam'
      responses:
        '200':
          description: Successful operation
          content:
            application/octet-stream:
              schema:
                type: string
                format: binary
                example: ...
        '400':
          description: Invalid parameters
        '401':
          description: Unauthorized
        '500':
          description: Internal server error
  /matic/transaction/approve:
    post:
      deprecated: true
      tags:
        - Polygon (MATIC)
      summary: Approve Transaction
      description: Generates an approve transaction to allow a smart contract to spend MATIC tokens on behalf of the user
      operationId: postMaticApproveTx
      requestBody:
        description: Transaction to craft
        required: true
        content:
          application/json; charset=utf-8:
            schema:
              $ref: '#/components/schemas/MATICCraftApproveTxPayload'
      responses:
        '200':
          description: Successful operation
          content:
            application/json; charset=utf-8:
              schema:
                type: object
                required:
                  - data
                properties:
                  data:
                    $ref: '#/components/schemas/MATICUnsignedTx'
        '400':
          description: Invalid parameters
        '401':
          description: Unauthorized
        '500':
          description: Internal server error
  /matic/transaction/buy-voucher:
    post:
      deprecated: true
      tags:
        - Polygon (MATIC)
      summary: Buy Voucher Transaction
      description: Generates a buy voucher transaction to buy shares from a validator. Please note that you can only buy shares from a validator if you don't have some unstaked POL that are pending for withdrawal.
      operationId: postMaticBuyVoucherTx
      requestBody:
        description: Transaction to craft
        required: true
        content:
          application/json; charset=utf-8:
            schema:
              $ref: '#/components/schemas/MATICCraftBuyVoucherTxPayload'
      responses:
        '200':
          description: Successful operation
          content:
            application/json; charset=utf-8:
              schema:
                type: object
                required:
                  - data
                properties:
                  data:
                    $ref: '#/components/schemas/MATICUnsignedTx'
        '400':
          description: Invalid parameters
        '401':
          description: Unauthorized
        '500':
          description: Internal server error
  /matic/transaction/sell-voucher:
    post:
      deprecated: true
      tags:
        - Polygon (MATIC)
      summary: Sell Voucher Transaction
      description: Generates a sell voucher transaction to sell shares from a validator. Your token then enter a 3/4 days (80 checkpoints) unbonding period.
      operationId: postMaticSellVoucherTx
      requestBody:
        description: Transaction to craft
        required: true
        content:
          application/json; charset=utf-8:
            schema:
              $ref: '#/components/schemas/MATICCraftSellVoucherTxPayload'
      responses:
        '200':
          description: Successful operation
          content:
            application/json; charset=utf-8:
              schema:
                type: object
                required:
                  - data
                properties:
                  data:
                    $ref: '#/components/schemas/MATICUnsignedTx'
        '400':
          description: Invalid parameters
        '401':
          description: Unauthorized
        '500':
          description: Internal server error
  /matic/transaction/unstake-claim-tokens:
    post:
      deprecated: true
      tags:
        - Polygon (MATIC)
      summary: Unstake Claim Tokens Transaction
      description: Generates an unstakeClaimTokens transaction to withdraw unbonded tokens back to your wallet
      operationId: postMaticUnstakeClaimTokensTx
      requestBody:
        description: Transaction to craft
        required: true
        content:
          application/json; charset=utf-8:
            schema:
              $ref: '#/components/schemas/MATICCraftUnstakeClaimTokensTxPayload'
      responses:
        '200':
          description: Successful operation
          content:
            application/json; charset=utf-8:
              schema:
                type: object
                required:
                  - data
                properties:
                  data:
                    $ref: '#/components/schemas/MATICUnsignedTx'
        '400':
          description: Invalid parameters
        '401':
          description: Unauthorized
        '500':
          description: Internal server error
  /matic/transaction/withdraw-rewards:
    post:
      deprecated: true
      tags:
        - Polygon (MATIC)
      summary: Withdraw Rewards Transaction
      description: Generates a withdraw rewards transaction to withdraw available rewards to your wallet
      operationId: postMaticWithdrawRewardsTx
      requestBody:
        description: Transaction to craft
        required: true
        content:
          application/json; charset=utf-8:
            schema:
              $ref: '#/components/schemas/MATICCraftWithdrawRewardsTxPayload'
      responses:
        '200':
          description: Successful operation
          content:
            application/json; charset=utf-8:
              schema:
                type: object
                required:
                  - data
                properties:
                  data:
                    $ref: '#/components/schemas/MATICUnsignedTx'
        '400':
          description: Invalid parameters
        '401':
          description: Unauthorized
        '500':
          description: Internal server error
  /matic/transaction/restake-rewards:
    post:
      deprecated: true
      tags:
        - Polygon (MATIC)
      summary: Restake Rewards Transaction
      description: Generates a restake rewards transaction to restake available rewards to the given validator
      operationId: postMaticRestakeRewardsTx
      requestBody:
        description: Transaction to craft
        required: true
        content:
          application/json; charset=utf-8:
            schema:
              $ref: '#/components/schemas/MATICCraftRestakeRewardsTxPayload'
      responses:
        '200':
          description: Successful operation
          content:
            application/json; charset=utf-8:
              schema:
                type: object
                required:
                  - data
                properties:
                  data:
                    $ref: '#/components/schemas/MATICUnsignedTx'
        '400':
          description: Invalid parameters
        '401':
          description: Unauthorized
        '500':
          description: Internal server error
  /matic/transaction/prepare:
    post:
      deprecated: true
      tags:
        - Polygon (MATIC)
      summary: Prepare Transaction
      description: Prepare a transaction for broadcasting. It takes a serialized transaction and its signatures and returns a serialized signed transaction that can be broadcasted.
      operationId: postMaticPrepareTx
      requestBody:
        description: Transaction to prepare
        required: true
        content:
          application/json; charset=utf-8:
            schema:
              $ref: '#/components/schemas/MATICPrepareTxPayload'
      responses:
        '200':
          description: Successful operation
          content:
            application/json; charset=utf-8:
              schema:
                type: object
                required:
                  - data
                properties:
                  data:
                    $ref: '#/components/schemas/MATICSignedTx'
        '400':
          description: Invalid parameters
        '401':
          description: Unauthorized
        '500':
          description: Internal server error
  /matic/transaction/broadcast:
    post:
      deprecated: true
      tags:
        - Polygon (MATIC)
      summary: Broadcast Transaction
      description: Broadcasts a signed transaction to the Ethereum network
      operationId: postMaticBroadcastTx
      requestBody:
        description: Transaction to broadcast
        required: true
        content:
          application/json; charset=utf-8:
            schema:
              $ref: '#/components/schemas/MATICBroadcastTxPayload'
      responses:
        '200':
          description: Successful operation
          content:
            application/json; charset=utf-8:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/MATICBroadcastedTx'
        '400':
          description: Invalid parameters
        '401':
          description: Unauthorized
        '500':
          description: Internal server error
  /matic/transaction/status:
    get:
      deprecated: true
      tags:
        - Polygon (MATIC)
      summary: Transaction Status
      description: Get the status of a transaction on the Ethereum network
      operationId: getMaticTxStatus
      parameters:
        - name: tx_hash
          in: query
          description: Hash of the transaction
          required: true
          style: form
          explode: false
          schema:
            type: string
            example: '0x43244f90814b31dec250de24df5bb023a338790c1d5a39244cf1064cf6d98c94'
      responses:
        '200':
          description: Successful operation
          content:
            application/json; charset=utf-8:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/MATICTxStatus'
        '400':
          description: Invalid parameters
        '401':
          description: Unauthorized
        '500':
          description: Internal server error
  /matic/transaction/decode:
    get:
      deprecated: true
      tags:
        - Polygon (MATIC)
      summary: Transaction Decoding
      description: Decode a transaction of the Ethereum network
      operationId: getMaticTxDecoding
      parameters:
        - name: tx_serialized
          in: query
          description: Raw transaction to decode
          required: true
          style: form
          explode: false
          schema:
            type: string
            example: 02f872058202a08477359400847735940b8307a12094499d11e0b6eac7c0593d8fb292dcbbf815fb29ae80b844095ea7b300000000000000000000000000200ea4ee292e253e6ca07dba5edc07c8aa37a3000000000000000000000000000000000000000000000001bc16d674ec800000c0808080
      responses:
        '200':
          description: Successful operation
          content:
            application/json; charset=utf-8:
              schema:
                type: object
                description: Decoded transaction
                example:
                  r: '0xe8998c51a896ee46bba670b71d8c6f64358dda0496b6c02489270f34f9db5da7'
                  s: '0x599a297b1b05dc6f086f91e9d4f01aeda22620a8c53123bbd072f2d6fd85413b'
                  v: '28'
                  yParity: 1
                  chainId: 5
                  type: eip1559
                  to: '0x1a9155ead92cd339e3ae789fd3a5dc60ae268634'
                  gas: '266040'
                  data: '0x6ab1507100000000000000000000000000000000000000000000000009b6f55d1246b6ec0000000000000000000000000000000000000000000000000000000000000000'
                  nonce: 152
                  maxFeePerGas: '1500000019'
                  maxPriorityFeePerGas: '1500000000'
        '400':
          description: Invalid parameters
        '401':
          description: Unauthorized
        '500':
          description: Internal server error
  /pol/stakes:
    get:
      tags:
        - Polygon (POL)
      summary: Stakes
      description: |
        Get the status of Polygon stakes. All stakes made prior to the [Ethereum block n°16430248 (18/01/2023)](https://etherscan.io/block/16430248)
        aren't fully sync-ed and will have incorrect data.
      operationId: getPolStakes
      parameters:
        - $ref: '#/components/parameters/POLWalletsParam'
        - $ref: '#/components/parameters/POLValidatorIndexesParam'
        - $ref: '#/components/parameters/AccountsParam'
      responses:
        '200':
          description: Successful operation
          content:
            application/json; charset=utf-8:
              schema:
                type: object
                required:
                  - data
                properties:
                  data:
                    type: array
                    items:
                      $ref: '#/components/schemas/POLStake'
        '400':
          description: Invalid parameters
        '401':
          description: Unauthorized
        '500':
          description: Internal server error
    post:
      tags:
        - Polygon (POL)
      summary: Create stakes
      description: Link POL stakes to a Kiln account
      operationId: postPolStakes
      requestBody:
        description: Stakes to create
        required: true
        content:
          application/json; charset=utf-8:
            schema:
              $ref: '#/components/schemas/POLPostStakesPayload'
      responses:
        '201':
          description: Successful operation
          content:
            application/json; charset=utf-8:
              schema:
                type: object
                required:
                  - data
                properties:
                  data:
                    $ref: '#/components/schemas/CoreStake'
        '400':
          description: Invalid parameters
        '401':
          description: Unauthorized
        '500':
          description: Internal server error
  /pol/rewards:
    get:
      tags:
        - Polygon (POL)
      summary: Rewards
      description: |
        Get historical rewards by day of Polygon stakes. All stakes made prior to the [Ethereum block n°16430248 (18/01/2023)](https://etherscan.io/block/16430248)
        aren't fully sync-ed and will have lower than expected rewards.
      operationId: getPolRewards
      parameters:
        - $ref: '#/components/parameters/POLWalletsParam'
        - $ref: '#/components/parameters/POLValidatorIndexesParam'
        - $ref: '#/components/parameters/AccountsParam'
        - $ref: '#/components/parameters/StartDateParam'
        - $ref: '#/components/parameters/EndDateParam'
        - $ref: '#/components/parameters/IncludeUSDParam'
      responses:
        '200':
          description: Successful operation
          content:
            application/json; charset=utf-8:
              schema:
                type: object
                required:
                  - data
                properties:
                  data:
                    type: array
                    items:
                      $ref: '#/components/schemas/POLReward'
              examples:
                rewards:
                  value:
                    data:
                      - date: '2023-01-15'
                        rewards: '2988504000000000'
                        active_balance: '64000000000000000000'
                        net_apy: 3.42
                        rewards_usd: '12'
                        stake_balance_usd: '25400'
                      - date: '2023-01-16'
                        rewards: '2988504000000000'
                        active_balance: '64000000000000000000'
                        net_apy: 3.407
                        rewards_usd: '13'
                        stake_balance_usd: '25412'
        '400':
          description: Invalid parameters
        '401':
          description: Unauthorized
        '500':
          description: Internal server error
  /pol/operations:
    get:
      tags:
        - Polygon (POL)
      summary: Operations
      description: |
        Get the operations of Polygon stakes. All operations made prior to the [Ethereum block n°16430248 (18/01/2023)](https://etherscan.io/block/16430248) are unknown to the API.
      operationId: getPolOperations
      parameters:
        - $ref: '#/components/parameters/POLWalletsParam'
        - $ref: '#/components/parameters/POLValidatorIndexesParam'
        - $ref: '#/components/parameters/AccountsParam'
        - $ref: '#/components/parameters/StartDateParam'
        - $ref: '#/components/parameters/EndDateParam'
      responses:
        '200':
          description: Successful operation
          content:
            application/json; charset=utf-8:
              schema:
                type: object
                required:
                  - data
                properties:
                  data:
                    type: array
                    items:
                      anyOf:
                        - $ref: '#/components/schemas/POLOperationShareMinted'
                        - $ref: '#/components/schemas/POLOperationShareBurned'
                        - $ref: '#/components/schemas/POLOperationShareBurnedWithID'
                        - $ref: '#/components/schemas/POLOperationDelegatorRestaked'
                        - $ref: '#/components/schemas/POLOperationDelegatorUnstaked'
                        - $ref: '#/components/schemas/POLOperationDelegatorUnstakedWithID'
                        - $ref: '#/components/schemas/POLOperationDelegatorClaimedRewards'
                        - $ref: '#/components/schemas/POLOperationSharesTransfer'
                      discriminator:
                        propertyName: type
                        mapping:
                          share_minted: '#/components/schemas/POLOperationShareMinted'
                          share_burned: '#/components/schemas/POLOperationShareBurned'
                          share_burned_with_id: '#/components/schemas/POLOperationShareBurnedWithID'
                          delegator_restaked: '#/components/schemas/POLOperationDelegatorRestaked'
                          delegator_unstaked: '#/components/schemas/POLOperationDelegatorUnstaked'
                          delegator_unstaked_with_id: '#/components/schemas/POLOperationDelegatorUnstakedWithID'
                          delegator_claimed_rewards: '#/components/schemas/POLOperationDelegatorClaimedRewards'
                          shares_transfer: '#/components/schemas/POLOperationSharesTransfer'
        '400':
          description: Invalid parameters
        '401':
          description: Unauthorized
        '500':
          description: Internal server error
  /pol/network-stats:
    get:
      tags:
        - Polygon (POL)
      summary: Network Stats
      description: Get some network statistics on Polygon staking
      operationId: getPolNetworkStats
      responses:
        '200':
          description: Successful operation
          content:
            application/json; charset=utf-8:
              schema:
                type: object
                required:
                  - data
                properties:
                  data:
                    $ref: '#/components/schemas/POLNetworkStats'
        '401':
          description: Unauthorized
        '500':
          description: Internal server error
  /pol/reports:
    get:
      tags:
        - Polygon (POL)
      summary: Reports
      description: Get reports on Polygon staking
      operationId: getPolReports
      parameters:
        - $ref: '#/components/parameters/POLValidatorIndexesParam'
        - $ref: '#/components/parameters/POLWalletsParam'
        - $ref: '#/components/parameters/AccountsParam'
      responses:
        '200':
          description: Successful operation
          content:
            application/octet-stream:
              schema:
                type: string
                format: binary
                example: ...
        '400':
          description: Invalid parameters
        '401':
          description: Unauthorized
        '500':
          description: Internal server error
  /pol/transaction/approve:
    post:
      tags:
        - Polygon (POL)
      summary: Approve Transaction
      description: Generates an approve transaction to allow a smart contract to spend POL tokens on behalf of the user
      operationId: postPolApproveTx
      requestBody:
        description: Transaction to craft
        required: true
        content:
          application/json; charset=utf-8:
            schema:
              $ref: '#/components/schemas/POLCraftApproveTxPayload'
      responses:
        '200':
          description: Successful operation
          content:
            application/json; charset=utf-8:
              schema:
                type: object
                required:
                  - data
                properties:
                  data:
                    $ref: '#/components/schemas/POLUnsignedTx'
        '400':
          description: Invalid parameters
        '401':
          description: Unauthorized
        '500':
          description: Internal server error
  /pol/transaction/buy-voucher:
    post:
      tags:
        - Polygon (POL)
      summary: Buy Voucher Transaction
      description: Generates a buy voucher transaction to buy shares from a validator. Please note that you can only buy shares from a validator if you don't have some unstaked POL that are pending for withdrawal.
      operationId: postPolBuyVoucherTx
      requestBody:
        description: Transaction to craft
        required: true
        content:
          application/json; charset=utf-8:
            schema:
              $ref: '#/components/schemas/POLCraftBuyVoucherTxPayload'
      responses:
        '200':
          description: Successful operation
          content:
            application/json; charset=utf-8:
              schema:
                type: object
                required:
                  - data
                properties:
                  data:
                    $ref: '#/components/schemas/POLUnsignedTx'
        '400':
          description: Invalid parameters
        '401':
          description: Unauthorized
        '500':
          description: Internal server error
  /pol/transaction/sell-voucher:
    post:
      tags:
        - Polygon (POL)
      summary: Sell Voucher Transaction
      description: Generates a sell voucher transaction to sell shares from a validator. Your token then enter a 3/4 days (80 checkpoints) unbonding period.
      operationId: postPolSellVoucherTx
      requestBody:
        description: Transaction to craft
        required: true
        content:
          application/json; charset=utf-8:
            schema:
              $ref: '#/components/schemas/POLCraftSellVoucherTxPayload'
      responses:
        '200':
          description: Successful operation
          content:
            application/json; charset=utf-8:
              schema:
                type: object
                required:
                  - data
                properties:
                  data:
                    $ref: '#/components/schemas/POLUnsignedTx'
        '400':
          description: Invalid parameters
        '401':
          description: Unauthorized
        '500':
          description: Internal server error
  /pol/transaction/unstake-claim-tokens:
    post:
      tags:
        - Polygon (POL)
      summary: Unstake Claim Tokens Transaction
      description: Generates an unstakeClaimTokens transaction to withdraw unbonded tokens back to your wallet
      operationId: postPolUnstakeClaimTokensTx
      requestBody:
        description: Transaction to craft
        required: true
        content:
          application/json; charset=utf-8:
            schema:
              $ref: '#/components/schemas/POLCraftUnstakeClaimTokensTxPayload'
      responses:
        '200':
          description: Successful operation
          content:
            application/json; charset=utf-8:
              schema:
                type: object
                required:
                  - data
                properties:
                  data:
                    $ref: '#/components/schemas/POLUnsignedTx'
        '400':
          description: Invalid parameters
        '401':
          description: Unauthorized
        '500':
          description: Internal server error
  /pol/transaction/withdraw-rewards:
    post:
      tags:
        - Polygon (POL)
      summary: Withdraw Rewards Transaction
      description: Generates a withdraw rewards transaction to withdraw available rewards to your wallet
      operationId: postPolWithdrawRewardsTx
      requestBody:
        description: Transaction to craft
        required: true
        content:
          application/json; charset=utf-8:
            schema:
              $ref: '#/components/schemas/POLCraftWithdrawRewardsTxPayload'
      responses:
        '200':
          description: Successful operation
          content:
            application/json; charset=utf-8:
              schema:
                type: object
                required:
                  - data
                properties:
                  data:
                    $ref: '#/components/schemas/POLUnsignedTx'
        '400':
          description: Invalid parameters
        '401':
          description: Unauthorized
        '500':
          description: Internal server error
  /pol/transaction/restake-rewards:
    post:
      tags:
        - Polygon (POL)
      summary: Restake Rewards Transaction
      description: Generates a restake rewards transaction to restake available rewards to the given validator
      operationId: postPolRestakeRewardsTx
      requestBody:
        description: Transaction to craft
        required: true
        content:
          application/json; charset=utf-8:
            schema:
              $ref: '#/components/schemas/POLCraftRestakeRewardsTxPayload'
      responses:
        '200':
          description: Successful operation
          content:
            application/json; charset=utf-8:
              schema:
                type: object
                required:
                  - data
                properties:
                  data:
                    $ref: '#/components/schemas/POLUnsignedTx'
        '400':
          description: Invalid parameters
        '401':
          description: Unauthorized
        '500':
          description: Internal server error
  /pol/transaction/prepare:
    post:
      tags:
        - Polygon (POL)
      summary: Prepare Transaction
      description: Prepare a transaction for broadcasting. It takes a serialized transaction and its signatures and returns a serialized signed transaction that can be broadcasted.
      operationId: postPolPrepareTx
      requestBody:
        description: Transaction to prepare
        required: true
        content:
          application/json; charset=utf-8:
            schema:
              $ref: '#/components/schemas/POLPrepareTxPayload'
      responses:
        '200':
          description: Successful operation
          content:
            application/json; charset=utf-8:
              schema:
                type: object
                required:
                  - data
                properties:
                  data:
                    $ref: '#/components/schemas/POLSignedTx'
        '400':
          description: Invalid parameters
        '401':
          description: Unauthorized
        '500':
          description: Internal server error
  /pol/transaction/broadcast:
    post:
      tags:
        - Polygon (POL)
      summary: Broadcast Transaction
      description: Broadcasts a signed transaction to the Ethereum network
      operationId: postPolBroadcastTx
      requestBody:
        description: Transaction to broadcast
        required: true
        content:
          application/json; charset=utf-8:
            schema:
              $ref: '#/components/schemas/POLBroadcastTxPayload'
      responses:
        '200':
          description: Successful operation
          content:
            application/json; charset=utf-8:
              schema:
                type: object
                required:
                  - data
                properties:
                  data:
                    $ref: '#/components/schemas/POLBroadcastedTx'
        '400':
          description: Invalid parameters
        '401':
          description: Unauthorized
        '500':
          description: Internal server error
  /pol/transaction/status:
    get:
      tags:
        - Polygon (POL)
      summary: Transaction Status
      description: Get the status of a transaction on the Ethereum network
      operationId: getPolTxStatus
      parameters:
        - name: tx_hash
          in: query
          description: Hash of the transaction
          required: true
          style: form
          explode: false
          schema:
            type: string
            example: '0x43244f90814b31dec250de24df5bb023a338790c1d5a39244cf1064cf6d98c94'
      responses:
        '200':
          description: Successful operation
          content:
            application/json; charset=utf-8:
              schema:
                type: object
                required:
                  - data
                properties:
                  data:
                    $ref: '#/components/schemas/POLTxStatus'
        '400':
          description: Invalid parameters
        '401':
          description: Unauthorized
        '500':
          description: Internal server error
  /pol/transaction/decode:
    get:
      tags:
        - Polygon (POL)
      summary: Transaction Decoding
      description: Decode a transaction of the Ethereum network
      operationId: getPolTxDecoding
      parameters:
        - name: tx_serialized
          in: query
          description: Raw transaction to decode
          required: true
          style: form
          explode: false
          schema:
            type: string
            example: 02f872058202a08477359400847735940b8307a12094499d11e0b6eac7c0593d8fb292dcbbf815fb29ae80b844095ea7b300000000000000000000000000200ea4ee292e253e6ca07dba5edc07c8aa37a3000000000000000000000000000000000000000000000001bc16d674ec800000c0808080
      responses:
        '200':
          description: Successful operation
          content:
            application/json; charset=utf-8:
              schema:
                type: object
                description: Decoded transaction
                example:
                  r: '0xe8998c51a896ee46bba670b71d8c6f64358dda0496b6c02489270f34f9db5da7'
                  s: '0x599a297b1b05dc6f086f91e9d4f01aeda22620a8c53123bbd072f2d6fd85413b'
                  v: '28'
                  yParity: 1
                  chainId: 5
                  type: eip1559
                  to: '0x1a9155ead92cd339e3ae789fd3a5dc60ae268634'
                  gas: '266040'
                  data: '0x6ab1507100000000000000000000000000000000000000000000000009b6f55d1246b6ec0000000000000000000000000000000000000000000000000000000000000000'
                  nonce: 152
                  maxFeePerGas: '1500000019'
                  maxPriorityFeePerGas: '1500000000'
        '400':
          description: Invalid parameters
        '401':
          description: Unauthorized
        '500':
          description: Internal server error
  /near/stakes:
    get:
      tags:
        - Near (NEAR)
      summary: Stakes
      description: Get the status of NEAR stakes
      operationId: getNearStakes
      parameters:
        - $ref: '#/components/parameters/NEARStakeAccountsParam'
        - $ref: '#/components/parameters/NEARValidatorsParam'
        - $ref: '#/components/parameters/NEARWalletsParam'
        - $ref: '#/components/parameters/AccountsParam'
      responses:
        '200':
          description: Successful operation
          content:
            application/json; charset=utf-8:
              schema:
                type: object
                required:
                  - data
                properties:
                  data:
                    type: array
                    items:
                      $ref: '#/components/schemas/NEARStake'
        '400':
          description: Invalid parameters
        '401':
          description: Unauthorized
        '500':
          description: Internal server error
    post:
      tags:
        - Near (NEAR)
      summary: Create stakes
      description: Create NEAR stakes and linked them to a Kiln account
      operationId: postNEARStakes
      requestBody:
        description: Stakes to create
        required: true
        content:
          application/json; charset=utf-8:
            schema:
              $ref: '#/components/schemas/PostNEARStakesPayload'
      responses:
        '201':
          description: Successful operation
          content:
            application/json; charset=utf-8:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/CoreStake'
        '400':
          description: Invalid parameters
        '401':
          description: Unauthorized
        '500':
          description: Internal server error
  /near/rewards:
    get:
      tags:
        - Near (NEAR)
      summary: Rewards
      description: Get historical rewards of NEAR stakes
      operationId: getNearRewards
      parameters:
        - $ref: '#/components/parameters/NEARStakeAccountsParam'
        - $ref: '#/components/parameters/NEARValidatorsParam'
        - $ref: '#/components/parameters/NEARWalletsParam'
        - $ref: '#/components/parameters/AccountsParam'
        - $ref: '#/components/parameters/NEARRewardsFormatParam'
        - $ref: '#/components/parameters/StartDateParam'
        - $ref: '#/components/parameters/EndDateParam'
        - $ref: '#/components/parameters/NEARStartEpochParam'
        - $ref: '#/components/parameters/NEAREndEpochParam'
        - $ref: '#/components/parameters/IncludeUSDParam'
      responses:
        '200':
          description: Successful operation
          content:
            application/json; charset=utf-8:
              schema:
                type: object
                required:
                  - data
                properties:
                  data:
                    type: array
                    items:
                      oneOf:
                        - $ref: '#/components/schemas/NEARRewardByDay'
                        - $ref: '#/components/schemas/NEARRewardByEpoch'
              examples:
                rewards:
                  value:
                    data:
                      - date: '2023-01-15'
                        rewards: '1000'
                        active_balance: '100000'
                        net_apy: 3.42
                        rewards_usd: '12'
                        stake_balance_usd: '25400'
                      - date: '2023-01-16'
                        rewards: '1000'
                        active_balance: '100000'
                        net_apy: 3.4
                        rewards_usd: '13'
                        stake_balance_usd: '25412'
        '400':
          description: Invalid parameters
        '401':
          description: Unauthorized
        '500':
          description: Internal server error
  /near/operations:
    get:
      tags:
        - Near (NEAR)
      summary: Operations
      description: Get the operations of NEAR stakes
      operationId: getNearOperations
      parameters:
        - $ref: '#/components/parameters/NEARStakeAccountsParam'
        - $ref: '#/components/parameters/NEARWalletsParam'
        - $ref: '#/components/parameters/AccountsParam'
        - $ref: '#/components/parameters/StartDateParam'
        - $ref: '#/components/parameters/EndDateParam'
      responses:
        '200':
          description: Successful operation
          content:
            application/json; charset=utf-8:
              schema:
                type: object
                required:
                  - data
                properties:
                  data:
                    type: array
                    items:
                      $ref: '#/components/schemas/NEAROperation'
        '400':
          description: Invalid parameters
        '401':
          description: Unauthorized
        '500':
          description: Internal server error
  /near/reports:
    get:
      tags:
        - Near (NEAR)
      summary: Reports
      description: Get reports on NEAR staking
      operationId: getNEARReports
      parameters:
        - $ref: '#/components/parameters/NEARStakeAccountsParam'
        - $ref: '#/components/parameters/NEARWalletsParam'
        - $ref: '#/components/parameters/AccountsParam'
        - $ref: '#/components/parameters/NEARRewardsFormatParam'
      responses:
        '200':
          description: Successful operation
          content:
            application/octet-stream:
              schema:
                type: string
                format: binary
                example: ...
        '400':
          description: Invalid parameters
        '401':
          description: Unauthorized
        '500':
          description: Internal server error
  /near/network-stats:
    get:
      tags:
        - Near (NEAR)
      summary: Network Stats
      description: Get stats on NEAR network
      operationId: getNEARNetworkStats
      responses:
        '200':
          description: Successful operation
          content:
            application/json; charset=utf-8:
              schema:
                type: object
                required:
                  - data
                properties:
                  data:
                    $ref: '#/components/schemas/NEARNetworkStats'
        '401':
          description: Unauthorized
        '500':
          description: Internal server error
  /near/transaction/stake:
    post:
      tags:
        - Near (NEAR)
      summary: Stake transaction
      description: Craft a stake transaction
      operationId: postNEARStakeTx
      requestBody:
        description: Transaction to craft
        required: true
        content:
          application/json; charset=utf-8:
            schema:
              $ref: '#/components/schemas/NEARStakeTxPayload'
      responses:
        '200':
          description: Successful operation
          content:
            application/json; charset=utf-8:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/NEARTx'
        '401':
          description: Unauthorized
        '500':
          description: Internal server error
  /near/transaction/unstake:
    post:
      tags:
        - Near (NEAR)
      summary: Unstake transaction
      description: Craft an unstake transaction
      operationId: postNEARUnstakeTx
      requestBody:
        description: Transaction to craft
        required: true
        content:
          application/json; charset=utf-8:
            schema:
              $ref: '#/components/schemas/NEARUnstakeTxPayload'
      responses:
        '200':
          description: Successful operation
          content:
            application/json; charset=utf-8:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/NEARTx'
        '401':
          description: Unauthorized
        '500':
          description: Internal server error
  /near/transaction/withdraw:
    post:
      tags:
        - Near (NEAR)
      summary: Withdraw transaction
      description: Craft a withdraw transaction
      operationId: postNEARWithdrawTx
      requestBody:
        description: Transaction to craft
        required: true
        content:
          application/json; charset=utf-8:
            schema:
              $ref: '#/components/schemas/NEARWithdrawTxPayload'
      responses:
        '200':
          description: Successful operation
          content:
            application/json; charset=utf-8:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/NEARTx'
        '401':
          description: Unauthorized
        '500':
          description: Internal server error
  /near/transaction/prepare:
    post:
      tags:
        - Near (NEAR)
      summary: Prepare transaction
      description: Prepare a transaction for broadcasting by adding a signature to it
      operationId: postNEARPrepareTx
      requestBody:
        description: Transaction to craft
        required: true
        content:
          application/json; charset=utf-8:
            schema:
              $ref: '#/components/schemas/NEARPrepareTxPayload'
      responses:
        '200':
          description: Successful operation
          content:
            application/json; charset=utf-8:
              schema:
                type: object
                required:
                  - data
                properties:
                  data:
                    $ref: '#/components/schemas/NEARSignedTx'
        '401':
          description: Unauthorized
        '500':
          description: Internal server error
  /near/transaction/broadcast:
    post:
      tags:
        - Near (NEAR)
      summary: Broadcast transaction
      description: Broadcast a transaction to the NEAR network
      operationId: postNEARBroadcastTx
      requestBody:
        description: Transaction to craft
        required: true
        content:
          application/json; charset=utf-8:
            schema:
              $ref: '#/components/schemas/NEARBroadcastTxPayload'
      responses:
        '200':
          description: Successful operation
          content:
            application/json; charset=utf-8:
              schema:
                type: object
                required:
                  - data
                properties:
                  data:
                    $ref: '#/components/schemas/NEARBroadcastedTx'
        '401':
          description: Unauthorized
        '500':
          description: Internal server error
  /near/transaction/status:
    get:
      tags:
        - Near (NEAR)
      summary: Transaction Status
      description: Get the status of a transaction
      operationId: getNearTxStatus
      parameters:
        - name: tx_hash
          in: query
          description: Hash of the transaction
          required: true
          style: form
          explode: false
          schema:
            type: string
            example: 3SjLFkpdcamiF4asqkBaRStoJCVxc72ovZkEzFHMCGY5
        - name: wallet
          in: query
          description: NEAR account ID
          required: true
          style: form
          explode: false
          schema:
            type: string
            example: account.testnet
      responses:
        '200':
          description: Successful operation
          content:
            application/json; charset=utf-8:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/NEARTxStatus'
        '400':
          description: Invalid parameters
        '401':
          description: Unauthorized
        '500':
          description: Internal server error
  /near/transaction/decode:
    get:
      tags:
        - Near (NEAR)
      summary: Transaction Decoding
      description: Decode a transaction
      operationId: getNearTxDecoding
      parameters:
        - name: tx_serialized
          in: query
          description: Raw transaction to decode
          required: true
          style: form
          explode: false
          schema:
            type: string
            example: 400000003337336336663865383463363832326139663837303335663635636363663839396565663366636465653631303737303431613933653138303562616232346500373c6f8e84c6822a9f87035f65cccf899eef3fcdee61077041a93e1805bab24e26a81fd1f55a0000100000006b696c6e2e706f6f6c76312e6e656172a75498ee0fed386c3335285f934672b386ee6632362fad2bcd5fc5931495e3830100000002110000006465706f7369745f616e645f7374616b65020000007b7d00c06e31d9100100000080f64ae1c7022d15000000000000
      responses:
        '200':
          description: Successful operation
          content:
            application/json; charset=utf-8:
              schema:
                type: object
                required:
                  - data
                properties:
                  data:
                    type: object
                    description: Decoded transaction
                    example:
                      signerId: 373c6f8e84c6822a9f87035f65cccf899eef3fcdee61077041a93e1805bab24e
                      publicKey:
                        keyType: 0
                        data:
                          '0': 55
                          '1': 60
                          '2': 111
                          '3': 142
                          '4': 132
                          '5': 198
                          '6': 130
                          '7': 42
                          '8': 159
                          '9': 135
                          '10': 3
                          '11': 95
                          '12': 101
                          '13': 204
                          '14': 207
                          '15': 137
                          '16': 158
                          '17': 239
                          '18': 63
                          '19': 205
                          '20': 238
                          '21': 97
                          '22': 7
                          '23': 112
                          '24': 65
                          '25': 169
                          '26': 62
                          '27': 24
                          '28': 5
                          '29': 186
                          '30': 178
                          '31': 78
                      nonce: 5af5d11fa826
                      receiverId: kiln.poolv1.near
                      blockHash:
                        '0': 167
                        '1': 84
                        '2': 152
                        '3': 238
                        '4': 15
                        '5': 237
                        '6': 56
                        '7': 108
                        '8': 51
                        '9': 53
                        '10': 40
                        '11': 95
                        '12': 147
                        '13': 70
                        '14': 114
                        '15': 179
                        '16': 134
                        '17': 238
                        '18': 102
                        '19': 50
                        '20': 54
                        '21': 47
                        '22': 173
                        '23': 43
                        '24': 205
                        '25': 95
                        '26': 197
                        '27': 147
                        '28': 20
                        '29': 149
                        '30': 227
                        '31': 131
                      actions:
                        - functionCall:
                            methodName: deposit_and_stake
                            args:
                              - 123
                              - 125
                            gas: 0110d9316ec000
                            deposit: 152d02c7e14af6800000
                          enum: functionCall
        '400':
          description: Invalid parameters
        '401':
          description: Unauthorized
        '500':
          description: Internal server error
  /osmo/stakes:
    get:
      tags:
        - Osmosis (OSMO)
      summary: Stakes
      description: Get the status of OSMO stakes. Units are in uOSMO (10⁻⁶ OSMO).
      operationId: getOsmoStakes
      parameters:
        - $ref: '#/components/parameters/OSMOValidatorsParam'
        - $ref: '#/components/parameters/OSMODelegatorsParam'
        - $ref: '#/components/parameters/AccountsParam'
        - $ref: '#/components/parameters/OSMOPrecisionParam'
      responses:
        '200':
          description: Successful operation
          content:
            application/json; charset=utf-8:
              schema:
                type: object
                required:
                  - data
                properties:
                  data:
                    type: array
                    items:
                      $ref: '#/components/schemas/OSMOStake'
        '400':
          description: Invalid parameters
        '401':
          description: Unauthorized
        '500':
          description: Internal server error
    post:
      tags:
        - Osmosis (OSMO)
      summary: Create stakes
      description: Link an OSMO stake to a Kiln account
      operationId: postOsmoStakes
      requestBody:
        description: Stakes to create
        required: true
        content:
          application/json; charset=utf-8:
            schema:
              $ref: '#/components/schemas/PostOSMOStakesPayload'
      responses:
        '201':
          description: Successful operation
          content:
            application/json; charset=utf-8:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/CoreStake'
        '400':
          description: Invalid parameters
        '401':
          description: Unauthorized
        '500':
          description: Internal server error
  /osmo/rewards:
    get:
      tags:
        - Osmosis (OSMO)
      summary: Rewards
      description: Get historical rewards by day of OSMO stakes. Units are in uOSMO (10⁻⁶ OSMO).
      operationId: getOsmoRewards
      parameters:
        - $ref: '#/components/parameters/OSMOValidatorsParam'
        - $ref: '#/components/parameters/OSMODelegatorsParam'
        - $ref: '#/components/parameters/AccountsParam'
        - $ref: '#/components/parameters/StartDateParam'
        - $ref: '#/components/parameters/EndDateParam'
        - $ref: '#/components/parameters/IncludeUSDParam'
        - $ref: '#/components/parameters/OSMOPrecisionParam'
      responses:
        '200':
          description: Successful operation
          content:
            application/json; charset=utf-8:
              schema:
                type: object
                required:
                  - data
                properties:
                  data:
                    type: array
                    items:
                      $ref: '#/components/schemas/OSMOReward'
              examples:
                rewards:
                  value:
                    data:
                      - date: '2023-01-15'
                        rewards: '3575891083876864200000'
                        active_balance: '6300000000000000000000000'
                        net_apy: 3.42
                        rewards_usd: '12'
                        stake_balance_usd: '25400'
                      - date: '2023-01-16'
                        rewards: '3575891083876864200000'
                        active_balance: '6300000000000000000000000'
                        net_apy: 3.4
                        rewards_usd: '13'
                        stake_balance_usd: '25412'
        '400':
          description: Invalid parameters
        '401':
          description: Unauthorized
        '500':
          description: Internal server error
  /osmo/operations:
    get:
      tags:
        - Osmosis (OSMO)
      summary: Operations
      description: Get the operations of OSMO stakes. Units are in uOSMO (10⁻⁶ OSMO).
      operationId: getOsmoOperations
      parameters:
        - $ref: '#/components/parameters/OSMOValidatorsParam'
        - $ref: '#/components/parameters/OSMODelegatorsParam'
        - $ref: '#/components/parameters/OSMOAuthzFlagParam'
        - $ref: '#/components/parameters/AccountsParam'
        - $ref: '#/components/parameters/StartDateParam'
        - $ref: '#/components/parameters/EndDateParam'
        - $ref: '#/components/parameters/OSMOPrecisionParam'
      responses:
        '200':
          description: Successful operation
          content:
            application/json; charset=utf-8:
              schema:
                type: object
                properties:
                  data:
                    type: array
                    items:
                      anyOf:
                        - $ref: '#/components/schemas/OSMOOperationDelegate'
                        - $ref: '#/components/schemas/OSMOOperationUndelegate'
                        - $ref: '#/components/schemas/OSMOOperationRedelegate'
                        - $ref: '#/components/schemas/OSMOOperationWithdrawRewards'
                        - $ref: '#/components/schemas/OSMOOperationGrant'
                        - $ref: '#/components/schemas/OSMOOperationExec'
                      discriminator:
                        propertyName: type
                        mapping:
                          staking.MsgDelegate: '#/components/schemas/OSMOOperationDelegate'
                          staking.MsgUndelegate: '#/components/schemas/OSMOOperationUndelegate'
                          staking.MsgBeginRedelegate: '#/components/schemas/OSMOOperationRedelegate'
                          distr.MsgWithdrawDelegatorReward: '#/components/schemas/OSMOOperationWithdrawRewards'
                          authz.Grant: '#/components/schemas/OSMOOperationGrant'
                          authz.Exec: '#/components/schemas/OSMOOperationExec'
        '400':
          description: Invalid parameters
        '401':
          description: Unauthorized
        '500':
          description: Internal server error
  /osmo/network-stats:
    get:
      tags:
        - Osmosis (OSMO)
      summary: Network Stats
      description: Get some network statistics on Cosmos
      operationId: getOsmoNetworkStats
      responses:
        '200':
          description: Successful operation
          content:
            application/json; charset=utf-8:
              schema:
                type: object
                required:
                  - data
                properties:
                  data:
                    $ref: '#/components/schemas/OSMONetworkStats'
        '401':
          description: Unauthorized
        '500':
          description: Internal server error
  /osmo/reports:
    get:
      tags:
        - Osmosis (OSMO)
      summary: Reports
      description: Get reports on Cosmos staking
      operationId: getOsmoReports
      parameters:
        - $ref: '#/components/parameters/OSMODelegatorsParam'
        - $ref: '#/components/parameters/OSMOValidatorsParam'
        - $ref: '#/components/parameters/AccountsParam'
      responses:
        '200':
          description: Successful operation
          content:
            application/octet-stream:
              schema:
                type: string
                format: binary
                example: ...
        '400':
          description: Invalid parameters
        '401':
          description: Unauthorized
        '500':
          description: Internal server error
  /osmo/transaction/stake:
    post:
      tags:
        - Osmosis (OSMO)
      summary: Stake Transaction
      description: Generates a delegate transaction on Osmosis
      operationId: postOsmoStakeTx
      requestBody:
        description: Transaction to craft
        required: true
        content:
          application/json; charset=utf-8:
            schema:
              $ref: '#/components/schemas/OSMOCraftStakeTxPayload'
      responses:
        '200':
          description: Successful operation
          content:
            application/json; charset=utf-8:
              schema:
                type: object
                required:
                  - data
                properties:
                  data:
                    $ref: '#/components/schemas/OSMOUnsignedTx'
        '400':
          description: Invalid parameters
        '401':
          description: Unauthorized
        '500':
          description: Internal server error
  /osmo/transaction/withdraw-rewards:
    post:
      tags:
        - Osmosis (OSMO)
      summary: Withdraw Rewards Transaction
      description: Generates a withdraw rewards transaction on Osmosis
      operationId: postOsmoWithdrawRewardsTx
      requestBody:
        description: Transaction to craft
        required: true
        content:
          application/json; charset=utf-8:
            schema:
              $ref: '#/components/schemas/OSMOCraftWithdrawRewardsTxPayload'
      responses:
        '200':
          description: Successful operation
          content:
            application/json; charset=utf-8:
              schema:
                type: object
                required:
                  - data
                properties:
                  data:
                    $ref: '#/components/schemas/OSMOUnsignedTx'
        '400':
          description: Invalid parameters
        '401':
          description: Unauthorized
        '500':
          description: Internal server error
  /osmo/transaction/restake-rewards:
    post:
      tags:
        - Osmosis (OSMO)
      summary: Restake Rewards Transaction
      description: Generates a restake rewards transaction on Osmosis
      operationId: postOsmoRestakeRewardsTx
      requestBody:
        description: Transaction to craft
        required: true
        content:
          application/json; charset=utf-8:
            schema:
              $ref: '#/components/schemas/OSMOCraftRestakeRewardsTxPayload'
      responses:
        '200':
          description: Successful operation
          content:
            application/json; charset=utf-8:
              schema:
                type: object
                required:
                  - data
                properties:
                  data:
                    $ref: '#/components/schemas/OSMOUnsignedTx'
        '400':
          description: Invalid parameters
        '401':
          description: Unauthorized
        '500':
          description: Internal server error
  /osmo/transaction/unstake:
    post:
      tags:
        - Osmosis (OSMO)
      summary: Unstake Transaction
      description: Generates an undelegate transaction on Osmosis
      operationId: postOsmoUnstakeTx
      requestBody:
        description: Transaction to craft
        required: true
        content:
          application/json; charset=utf-8:
            schema:
              $ref: '#/components/schemas/OSMOCraftUnstakeTxPayload'
      responses:
        '200':
          description: Successful operation
          content:
            application/json; charset=utf-8:
              schema:
                type: object
                required:
                  - data
                properties:
                  data:
                    $ref: '#/components/schemas/OSMOUnsignedTx'
        '400':
          description: Invalid parameters
        '401':
          description: Unauthorized
        '500':
          description: Internal server error
  /osmo/transaction/redelegate:
    post:
      tags:
        - Osmosis (OSMO)
      summary: Redelegate Transaction
      description: Generates a redelegate transaction on Osmosis to move a stake from a validator to another without going through the 14 days unbonding period.
      operationId: postOsmoRedelegateTx
      requestBody:
        description: Transaction to craft
        required: true
        content:
          application/json; charset=utf-8:
            schema:
              $ref: '#/components/schemas/OSMOCraftRedelegateTxPayload'
      responses:
        '200':
          description: Successful operation
          content:
            application/json; charset=utf-8:
              schema:
                type: object
                required:
                  - data
                properties:
                  data:
                    $ref: '#/components/schemas/OSMOUnsignedTx'
        '400':
          description: Invalid parameters
        '401':
          description: Unauthorized
        '500':
          description: Internal server error
  /osmo/transaction/prepare:
    post:
      tags:
        - Osmosis (OSMO)
      summary: Prepare Transaction
      description: Prepare an unsigned transaction for broadcast by adding signatures to it
      operationId: postOsmoPrepareTx
      requestBody:
        description: Transaction to prepare
        required: true
        content:
          application/json; charset=utf-8:
            schema:
              $ref: '#/components/schemas/OSMOPrepareTxPayload'
      responses:
        '200':
          description: Successful operation
          content:
            application/json; charset=utf-8:
              schema:
                type: object
                required:
                  - data
                properties:
                  data:
                    $ref: '#/components/schemas/OSMOSignedTx'
        '400':
          description: Invalid parameters
        '401':
          description: Unauthorized
        '500':
          description: Internal server error
  /osmo/transaction/broadcast:
    post:
      tags:
        - Osmosis (OSMO)
      summary: Broadcast Transaction
      description: Broadcast a signed transaction to the Cosmos network
      operationId: postOsmoBroadcastTx
      requestBody:
        description: Transaction to broadcast
        required: true
        content:
          application/json; charset=utf-8:
            schema:
              $ref: '#/components/schemas/OSMOBroadcastTxPayload'
      responses:
        '200':
          description: Successful operation
          content:
            application/json; charset=utf-8:
              schema:
                type: object
                required:
                  - data
                properties:
                  data:
                    $ref: '#/components/schemas/OSMOTxHash'
        '400':
          description: Invalid parameters
        '401':
          description: Unauthorized
        '500':
          description: Internal server error
  /osmo/transaction/status:
    get:
      tags:
        - Osmosis (OSMO)
      summary: Transaction Status
      description: Get the status of a transaction
      operationId: getOsmoTxStatus
      parameters:
        - name: tx_hash
          in: query
          description: Hash of the transaction
          required: true
          style: form
          explode: false
          schema:
            type: string
            example: 2B4F732E12D5D5AF1F907AD03B199167A718EDC6201DE5713143AB80990420CB
      responses:
        '200':
          description: Successful operation
          content:
            application/json; charset=utf-8:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/OSMOTxStatus'
        '400':
          description: Invalid parameters
        '401':
          description: Unauthorized
        '500':
          description: Internal server error
  /osmo/transaction/decode:
    get:
      tags:
        - Osmosis (OSMO)
      summary: Transaction Decoding
      description: Decode a transaction
      operationId: getOsmoTxDecoding
      parameters:
        - name: tx_serialized
          in: query
          description: Raw transaction to decode
          required: true
          style: form
          explode: false
          schema:
            type: string
            example: 0aa1010a9e010a232f636f736d6f732e7374616b696e672e763162657461312e4d736744656c656761746512770a2d636f736d6f733139633966646834383876716a636c6c74777036386a6d3530796477796833366a7165617465761234636f736d6f7376616c6f706572313679733065673933356d6b71706b79646b6766636a39616765326175386c39366e61657265391a100a057561746f6d12073130303030303012670a500a460a1f2f636f736d6f732e63727970746f2e736563703235366b312e5075624b657912230a21039ce47b2a813d13876131a9c3be77e8c4afa49e948744abbee11f939e2a420f4612040a020801186612130a0d0a057561746f6d1204353030301080897a1a1174686574612d746573746e65742d30303120e0cd2a
      responses:
        '200':
          description: Successful operation
          content:
            application/json; charset=utf-8:
              schema:
                type: object
                description: Decoded transaction
                example:
                  authInfo:
                    signerInfos:
                      - publicKey:
                          typeUrl: /cosmos.crypto.secp256k1.PubKey
                          value:
                            '0': 10
                            '1': 33
                            '2': 3
                            '3': 156
                            '4': 228
                            '5': 123
                            '6': 42
                            '7': 129
                            '8': 61
                            '9': 19
                            '10': 135
                            '11': 97
                            '12': 49
                            '13': 169
                            '14': 195
                            '15': 190
                            '16': 119
                            '17': 232
                            '18': 196
                            '19': 175
                            '20': 164
                            '21': 158
                            '22': 148
                            '23': 135
                            '24': 68
                            '25': 171
                            '26': 190
                            '27': 225
                            '28': 31
                            '29': 147
                            '30': 158
                            '31': 42
                            '32': 66
                            '33': 15
                            '34': 70
                        modeInfo:
                          single:
                            mode: 1
                        sequence:
                          low: 102
                          high: 0
                          unsigned: true
                    fee:
                      amount:
                        - denom: uosmo
                          amount: '5000'
                      gasLimit:
                        low: 2000000
                        high: 0
                        unsigned: true
                      payer: ''
                      granter: ''
                  body:
                    messages:
                      - typeUrl: /cosmos.staking.v1beta1.MsgDelegate
                        value:
                          '0': 10
                          '1': 45
                          '2': 99
                          '3': 111
                          '4': 115
                          '5': 109
                          '6': 111
                          '7': 115
                          '8': 49
                          '9': 57
                          '10': 99
                          '11': 57
                          '12': 102
                          '13': 100
                          '14': 104
                          '15': 52
                          '16': 56
                          '17': 56
                          '18': 118
                          '19': 113
                          '20': 106
                          '21': 99
                          '22': 108
                          '23': 108
                          '24': 116
                          '25': 119
                          '26': 112
                          '27': 54
                          '28': 56
                          '29': 106
                          '30': 109
                          '31': 53
                          '32': 48
                          '33': 121
                          '34': 100
                          '35': 119
                          '36': 121
                          '37': 104
                          '38': 51
                          '39': 54
                          '40': 106
                          '41': 113
                          '42': 101
                          '43': 97
                          '44': 116
                          '45': 101
                          '46': 118
                          '47': 18
                          '48': 52
                          '49': 99
                          '50': 111
                          '51': 115
                          '52': 109
                          '53': 111
                          '54': 115
                          '55': 118
                          '56': 97
                          '57': 108
                          '58': 111
                          '59': 112
                          '60': 101
                          '61': 114
                          '62': 49
                          '63': 54
                          '64': 121
                          '65': 115
                          '66': 48
                          '67': 101
                          '68': 103
                          '69': 57
                          '70': 51
                          '71': 53
                          '72': 109
                          '73': 107
                          '74': 113
                          '75': 112
                          '76': 107
                          '77': 121
                          '78': 100
                          '79': 107
                          '80': 103
                          '81': 102
                          '82': 99
                          '83': 106
                          '84': 57
                          '85': 97
                          '86': 103
                          '87': 101
                          '88': 50
                          '89': 97
                          '90': 117
                          '91': 56
                          '92': 108
                          '93': 57
                          '94': 54
                          '95': 110
                          '96': 97
                          '97': 101
                          '98': 114
                          '99': 101
                          '100': 57
                          '101': 26
                          '102': 16
                          '103': 10
                          '104': 5
                          '105': 117
                          '106': 97
                          '107': 116
                          '108': 111
                          '109': 109
                          '110': 18
                          '111': 7
                          '112': 49
                          '113': 48
                          '114': 48
                          '115': 48
                          '116': 48
                          '117': 48
                          '118': 48
                    memo: ''
                    timeoutHeight:
                      low: 0
                      high: 0
                      unsigned: true
                    extensionOptions: []
                    nonCriticalExtensionOptions: []
                  signatures:
                    - '0': 116
                      '1': 104
                      '2': 101
                      '3': 116
                      '4': 97
                      '5': 45
                      '6': 116
                      '7': 101
                      '8': 115
                      '9': 116
                      '10': 110
                      '11': 101
                      '12': 116
                      '13': 45
                      '14': 48
                      '15': 48
                      '16': 49
        '400':
          description: Invalid parameters
        '401':
          description: Unauthorized
        '500':
          description: Internal server error
  /egld/stakes:
    get:
      tags:
        - MultiversX (EGLD)
      summary: Stakes
      description: Get the status of MultiversX stakes
      operationId: getEgldStakes
      parameters:
        - $ref: '#/components/parameters/EGLDWalletsParam'
        - $ref: '#/components/parameters/AccountsParam'
        - $ref: '#/components/parameters/EGLDValidatorsParam'
      responses:
        '200':
          description: Successful operation
          content:
            application/json; charset=utf-8:
              schema:
                type: object
                properties:
                  data:
                    type: array
                    items:
                      $ref: '#/components/schemas/EGLDStake'
        '400':
          description: Invalid parameters
        '401':
          description: Unauthorized
        '500':
          description: Internal server error
  /egld/rewards:
    get:
      tags:
        - MultiversX (EGLD)
      summary: Rewards
      description: Get historical rewards of MultiversX stakes
      operationId: getEgldRewards
      parameters:
        - $ref: '#/components/parameters/EGLDWalletsParam'
        - $ref: '#/components/parameters/AccountsParam'
        - $ref: '#/components/parameters/EGLDValidatorsParam'
        - $ref: '#/components/parameters/StartDateParam'
        - $ref: '#/components/parameters/EndDateParam'
      responses:
        '200':
          description: Successful operation
          content:
            application/json; charset=utf-8:
              schema:
                type: object
                required:
                  - data
                properties:
                  data:
                    type: array
                    items:
                      $ref: '#/components/schemas/EGLDRewards'
              examples:
                rewards:
                  value:
                    data:
                      - date: '2023-01-15'
                        rewards: '27098488'
                        active_balance: '420000000000'
                        grr: 0.0342
                      - date: '2023-01-16'
                        rewards: '27099488'
                        active_balance: '420027098488'
                        grr: 0.034
        '400':
          description: Invalid parameters
        '401':
          description: Unauthorized
        '500':
          description: Internal server error
  /egld/network-stats:
    get:
      tags:
        - MultiversX (EGLD)
      summary: Network Stats
      description: Get stats on MutiversX network
      operationId: getEgldNetworkStats
      responses:
        '200':
          description: Successful operation
          content:
            application/json; charset=utf-8:
              schema:
                type: object
                required:
                  - data
                properties:
                  data:
                    $ref: '#/components/schemas/EgldNetworkStats'
        '401':
          description: Unauthorized
        '500':
          description: Internal server error
  /egld/operations:
    get:
      tags:
        - MultiversX (EGLD)
      summary: Operations
      description: Get historical operations of MultiversX stakes
      operationId: getEgldOperations
      parameters:
        - $ref: '#/components/parameters/EGLDWalletsParam'
        - $ref: '#/components/parameters/AccountsParam'
        - $ref: '#/components/parameters/EGLDValidatorsParam'
        - $ref: '#/components/parameters/StartDateParam'
        - $ref: '#/components/parameters/EndDateParam'
      responses:
        '200':
          description: Successful operation
          content:
            application/json; charset=utf-8:
              schema:
                type: object
                properties:
                  data:
                    type: array
                    items:
                      $ref: '#/components/schemas/EGLDOperations'
              examples:
                operations:
                  value:
                    data:
                      - sender: erd1exqua32r233fwsxv074dhmp5yw4nz3xnn2kkdayp2wg566janpeqhdayjd
                        receiver: erd1qqqqqqqqqqqqqqqpqqqqqqqqqqqqqqqqqqqqqqqqqqqqqz8llllsh6u4jp
                        tx_hash": c03a95f5d9d3c8d6a99c0a22faf78f246b3da6a1d564e52c184b38e735de95a1
                        tx_timestamp: '2024-03-29T11:55:18Z'
                        amount: '1120594360000000001'
                        gas_used: '6062000'
                        type: delegate
        '400':
          description: Invalid parameters
        '401':
          description: UnauthorizedS
        '500':
          description: Internal server error
  /egld/reports:
    get:
      tags:
        - MultiversX (EGLD)
      summary: Reports
      description: Get reports on MultiversX staking
      operationId: getEgldReports
      parameters:
        - $ref: '#/components/parameters/EGLDWalletsParam'
        - $ref: '#/components/parameters/AccountsParam'
        - $ref: '#/components/parameters/EGLDValidatorsParam'
      responses:
        '200':
          description: Successful operation
          content:
            application/octet-stream:
              schema:
                type: string
                format: binary
                example: ...
        '400':
          description: Invalid parameters
        '401':
          description: Unauthorized
        '500':
          description: Internal server error
  /dot/stakes:
    get:
      tags:
        - Polkadot (DOT)
      summary: Stakes
      description: Get the status of Polkadot stakes
      operationId: getDotStakes
      parameters:
        - $ref: '#/components/parameters/DOTAddressesParam'
        - $ref: '#/components/parameters/AccountsParam'
      responses:
        '200':
          description: Successful operation
          content:
            application/json; charset=utf-8:
              schema:
                type: object
                required:
                  - data
                properties:
                  data:
                    type: array
                    items:
                      oneOf:
                        - $ref: '#/components/schemas/DOTStake'
        '400':
          description: Invalid parameters
        '401':
          description: Unauthorized
        '500':
          description: Internal server error
  /dot/rewards:
    get:
      tags:
        - Polkadot (DOT)
      summary: Rewards
      description: Get historical rewards by day or era of DOT stakes
      operationId: getDotRewards
      parameters:
        - $ref: '#/components/parameters/DOTAddressesParam'
        - $ref: '#/components/parameters/DOTValidatorsParam'
        - $ref: '#/components/parameters/DOTPoolIDsParam'
        - $ref: '#/components/parameters/AccountsParam'
        - $ref: '#/components/parameters/StartDateParam'
        - $ref: '#/components/parameters/EndDateParam'
        - $ref: '#/components/parameters/DOTRewardsFormatParam'
      responses:
        '200':
          description: Successful operation
          content:
            application/json; charset=utf-8:
              schema:
                type: object
                required:
                  - data
                properties:
                  data:
                    type: array
                    items:
                      oneOf:
                        - $ref: '#/components/schemas/DOTRewardByDay'
                        - $ref: '#/components/schemas/DOTRewardByEra'
              examples:
                rewards:
                  value:
                    data:
                      - date: '2023-01-15'
                        net_rewards: '27098488'
                        gross_rewards: '27098488'
                        active_balance: '420000000000'
                        net_apy: 3.42
                        gross_apy: 3.42
                      - date: '2023-01-16'
                        net_rewards: '27099488'
                        gross_rewards: '0'
                        active_balance: '420027098488'
                        net_apy: 3.4
                        gross_apy: 0
        '400':
          description: Invalid parameters
        '401':
          description: Unauthorized
        '500':
          description: Internal server error
  /dot/operations:
    get:
      tags:
        - Polkadot (DOT)
      summary: Operations
      description: Get the operations of Polkadot stakes
      operationId: getDotOperations
      parameters:
        - $ref: '#/components/parameters/DOTAddressesParam'
        - $ref: '#/components/parameters/AccountsParam'
        - $ref: '#/components/parameters/StartDateParam'
        - $ref: '#/components/parameters/EndDateParam'
      responses:
        '200':
          description: Successful operation
          content:
            application/json; charset=utf-8:
              schema:
                type: object
                required:
                  - data
                properties:
                  data:
                    type: array
                    items:
                      anyOf:
                        - $ref: '#/components/schemas/DOTOperationStaking'
                      discriminator:
                        propertyName: type
                        mapping:
                          staking.bonded: '#/components/schemas/DOTOperationStaking'
                          staking.unbonded: '#/components/schemas/DOTOperationStaking'
                          staking.reward: '#/components/schemas/DOTOperationStaking'
        '400':
          description: Invalid parameters
        '401':
          description: Unauthorized
        '500':
          description: Internal server error
  /dot/reports:
    get:
      tags:
        - Polkadot (DOT)
      summary: Reports
      description: Get reports on Polkadot staking
      operationId: getDotReports
      parameters:
        - $ref: '#/components/parameters/DOTAddressesParam'
        - $ref: '#/components/parameters/AccountsParam'
      responses:
        '200':
          description: Successful operation
          content:
            application/octet-stream:
              schema:
                type: string
                format: binary
                example: ...
        '400':
          description: Invalid parameters
        '401':
          description: Unauthorized
        '500':
          description: Internal server error
  /dot/network-stats:
    get:
      tags:
        - Polkadot (DOT)
      summary: Network Stats
      description: Get stats on Polkadot network
      operationId: getDotNetworkStats
      responses:
        '200':
          description: Successful operation
          content:
            application/json; charset=utf-8:
              schema:
                type: object
                required:
                  - data
                properties:
                  data:
                    $ref: '#/components/schemas/DOTNetworkStats'
        '401':
          description: Unauthorized
        '500':
          description: Internal server error
  /dot/transaction/bond:
    post:
      tags:
        - Polkadot (DOT)
      summary: Bond Transaction
      description: Generates a bond transaction on Polkadot
      operationId: postDotBondTx
      requestBody:
        description: Transaction to craft
        required: true
        content:
          application/json; charset=utf-8:
            schema:
              $ref: '#/components/schemas/DOTCraftBondTxPayload'
      responses:
        '200':
          description: Successful operation
          content:
            application/json; charset=utf-8:
              schema:
                type: object
                required:
                  - data
                properties:
                  data:
                    $ref: '#/components/schemas/DOTUnsignedTx'
        '400':
          description: Invalid parameters
        '401':
          description: Unauthorized
        '500':
          description: Internal server error
  /dot/transaction/bond-extra:
    post:
      tags:
        - Polkadot (DOT)
      summary: Bond extra Transaction
      description: Generates a bond extra transaction on Polkadot
      operationId: postDotBondExtraTx
      requestBody:
        description: Transaction to craft
        required: true
        content:
          application/json; charset=utf-8:
            schema:
              $ref: '#/components/schemas/DOTCraftBondExtraTxPayload'
      responses:
        '200':
          description: Successful operation
          content:
            application/json; charset=utf-8:
              schema:
                type: object
                required:
                  - data
                properties:
                  data:
                    $ref: '#/components/schemas/DOTUnsignedTx'
        '400':
          description: Invalid parameters
        '401':
          description: Unauthorized
        '500':
          description: Internal server error
  /dot/transaction/rebond:
    post:
      tags:
        - Polkadot (DOT)
      summary: Rebond Transaction
      description: Generates a rebond transaction on Polkadot (to be used to rebond unbonding token)
      operationId: postDotRebondTx
      requestBody:
        description: Transaction to craft
        required: true
        content:
          application/json; charset=utf-8:
            schema:
              $ref: '#/components/schemas/DOTCraftRebondTxPayload'
      responses:
        '200':
          description: Successful operation
          content:
            application/json; charset=utf-8:
              schema:
                type: object
                required:
                  - data
                properties:
                  data:
                    $ref: '#/components/schemas/DOTUnsignedTx'
        '400':
          description: Invalid parameters
        '401':
          description: Unauthorized
        '500':
          description: Internal server error
  /dot/transaction/unbond:
    post:
      tags:
        - Polkadot (DOT)
      summary: Unbond Transaction
      description: Generates an unbond transaction on Polkadot
      operationId: postDotUnbondTx
      requestBody:
        description: Transaction to craft
        required: true
        content:
          application/json; charset=utf-8:
            schema:
              $ref: '#/components/schemas/DOTCraftUnbondTxPayload'
      responses:
        '200':
          description: Successful operation
          content:
            application/json; charset=utf-8:
              schema:
                type: object
                required:
                  - data
                properties:
                  data:
                    $ref: '#/components/schemas/DOTUnsignedTx'
        '400':
          description: Invalid parameters
        '401':
          description: Unauthorized
        '500':
          description: Internal server error
  /dot/transaction/nominate:
    post:
      tags:
        - Polkadot (DOT)
      summary: Nominate Transaction
      description: Generates a nominate transaction on Polkadot
      operationId: postDotNominateTx
      requestBody:
        description: Transaction to craft
        required: true
        content:
          application/json; charset=utf-8:
            schema:
              $ref: '#/components/schemas/DOTCraftNominateTxPayload'
      responses:
        '200':
          description: Successful operation
          content:
            application/json; charset=utf-8:
              schema:
                type: object
                required:
                  - data
                properties:
                  data:
                    $ref: '#/components/schemas/DOTUnsignedTx'
        '400':
          description: Invalid parameters
        '401':
          description: Unauthorized
        '500':
          description: Internal server error
  /dot/transaction/withdraw-unbonded:
    post:
      tags:
        - Polkadot (DOT)
      summary: Withdraw unbonded Transaction
      description: Generates a withdraw unbonded transaction on Polkadot
      operationId: postDotWithdrawUnbondedTx
      requestBody:
        description: Transaction to craft
        required: true
        content:
          application/json; charset=utf-8:
            schema:
              $ref: '#/components/schemas/DOTCraftWithdrawUnbondedTxPayload'
      responses:
        '200':
          description: Successful operation
          content:
            application/json; charset=utf-8:
              schema:
                type: object
                required:
                  - data
                properties:
                  data:
                    $ref: '#/components/schemas/DOTUnsignedTx'
        '400':
          description: Invalid parameters
        '401':
          description: Unauthorized
        '500':
          description: Internal server error
  /dot/transaction/chill:
    post:
      tags:
        - Polkadot (DOT)
      summary: Chill Transaction
      description: Generates a chill transaction on Polkadot
      operationId: postDotChillTx
      requestBody:
        description: Transaction to craft
        required: true
        content:
          application/json; charset=utf-8:
            schema:
              $ref: '#/components/schemas/DOTCraftChillTxPayload'
      responses:
        '200':
          description: Successful operation
          content:
            application/json; charset=utf-8:
              schema:
                type: object
                required:
                  - data
                properties:
                  data:
                    $ref: '#/components/schemas/DOTUnsignedTx'
        '400':
          description: Invalid parameters
        '401':
          description: Unauthorized
        '500':
          description: Internal server error
  /dot/transaction/set-payee:
    post:
      tags:
        - Polkadot (DOT)
      summary: Set payee Transaction
      description: Generates a set payee transaction on Polkadot
      operationId: postDotSetPayeeTx
      requestBody:
        description: Transaction to craft
        required: true
        content:
          application/json; charset=utf-8:
            schema:
              $ref: '#/components/schemas/DOTCraftSetPayeeTxPayload'
      responses:
        '200':
          description: Successful operation
          content:
            application/json; charset=utf-8:
              schema:
                type: object
                required:
                  - data
                properties:
                  data:
                    $ref: '#/components/schemas/DOTUnsignedTx'
        '400':
          description: Invalid parameters
        '401':
          description: Unauthorized
        '500':
          description: Internal server error
  /dot/transaction/join-pool:
    post:
      tags:
        - Polkadot (DOT)
      summary: Join pool Transaction
      description: Generates a join pool transaction on Polkadot
      operationId: postDotJoinPoolTx
      requestBody:
        description: Transaction to craft
        required: true
        content:
          application/json; charset=utf-8:
            schema:
              $ref: '#/components/schemas/DOTCraftJoinPoolTxPayload'
      responses:
        '200':
          description: Successful operation
          content:
            application/json; charset=utf-8:
              schema:
                type: object
                required:
                  - data
                properties:
                  data:
                    $ref: '#/components/schemas/DOTUnsignedTx'
        '400':
          description: Invalid parameters
        '401':
          description: Unauthorized
        '500':
          description: Internal server error
  /dot/transaction/bond-extra-pool:
    post:
      tags:
        - Polkadot (DOT)
      summary: Bond extra to pool Transaction
      description: Generates a bond extra to pool transaction on Polkadot
      operationId: postDotBondExtraToPoolTx
      requestBody:
        description: Transaction to craft
        required: true
        content:
          application/json; charset=utf-8:
            schema:
              $ref: '#/components/schemas/DOTCraftBondExtraToPoolTxPayload'
      responses:
        '200':
          description: Successful operation
          content:
            application/json; charset=utf-8:
              schema:
                type: object
                required:
                  - data
                properties:
                  data:
                    $ref: '#/components/schemas/DOTUnsignedTx'
        '400':
          description: Invalid parameters
        '401':
          description: Unauthorized
        '500':
          description: Internal server error
  /dot/transaction/bond-rewards-pool:
    post:
      tags:
        - Polkadot (DOT)
      summary: Bond rewards to pool Transaction
      description: Generates a bond rewards to pool transaction on Polkadot
      operationId: postDotBondRewardsToPoolTx
      requestBody:
        description: Transaction to craft
        required: true
        content:
          application/json; charset=utf-8:
            schema:
              $ref: '#/components/schemas/DOTCraftBondRewardsToPoolTxPayload'
      responses:
        '200':
          description: Successful operation
          content:
            application/json; charset=utf-8:
              schema:
                type: object
                required:
                  - data
                properties:
                  data:
                    $ref: '#/components/schemas/DOTUnsignedTx'
        '400':
          description: Invalid parameters
        '401':
          description: Unauthorized
        '500':
          description: Internal server error
  /dot/transaction/claim-payout-pool:
    post:
      tags:
        - Polkadot (DOT)
      summary: Claim payout from pool Transaction
      description: Generates a claim payout (rewards) from pool transaction on Polkadot
      operationId: postDotClaimPayoutFromPoolTx
      requestBody:
        description: Transaction to craft
        required: true
        content:
          application/json; charset=utf-8:
            schema:
              $ref: '#/components/schemas/DOTCraftClaimPayoutFromPoolTxPayload'
      responses:
        '200':
          description: Successful operation
          content:
            application/json; charset=utf-8:
              schema:
                type: object
                required:
                  - data
                properties:
                  data:
                    $ref: '#/components/schemas/DOTUnsignedTx'
        '400':
          description: Invalid parameters
        '401':
          description: Unauthorized
        '500':
          description: Internal server error
  /dot/transaction/unbond-pool:
    post:
      tags:
        - Polkadot (DOT)
      summary: Unbond from pool Transaction
      description: Generates an unbond from pool transaction on Polkadot
      operationId: postDotUnbondFromPoolTx
      requestBody:
        description: Transaction to craft
        required: true
        content:
          application/json; charset=utf-8:
            schema:
              $ref: '#/components/schemas/DOTCraftUnbondFromPoolTxPayload'
      responses:
        '200':
          description: Successful operation
          content:
            application/json; charset=utf-8:
              schema:
                type: object
                required:
                  - data
                properties:
                  data:
                    $ref: '#/components/schemas/DOTUnsignedTx'
        '400':
          description: Invalid parameters
        '401':
          description: Unauthorized
        '500':
          description: Internal server error
  /dot/transaction/withdraw-unbonded-pool:
    post:
      tags:
        - Polkadot (DOT)
      summary: Withdraw unbonded from pool Transaction
      description: Generates a withdraw unbonded from pool transaction on Polkadot
      operationId: postDotWithdrawUnbondedFromPoolTx
      requestBody:
        description: Transaction to craft
        required: true
        content:
          application/json; charset=utf-8:
            schema:
              $ref: '#/components/schemas/DOTCraftWithdrawUnbondedFromPoolTxPayload'
      responses:
        '200':
          description: Successful operation
          content:
            application/json; charset=utf-8:
              schema:
                type: object
                required:
                  - data
                properties:
                  data:
                    $ref: '#/components/schemas/DOTUnsignedTx'
        '400':
          description: Invalid parameters
        '401':
          description: Unauthorized
        '500':
          description: Internal server error
  /dot/transaction/status:
    get:
      tags:
        - Polkadot (DOT)
      summary: Transaction Status
      description: Get the status of a transaction
      operationId: getDotTxStatus
      parameters:
        - name: tx_hash
          in: query
          description: Hash of the transaction
          required: true
          style: form
          explode: false
          schema:
            type: string
            example: '0x1b9097a6e3d50066348cb173f3150546457a6188fada6a3a40d571798da1a53c'
      responses:
        '200':
          description: Successful operation
          content:
            application/json; charset=utf-8:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/DOTTxStatus'
        '400':
          description: Invalid parameters
        '401':
          description: Unauthorized
        '500':
          description: Internal server error
  /dot/transaction/decode:
    get:
      tags:
        - Polkadot (DOT)
      summary: Transaction Decoding
      description: Decode a transaction
      operationId: getDotTxDecoding
      parameters:
        - name: tx_serialized
          in: query
          description: Raw transaction to decode
          required: true
          style: form
          explode: false
          schema:
            type: string
            example: 7b2261646472657373223a2235444b38536871747975566b32773471724639487761424a6f695a5631627951733541525a336466325074385636566a222c2261737365744964223a302c22626c6f636b48617368223a22307832636361356238303836613437636161646166663537373563333237666637326231326461616438316464386664363339333336663264393462396365386466222c22626c6f636b4e756d626572223a2230783031313139353364222c22657261223a22307864353033222c2267656e6573697348617368223a22307865313433663233383033616335306538663666386536323639356431636539653465316436386161333663316364326366643135333430323133663334323365222c226d65746164617461527063223a223078222c226d6574686f64223a22307830363030303730303130613564346538303333373363366638653834633638323261396638373033356636356363636638393965656633666364656536313037373034316139336531383035626162323465222c226e6f6e6365223a2230783030303030303565222c227369676e6564457874656e73696f6e73223a5b22436865636b4e6f6e5a65726f53656e646572222c22436865636b5370656356657273696f6e222c22436865636b547856657273696f6e222c22436865636b47656e65736973222c22436865636b4d6f7274616c697479222c22436865636b4e6f6e6365222c22436865636b576569676874222c224368617267655472616e73616374696f6e5061796d656e74225d2c227370656356657273696f6e223a2230783030303032346436222c22746970223a2230783030303030303030303030303030303030303030303030303030303030303030222c227472616e73616374696f6e56657273696f6e223a2230783030303030303136222c2276657273696f6e223a347d
      responses:
        '200':
          description: Successful operation
          content:
            application/json; charset=utf-8:
              schema:
                type: object
                description: Decoded transaction
                example:
                  address: 5DK8ShqtyuVk2w4qrF9HwaBJoiZV1byQs5ARZ3df2Pt8V6Vj
                  assetId: 0
                  blockHash: '0x2cca5b8086a47caadaff5775c327ff72b12daad81dd8fd639336f2d94b9ce8df'
                  blockNumber: '0x0111953d'
                  era: '0xd503'
                  genesisHash: '0xe143f23803ac50e8f6f8e62695d1ce9e4e1d68aa36c1cd2cfd15340213f3423e'
                  metadataRpc: 0x
                  method: '0x0600070010a5d4e803373c6f8e84c6822a9f87035f65cccf899eef3fcdee61077041a93e1805bab24e'
                  nonce: '0x0000005e'
                  signedExtensions:
                    - CheckNonZeroSender
                    - CheckSpecVersion
                    - CheckTxVersion
                    - CheckGenesis
                    - CheckMortality
                    - CheckNonce
                    - CheckWeight
                    - ChargeTransactionPayment
                  specVersion: '0x000024d6'
                  tip: '0x00000000000000000000000000000000'
                  transactionVersion: '0x00000016'
                  version: 4
        '400':
          description: Invalid parameters
        '401':
          description: Unauthorized
        '500':
          description: Internal server error
  /dot/transaction/prepare:
    post:
      tags:
        - Polkadot (DOT)
      summary: Prepare Transaction
      description: Prepare a transaction for broadcast on Polkadot by adding a signature to it
      operationId: postDotPrepareTx
      requestBody:
        description: Transaction to prepare
        required: true
        content:
          application/json; charset=utf-8:
            schema:
              $ref: '#/components/schemas/DOTPrepareTxPayload'
      responses:
        '200':
          description: Successful operation
          content:
            application/json; charset=utf-8:
              schema:
                type: object
                required:
                  - data
                properties:
                  data:
                    $ref: '#/components/schemas/DOTSignedTx'
        '400':
          description: Invalid parameters
        '401':
          description: Unauthorized
        '500':
          description: Internal server error
  /dot/transaction/broadcast:
    post:
      tags:
        - Polkadot (DOT)
      summary: Broadcast Transaction
      description: Broadcast a signed transaction on Polkadot
      operationId: postDotBroadcastTx
      requestBody:
        description: Transaction to broadcast
        required: true
        content:
          application/json; charset=utf-8:
            schema:
              $ref: '#/components/schemas/DOTBroadcastTxPayload'
      responses:
        '200':
          description: Successful operation
          content:
            application/json; charset=utf-8:
              schema:
                type: object
                required:
                  - data
                properties:
                  data:
                    $ref: '#/components/schemas/DOTBroadcastedTx'
        '400':
          description: Invalid parameters
        '401':
          description: Unauthorized
        '500':
          description: Internal server error
  /ksm/stakes:
    get:
      tags:
        - Kusama (KSM)
      summary: Stakes
      description: Get the status of Kusama stakes. Data since block [#1496832 (2020-03-18 04:27:54 (+UTC)](https://kusama.subscan.io/block/1496832) is available.
      operationId: getKsmStakes
      parameters:
        - $ref: '#/components/parameters/KSMAddressesParam'
        - $ref: '#/components/parameters/AccountsParam'
      responses:
        '200':
          description: Successful operation
          content:
            application/json; charset=utf-8:
              schema:
                type: object
                required:
                  - data
                properties:
                  data:
                    type: array
                    items:
                      oneOf:
                        - $ref: '#/components/schemas/KSMStake'
        '400':
          description: Invalid parameters
        '401':
          description: Unauthorized
        '500':
          description: Internal server error
  /ksm/rewards:
    get:
      tags:
        - Kusama (KSM)
      summary: Rewards
      description: Get historical rewards by day or era of KSM stakes. Data since block [#1496832 (2020-03-18 04:27:54 (+UTC)](https://kusama.subscan.io/block/1496832) is available.
      operationId: getKsmRewards
      parameters:
        - $ref: '#/components/parameters/KSMAddressesParam'
        - $ref: '#/components/parameters/KSMValidatorsParam'
        - $ref: '#/components/parameters/KSMPoolIDsParam'
        - $ref: '#/components/parameters/AccountsParam'
        - $ref: '#/components/parameters/StartDateParam'
        - $ref: '#/components/parameters/EndDateParam'
        - $ref: '#/components/parameters/KSMRewardsFormatParam'
      responses:
        '200':
          description: Successful operation
          content:
            application/json; charset=utf-8:
              schema:
                type: object
                required:
                  - data
                properties:
                  data:
                    type: array
                    items:
                      oneOf:
                        - $ref: '#/components/schemas/KSMRewardByDay'
                        - $ref: '#/components/schemas/KSMRewardByEra'
              examples:
                rewards:
                  value:
                    data:
                      - date: '2023-01-15'
                        net_rewards: '27098488'
                        gross_rewards: '27098488'
                        active_balance: '420000000000'
                        net_apy: 3.42
                        gross_apy: 3.42
                      - date: '2023-01-16'
                        net_rewards: '27099488'
                        gross_rewards: '0'
                        active_balance: '420027098488'
                        net_apy: 3.4
                        gross_apy: 0
        '400':
          description: Invalid parameters
        '401':
          description: Unauthorized
        '500':
          description: Internal server error
  /ksm/operations:
    get:
      tags:
        - Kusama (KSM)
      summary: Operations
      description: Get the operations of Kusama stakes
      operationId: getKsmOperations
      parameters:
        - $ref: '#/components/parameters/KSMAddressesParam'
        - $ref: '#/components/parameters/AccountsParam'
        - $ref: '#/components/parameters/StartDateParam'
        - $ref: '#/components/parameters/EndDateParam'
      responses:
        '200':
          description: Successful operation
          content:
            application/json; charset=utf-8:
              schema:
                type: object
                required:
                  - data
                properties:
                  data:
                    type: array
                    items:
                      anyOf:
                        - $ref: '#/components/schemas/KSMOperationStaking'
                      discriminator:
                        propertyName: type
                        mapping:
                          staking.bonded: '#/components/schemas/KSMOperationStaking'
                          staking.unbonded: '#/components/schemas/KSMOperationStaking'
                          staking.reward: '#/components/schemas/KSMOperationStaking'
        '400':
          description: Invalid parameters
        '401':
          description: Unauthorized
        '500':
          description: Internal server error
  /ksm/reports:
    get:
      tags:
        - Kusama (KSM)
      summary: Reports
      description: Get reports on Kusama staking
      operationId: getKsmReports
      parameters:
        - $ref: '#/components/parameters/KSMAddressesParam'
        - $ref: '#/components/parameters/AccountsParam'
      responses:
        '200':
          description: Successful operation
          content:
            application/octet-stream:
              schema:
                type: string
                format: binary
                example: ...
        '400':
          description: Invalid parameters
        '401':
          description: Unauthorized
        '500':
          description: Internal server error
  /ksm/network-stats:
    get:
      tags:
        - Kusama (KSM)
      summary: Network Stats
      description: Get stats on Kusama network
      operationId: getKsmNetworkStats
      responses:
        '200':
          description: Successful operation
          content:
            application/json; charset=utf-8:
              schema:
                type: object
                required:
                  - data
                properties:
                  data:
                    $ref: '#/components/schemas/KSMNetworkStats'
        '401':
          description: Unauthorized
        '500':
          description: Internal server error
  /ksm/transaction/bond:
    post:
      tags:
        - Kusama (KSM)
      summary: Bond Transaction
      description: Generates a bond transaction on Kusama
      operationId: postKsmBondTx
      requestBody:
        description: Transaction to craft
        required: true
        content:
          application/json; charset=utf-8:
            schema:
              $ref: '#/components/schemas/KSMCraftBondTxPayload'
      responses:
        '200':
          description: Successful operation
          content:
            application/json; charset=utf-8:
              schema:
                type: object
                required:
                  - data
                properties:
                  data:
                    $ref: '#/components/schemas/KSMUnsignedTx'
        '400':
          description: Invalid parameters
        '401':
          description: Unauthorized
        '500':
          description: Internal server error
  /ksm/transaction/bond-extra:
    post:
      tags:
        - Kusama (KSM)
      summary: Bond extra Transaction
      description: Generates a bond extra transaction on Kusama
      operationId: postKsmBondExtraTx
      requestBody:
        description: Transaction to craft
        required: true
        content:
          application/json; charset=utf-8:
            schema:
              $ref: '#/components/schemas/KSMCraftBondExtraTxPayload'
      responses:
        '200':
          description: Successful operation
          content:
            application/json; charset=utf-8:
              schema:
                type: object
                required:
                  - data
                properties:
                  data:
                    $ref: '#/components/schemas/KSMUnsignedTx'
        '400':
          description: Invalid parameters
        '401':
          description: Unauthorized
        '500':
          description: Internal server error
  /ksm/transaction/rebond:
    post:
      tags:
        - Kusama (KSM)
      summary: Rebond Transaction
      description: Generates a rebond transaction on Kusama (to be used to rebond unbonding token)
      operationId: postKsmRebondTx
      requestBody:
        description: Transaction to craft
        required: true
        content:
          application/json; charset=utf-8:
            schema:
              $ref: '#/components/schemas/KSMCraftRebondTxPayload'
      responses:
        '200':
          description: Successful operation
          content:
            application/json; charset=utf-8:
              schema:
                type: object
                required:
                  - data
                properties:
                  data:
                    $ref: '#/components/schemas/KSMUnsignedTx'
        '400':
          description: Invalid parameters
        '401':
          description: Unauthorized
        '500':
          description: Internal server error
  /ksm/transaction/unbond:
    post:
      tags:
        - Kusama (KSM)
      summary: Unbond Transaction
      description: Generates an unbond transaction on Kusama
      operationId: postKsmUnbondTx
      requestBody:
        description: Transaction to craft
        required: true
        content:
          application/json; charset=utf-8:
            schema:
              $ref: '#/components/schemas/KSMCraftUnbondTxPayload'
      responses:
        '200':
          description: Successful operation
          content:
            application/json; charset=utf-8:
              schema:
                type: object
                required:
                  - data
                properties:
                  data:
                    $ref: '#/components/schemas/KSMUnsignedTx'
        '400':
          description: Invalid parameters
        '401':
          description: Unauthorized
        '500':
          description: Internal server error
  /ksm/transaction/nominate:
    post:
      tags:
        - Kusama (KSM)
      summary: Nominate Transaction
      description: Generates a nominate transaction on Kusama
      operationId: postKsmNominateTx
      requestBody:
        description: Transaction to craft
        required: true
        content:
          application/json; charset=utf-8:
            schema:
              $ref: '#/components/schemas/KSMCraftNominateTxPayload'
      responses:
        '200':
          description: Successful operation
          content:
            application/json; charset=utf-8:
              schema:
                type: object
                required:
                  - data
                properties:
                  data:
                    $ref: '#/components/schemas/KSMUnsignedTx'
        '400':
          description: Invalid parameters
        '401':
          description: Unauthorized
        '500':
          description: Internal server error
  /ksm/transaction/withdraw-unbonded:
    post:
      tags:
        - Kusama (KSM)
      summary: Withdraw unbonded Transaction
      description: Generates a withdraw unbonded transaction on Kusama
      operationId: postKsmWithdrawUnbondedTx
      requestBody:
        description: Transaction to craft
        required: true
        content:
          application/json; charset=utf-8:
            schema:
              $ref: '#/components/schemas/KSMCraftWithdrawUnbondedTxPayload'
      responses:
        '200':
          description: Successful operation
          content:
            application/json; charset=utf-8:
              schema:
                type: object
                required:
                  - data
                properties:
                  data:
                    $ref: '#/components/schemas/KSMUnsignedTx'
        '400':
          description: Invalid parameters
        '401':
          description: Unauthorized
        '500':
          description: Internal server error
  /ksm/transaction/chill:
    post:
      tags:
        - Kusama (KSM)
      summary: Chill Transaction
      description: Generates a chill transaction on Kusama
      operationId: postKsmChillTx
      requestBody:
        description: Transaction to craft
        required: true
        content:
          application/json; charset=utf-8:
            schema:
              $ref: '#/components/schemas/KSMCraftChillTxPayload'
      responses:
        '200':
          description: Successful operation
          content:
            application/json; charset=utf-8:
              schema:
                type: object
                required:
                  - data
                properties:
                  data:
                    $ref: '#/components/schemas/KSMUnsignedTx'
        '400':
          description: Invalid parameters
        '401':
          description: Unauthorized
        '500':
          description: Internal server error
  /ksm/transaction/set-payee:
    post:
      tags:
        - Kusama (KSM)
      summary: Set payee Transaction
      description: Generates a set payee transaction on Kusama
      operationId: postKsmSetPayeeTx
      requestBody:
        description: Transaction to craft
        required: true
        content:
          application/json; charset=utf-8:
            schema:
              $ref: '#/components/schemas/KSMCraftSetPayeeTxPayload'
      responses:
        '200':
          description: Successful operation
          content:
            application/json; charset=utf-8:
              schema:
                type: object
                required:
                  - data
                properties:
                  data:
                    $ref: '#/components/schemas/KSMUnsignedTx'
        '400':
          description: Invalid parameters
        '401':
          description: Unauthorized
        '500':
          description: Internal server error
  /ksm/transaction/join-pool:
    post:
      tags:
        - Kusama (KSM)
      summary: Join pool Transaction
      description: Generates a join pool transaction on Kusama
      operationId: postKsmJoinPoolTx
      requestBody:
        description: Transaction to craft
        required: true
        content:
          application/json; charset=utf-8:
            schema:
              $ref: '#/components/schemas/KSMCraftJoinPoolTxPayload'
      responses:
        '200':
          description: Successful operation
          content:
            application/json; charset=utf-8:
              schema:
                type: object
                required:
                  - data
                properties:
                  data:
                    $ref: '#/components/schemas/KSMUnsignedTx'
        '400':
          description: Invalid parameters
        '401':
          description: Unauthorized
        '500':
          description: Internal server error
  /ksm/transaction/bond-extra-pool:
    post:
      tags:
        - Kusama (KSM)
      summary: Bond extra to pool Transaction
      description: Generates a bond extra to pool transaction on Kusama
      operationId: postKsmBondExtraToPoolTx
      requestBody:
        description: Transaction to craft
        required: true
        content:
          application/json; charset=utf-8:
            schema:
              $ref: '#/components/schemas/KSMCraftBondExtraToPoolTxPayload'
      responses:
        '200':
          description: Successful operation
          content:
            application/json; charset=utf-8:
              schema:
                type: object
                required:
                  - data
                properties:
                  data:
                    $ref: '#/components/schemas/KSMUnsignedTx'
        '400':
          description: Invalid parameters
        '401':
          description: Unauthorized
        '500':
          description: Internal server error
  /ksm/transaction/bond-rewards-pool:
    post:
      tags:
        - Kusama (KSM)
      summary: Bond rewards to pool Transaction
      description: Generates a bond rewards to pool transaction on Kusama
      operationId: postKsmBondRewardsToPoolTx
      requestBody:
        description: Transaction to craft
        required: true
        content:
          application/json; charset=utf-8:
            schema:
              $ref: '#/components/schemas/KSMCraftBondRewardsToPoolTxPayload'
      responses:
        '200':
          description: Successful operation
          content:
            application/json; charset=utf-8:
              schema:
                type: object
                required:
                  - data
                properties:
                  data:
                    $ref: '#/components/schemas/KSMUnsignedTx'
        '400':
          description: Invalid parameters
        '401':
          description: Unauthorized
        '500':
          description: Internal server error
  /ksm/transaction/claim-payout-pool:
    post:
      tags:
        - Kusama (KSM)
      summary: Claim payout from pool Transaction
      description: Generates a claim payout (rewards) from pool transaction on Kusama
      operationId: postKsmClaimPayoutFromPoolTx
      requestBody:
        description: Transaction to craft
        required: true
        content:
          application/json; charset=utf-8:
            schema:
              $ref: '#/components/schemas/KSMCraftClaimPayoutFromPoolTxPayload'
      responses:
        '200':
          description: Successful operation
          content:
            application/json; charset=utf-8:
              schema:
                type: object
                required:
                  - data
                properties:
                  data:
                    $ref: '#/components/schemas/KSMUnsignedTx'
        '400':
          description: Invalid parameters
        '401':
          description: Unauthorized
        '500':
          description: Internal server error
  /ksm/transaction/unbond-pool:
    post:
      tags:
        - Kusama (KSM)
      summary: Unbond from pool Transaction
      description: Generates an unbond from pool transaction on Kusama
      operationId: postKsmUnbondFromPoolTx
      requestBody:
        description: Transaction to craft
        required: true
        content:
          application/json; charset=utf-8:
            schema:
              $ref: '#/components/schemas/KSMCraftUnbondFromPoolTxPayload'
      responses:
        '200':
          description: Successful operation
          content:
            application/json; charset=utf-8:
              schema:
                type: object
                required:
                  - data
                properties:
                  data:
                    $ref: '#/components/schemas/KSMUnsignedTx'
        '400':
          description: Invalid parameters
        '401':
          description: Unauthorized
        '500':
          description: Internal server error
  /ksm/transaction/withdraw-unbonded-pool:
    post:
      tags:
        - Kusama (KSM)
      summary: Withdraw unbonded from pool Transaction
      description: Generates a withdraw unbonded from pool transaction on Kusama
      operationId: postKsmWithdrawUnbondedFromPoolTx
      requestBody:
        description: Transaction to craft
        required: true
        content:
          application/json; charset=utf-8:
            schema:
              $ref: '#/components/schemas/KSMCraftWithdrawUnbondedFromPoolTxPayload'
      responses:
        '200':
          description: Successful operation
          content:
            application/json; charset=utf-8:
              schema:
                type: object
                required:
                  - data
                properties:
                  data:
                    $ref: '#/components/schemas/KSMUnsignedTx'
        '400':
          description: Invalid parameters
        '401':
          description: Unauthorized
        '500':
          description: Internal server error
  /ksm/transaction/status:
    get:
      tags:
        - Kusama (KSM)
      summary: Transaction Status
      description: Get the status of a transaction
      operationId: getKsmTxStatus
      parameters:
        - name: tx_hash
          in: query
          description: Hash of the transaction
          required: true
          style: form
          explode: false
          schema:
            type: string
            example: '0x1b9097a6e3d50066348cb173f3150546457a6188fada6a3a40d571798da1a53c'
      responses:
        '200':
          description: Successful operation
          content:
            application/json; charset=utf-8:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/KSMTxStatus'
        '400':
          description: Invalid parameters
        '401':
          description: Unauthorized
        '500':
          description: Internal server error
  /ksm/transaction/decode:
    get:
      tags:
        - Kusama (KSM)
      summary: Transaction Decoding
      description: Decode a transaction
      operationId: getKsmTxDecoding
      parameters:
        - name: tx_serialized
          in: query
          description: Raw transaction to decode
          required: true
          style: form
          explode: false
          schema:
            type: string
            example: 7b2261646472657373223a2235444b38536871747975566b32773471724639487761424a6f695a5631627951733541525a336466325074385636566a222c2261737365744964223a302c22626c6f636b48617368223a22307832636361356238303836613437636161646166663537373563333237666637326231326461616438316464386664363339333336663264393462396365386466222c22626c6f636b4e756d626572223a2230783031313139353364222c22657261223a22307864353033222c2267656e6573697348617368223a22307865313433663233383033616335306538663666386536323639356431636539653465316436386161333663316364326366643135333430323133663334323365222c226d65746164617461527063223a223078222c226d6574686f64223a22307830363030303730303130613564346538303333373363366638653834633638323261396638373033356636356363636638393965656633666364656536313037373034316139336531383035626162323465222c226e6f6e6365223a2230783030303030303565222c227369676e6564457874656e73696f6e73223a5b22436865636b4e6f6e5a65726f53656e646572222c22436865636b5370656356657273696f6e222c22436865636b547856657273696f6e222c22436865636b47656e65736973222c22436865636b4d6f7274616c697479222c22436865636b4e6f6e6365222c22436865636b576569676874222c224368617267655472616e73616374696f6e5061796d656e74225d2c227370656356657273696f6e223a2230783030303032346436222c22746970223a2230783030303030303030303030303030303030303030303030303030303030303030222c227472616e73616374696f6e56657273696f6e223a2230783030303030303136222c2276657273696f6e223a347d
      responses:
        '200':
          description: Successful operation
          content:
            application/json; charset=utf-8:
              schema:
                type: object
                description: Decoded transaction
                example:
                  address: 5DK8ShqtyuVk2w4qrF9HwaBJoiZV1byQs5ARZ3df2Pt8V6Vj
                  assetId: 0
                  blockHash: '0x2cca5b8086a47caadaff5775c327ff72b12daad81dd8fd639336f2d94b9ce8df'
                  blockNumber: '0x0111953d'
                  era: '0xd503'
                  genesisHash: '0xe143f23803ac50e8f6f8e62695d1ce9e4e1d68aa36c1cd2cfd15340213f3423e'
                  metadataRpc: 0x
                  method: '0x0600070010a5d4e803373c6f8e84c6822a9f87035f65cccf899eef3fcdee61077041a93e1805bab24e'
                  nonce: '0x0000005e'
                  signedExtensions:
                    - CheckNonZeroSender
                    - CheckSpecVersion
                    - CheckTxVersion
                    - CheckGenesis
                    - CheckMortality
                    - CheckNonce
                    - CheckWeight
                    - ChargeTransactionPayment
                  specVersion: '0x000024d6'
                  tip: '0x00000000000000000000000000000000'
                  transactionVersion: '0x00000016'
                  version: 4
        '400':
          description: Invalid parameters
        '401':
          description: Unauthorized
        '500':
          description: Internal server error
  /ksm/transaction/prepare:
    post:
      tags:
        - Kusama (KSM)
      summary: Prepare Transaction
      description: Prepare a transaction for broadcast on Kusama by adding a signature to it
      operationId: postKsmPrepareTx
      requestBody:
        description: Transaction to prepare
        required: true
        content:
          application/json; charset=utf-8:
            schema:
              $ref: '#/components/schemas/KSMPrepareTxPayload'
      responses:
        '200':
          description: Successful operation
          content:
            application/json; charset=utf-8:
              schema:
                type: object
                required:
                  - data
                properties:
                  data:
                    $ref: '#/components/schemas/KSMSignedTx'
        '400':
          description: Invalid parameters
        '401':
          description: Unauthorized
        '500':
          description: Internal server error
  /ksm/transaction/broadcast:
    post:
      tags:
        - Kusama (KSM)
      summary: Broadcast Transaction
      description: Broadcast a signed transaction on Kusama
      operationId: postKsmBroadcastTx
      requestBody:
        description: Transaction to broadcast
        required: true
        content:
          application/json; charset=utf-8:
            schema:
              $ref: '#/components/schemas/KSMBroadcastTxPayload'
      responses:
        '200':
          description: Successful operation
          content:
            application/json; charset=utf-8:
              schema:
                type: object
                required:
                  - data
                properties:
                  data:
                    $ref: '#/components/schemas/KSMBroadcastedTx'
        '400':
          description: Invalid parameters
        '401':
          description: Unauthorized
        '500':
          description: Internal server error
  /dydx/stakes:
    get:
      tags:
        - DyDx (DYDX)
      summary: Stakes
      description: Get the status of DYDX stakes. Units are in uDYDX (10⁻⁶ DYDX).
      operationId: getDydxStakes
      parameters:
        - $ref: '#/components/parameters/DYDXValidatorsParam'
        - $ref: '#/components/parameters/DYDXDelegatorsParam'
        - $ref: '#/components/parameters/AccountsParam'
        - $ref: '#/components/parameters/DYDXPrecisionParam'
      responses:
        '200':
          description: Successful operation
          content:
            application/json; charset=utf-8:
              schema:
                type: object
                required:
                  - data
                properties:
                  data:
                    type: array
                    items:
                      $ref: '#/components/schemas/DYDXStake'
        '400':
          description: Invalid parameters
        '401':
          description: Unauthorized
        '500':
          description: Internal server error
    post:
      tags:
        - DyDx (DYDX)
      summary: Create stakes
      description: Link a DYDX stake to a Kiln account
      operationId: postCelsdydxStakes
      requestBody:
        description: Stakes to create
        required: true
        content:
          application/json; charset=utf-8:
            schema:
              $ref: '#/components/schemas/PostDYDXStakesPayload'
      responses:
        '201':
          description: Successful operation
          content:
            application/json; charset=utf-8:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/CoreStake'
        '400':
          description: Invalid parameters
        '401':
          description: Unauthorized
        '500':
          description: Internal server error
  /dydx/rewards:
    get:
      tags:
        - DyDx (DYDX)
      summary: Rewards
      description: Get historical rewards by day of DYDX stakes. Units are in uDYDX (10⁻⁶ DYDX).
      operationId: getDydxRewards
      parameters:
        - $ref: '#/components/parameters/DYDXValidatorsParam'
        - $ref: '#/components/parameters/DYDXDelegatorsParam'
        - $ref: '#/components/parameters/AccountsParam'
        - $ref: '#/components/parameters/StartDateParam'
        - $ref: '#/components/parameters/EndDateParam'
        - $ref: '#/components/parameters/IncludeUSDParam'
        - $ref: '#/components/parameters/DYDXPrecisionParam'
      responses:
        '200':
          description: Successful operation
          content:
            application/json; charset=utf-8:
              schema:
                type: object
                required:
                  - data
                properties:
                  data:
                    type: array
                    items:
                      $ref: '#/components/schemas/DYDXReward'
              examples:
                rewards:
                  value:
                    data:
                      - date: '2023-01-15'
                        rewards: '3575891083876864200000'
                        rewards_uusdc: '142'
                        active_balance: '6300000000000000000000000'
                        net_apy: 3.42
                        rewards_usd: '12'
                        rewards_uusdc_usd: '0.12'
                        balance_usd: '25400'
                      - date: '2023-01-16'
                        rewards: '3575891083876864200000'
                        rewards_uusdc: '245'
                        active_balance: '6300000000000000000000000'
                        net_apy: 3.4
                        rewards_usd: '13'
                        rewards_uusdc_usd: '0.12'
                        balance_usd: '25412'
        '400':
          description: Invalid parameters
        '401':
          description: Unauthorized
        '500':
          description: Internal server error
  /dydx/operations:
    get:
      tags:
        - DyDx (DYDX)
      summary: Operations
      description: Get the operations of DYDX stakes. Units are in uDYDX (10⁻⁶ DYDX).
      operationId: getDydxOperations
      parameters:
        - $ref: '#/components/parameters/DYDXValidatorsParam'
        - $ref: '#/components/parameters/DYDXDelegatorsParam'
        - $ref: '#/components/parameters/DYDXAuthzFlagParam'
        - $ref: '#/components/parameters/AccountsParam'
        - $ref: '#/components/parameters/StartDateParam'
        - $ref: '#/components/parameters/EndDateParam'
        - $ref: '#/components/parameters/DYDXPrecisionParam'
      responses:
        '200':
          description: Successful operation
          content:
            application/json; charset=utf-8:
              schema:
                type: object
                properties:
                  data:
                    type: array
                    items:
                      anyOf:
                        - $ref: '#/components/schemas/DYDXOperationDelegate'
                        - $ref: '#/components/schemas/DYDXOperationUndelegate'
                        - $ref: '#/components/schemas/DYDXOperationRedelegate'
                        - $ref: '#/components/schemas/DYDXOperationWithdrawRewards'
                        - $ref: '#/components/schemas/DYDXOperationGrant'
                        - $ref: '#/components/schemas/DYDXOperationExec'
                      discriminator:
                        propertyName: type
                        mapping:
                          staking.MsgDelegate: '#/components/schemas/DYDXOperationDelegate'
                          staking.MsgUndelegate: '#/components/schemas/DYDXOperationUndelegate'
                          staking.MsgBeginRedelegate: '#/components/schemas/DYDXOperationRedelegate'
                          distr.MsgWithdrawDelegatorReward: '#/components/schemas/DYDXOperationWithdrawRewards'
                          authz.Grant: '#/components/schemas/DYDXOperationGrant'
                          authz.Exec: '#/components/schemas/DYDXOperationExec'
        '400':
          description: Invalid parameters
        '401':
          description: Unauthorized
        '500':
          description: Internal server error
  /dydx/network-stats:
    get:
      tags:
        - DyDx (DYDX)
      summary: Network Stats
      description: Get some network statistics on dYdX
      operationId: getDydxNetworkStats
      responses:
        '200':
          description: Successful operation
          content:
            application/json; charset=utf-8:
              schema:
                type: object
                required:
                  - data
                properties:
                  data:
                    $ref: '#/components/schemas/DYDXNetworkStats'
        '401':
          description: Unauthorized
        '500':
          description: Internal server error
  /dydx/reports:
    get:
      tags:
        - DyDx (DYDX)
      summary: Reports
      description: Get reports on Cosmos staking
      operationId: getDydxReports
      parameters:
        - $ref: '#/components/parameters/DYDXDelegatorsParam'
        - $ref: '#/components/parameters/DYDXValidatorsParam'
        - $ref: '#/components/parameters/AccountsParam'
      responses:
        '200':
          description: Successful operation
          content:
            application/octet-stream:
              schema:
                type: string
                format: binary
                example: ...
        '400':
          description: Invalid parameters
        '401':
          description: Unauthorized
        '500':
          description: Internal server error
  /dydx/balance:
    post:
      tags:
        - DyDx (DYDX)
      summary: Get balance
      description: Get balance of a DYDX account
      operationId: postDydxGetBalance
      requestBody:
        description: Account to query
        required: true
        content:
          application/json; charset=utf-8:
            schema:
              $ref: '#/components/schemas/DYDXGetBalancePayload'
      responses:
        '200':
          description: Successful operation
          content:
            application/json; charset=utf-8:
              schema:
                type: object
                required:
                  - data
                properties:
                  data:
                    type: object
                    required:
                      - amount
                      - denom
                    properties:
                      amount:
                        type: string
                        description: The balance of the account
                        example: '1000000'
                      denom:
                        type: string
                        description: The denomination of the balance
                        example: uusdc
        '400':
          description: Invalid parameters
        '401':
          description: Unauthorized
        '500':
          description: Internal server error
  /dydx/transaction/stake:
    post:
      tags:
        - DyDx (DYDX)
      summary: Stake Transaction
      description: Generates a delegate transaction on DYDX
      operationId: postDydxStakeTx
      requestBody:
        description: Transaction to craft
        required: true
        content:
          application/json; charset=utf-8:
            schema:
              $ref: '#/components/schemas/DYDXCraftStakeTxPayload'
      responses:
        '200':
          description: Successful operation
          content:
            application/json; charset=utf-8:
              schema:
                type: object
                required:
                  - data
                properties:
                  data:
                    $ref: '#/components/schemas/DYDXUnsignedTx'
        '400':
          description: Invalid parameters
        '401':
          description: Unauthorized
        '500':
          description: Internal server error
  /dydx/transaction/withdraw-rewards:
    post:
      tags:
        - DyDx (DYDX)
      summary: Withdraw Rewards Transaction
      description: Generates a withdraw rewards transaction on DYDX
      operationId: postDydxWithdrawRewardsTx
      requestBody:
        description: Transaction to craft
        required: true
        content:
          application/json; charset=utf-8:
            schema:
              $ref: '#/components/schemas/DYDXCraftWithdrawRewardsTxPayload'
      responses:
        '200':
          description: Successful operation
          content:
            application/json; charset=utf-8:
              schema:
                type: object
                required:
                  - data
                properties:
                  data:
                    $ref: '#/components/schemas/DYDXUnsignedTx'
        '400':
          description: Invalid parameters
        '401':
          description: Unauthorized
        '500':
          description: Internal server error
  /dydx/transaction/unstake:
    post:
      tags:
        - DyDx (DYDX)
      summary: Unstake Transaction
      description: Generates an undelegate transaction on DYDX
      operationId: postDydxUnstakeTx
      requestBody:
        description: Transaction to craft
        required: true
        content:
          application/json; charset=utf-8:
            schema:
              $ref: '#/components/schemas/DYDXCraftUnstakeTxPayload'
      responses:
        '200':
          description: Successful operation
          content:
            application/json; charset=utf-8:
              schema:
                type: object
                required:
                  - data
                properties:
                  data:
                    $ref: '#/components/schemas/DYDXUnsignedTx'
        '400':
          description: Invalid parameters
        '401':
          description: Unauthorized
        '500':
          description: Internal server error
  /dydx/transaction/redelegate:
    post:
      tags:
        - DyDx (DYDX)
      summary: Redelegate Transaction
      description: Generates a redelegate transaction on DYDX to move a stake from a validator to another without going through the 30 days unbonding period.
      operationId: postDydxRedelegateTx
      requestBody:
        description: Transaction to craft
        required: true
        content:
          application/json; charset=utf-8:
            schema:
              $ref: '#/components/schemas/DYDXCraftRedelegateTxPayload'
      responses:
        '200':
          description: Successful operation
          content:
            application/json; charset=utf-8:
              schema:
                type: object
                required:
                  - data
                properties:
                  data:
                    $ref: '#/components/schemas/DYDXUnsignedTx'
        '400':
          description: Invalid parameters
        '401':
          description: Unauthorized
        '500':
          description: Internal server error
  /dydx/transaction/noble-ibc-transfer:
    post:
      tags:
        - DyDx (DYDX)
      summary: Noble IBC Transfer Transaction
      description: Generates an IBC transfer transaction on DYDX to Noble
      operationId: postDydxNobleIbcTransferTx
      requestBody:
        description: Transaction to craft
        required: true
        content:
          application/json; charset=utf-8:
            schema:
              $ref: '#/components/schemas/DYDXCraftNobleIbcTransferTxPayload'
      responses:
        '200':
          description: Successful operation
          content:
            application/json; charset=utf-8:
              schema:
                type: object
                required:
                  - data
                properties:
                  data:
                    $ref: '#/components/schemas/DYDXUnsignedTx'
        '400':
          description: Invalid parameters
        '401':
          description: Unauthorized
        '500':
          description: Internal server error
  /dydx/transaction/prepare:
    post:
      tags:
        - DyDx (DYDX)
      summary: Prepare Transaction
      description: Prepare an unsigned transaction for broadcast by adding signatures to it
      operationId: postDydxPrepareTx
      requestBody:
        description: Transaction to prepare
        required: true
        content:
          application/json; charset=utf-8:
            schema:
              $ref: '#/components/schemas/DYDXPrepareTxPayload'
      responses:
        '200':
          description: Successful operation
          content:
            application/json; charset=utf-8:
              schema:
                type: object
                required:
                  - data
                properties:
                  data:
                    $ref: '#/components/schemas/DYDXSignedTx'
        '400':
          description: Invalid parameters
        '401':
          description: Unauthorized
        '500':
          description: Internal server error
  /dydx/transaction/broadcast:
    post:
      tags:
        - DyDx (DYDX)
      summary: Broadcast Transaction
      description: Broadcast a signed transaction to the DYDX network
      operationId: postDydxBroadcastTx
      requestBody:
        description: Transaction to broadcast
        required: true
        content:
          application/json; charset=utf-8:
            schema:
              $ref: '#/components/schemas/DYDXBroadcastTxPayload'
      responses:
        '200':
          description: Successful operation
          content:
            application/json; charset=utf-8:
              schema:
                type: object
                required:
                  - data
                properties:
                  data:
                    $ref: '#/components/schemas/DYDXTxHash'
        '400':
          description: Invalid parameters
        '401':
          description: Unauthorized
        '500':
          description: Internal server error
  /dydx/transaction/status:
    get:
      tags:
        - DyDx (DYDX)
      summary: Transaction Status
      description: Get the status of a transaction
      operationId: getDydxTxStatus
      parameters:
        - name: tx_hash
          in: query
          description: Hash of the transaction
          required: true
          style: form
          explode: false
          schema:
            type: string
            example: 2B4F732E12D5D5AF1F907AD03B199167A718EDC6201DE5713143AB80990420CB
      responses:
        '200':
          description: Successful operation
          content:
            application/json; charset=utf-8:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/DYDXTxStatus'
        '400':
          description: Invalid parameters
        '401':
          description: Unauthorized
        '500':
          description: Internal server error
  /dydx/transaction/decode:
    get:
      tags:
        - DyDx (DYDX)
      summary: Transaction Decoding
      description: Decode a transaction
      operationId: getDydxTxDecoding
      parameters:
        - name: tx_serialized
          in: query
          description: Raw transaction to decode
          required: true
          style: form
          explode: false
          schema:
            type: string
            example: 0aa1010a9e010a232f636f736d6f732e7374616b696e672e763162657461312e4d736744656c656761746512770a2d636f736d6f733139633966646834383876716a636c6c74777036386a6d3530796477796833366a7165617465761234636f736d6f7376616c6f706572313679733065673933356d6b71706b79646b6766636a39616765326175386c39366e61657265391a100a057561746f6d12073130303030303012670a500a460a1f2f636f736d6f732e63727970746f2e736563703235366b312e5075624b657912230a21039ce47b2a813d13876131a9c3be77e8c4afa49e948744abbee11f939e2a420f4612040a020801186612130a0d0a057561746f6d1204353030301080897a1a1174686574612d746573746e65742d30303120e0cd2a
      responses:
        '200':
          description: Successful operation
          content:
            application/json; charset=utf-8:
              schema:
                type: object
                description: Decoded transaction
                example:
                  authInfo:
                    signerInfos:
                      - publicKey:
                          typeUrl: /cosmos.crypto.secp256k1.PubKey
                          value:
                            '0': 10
                            '1': 33
                            '2': 3
                            '3': 156
                            '4': 228
                            '5': 123
                            '6': 42
                            '7': 129
                            '8': 61
                            '9': 19
                            '10': 135
                            '11': 97
                            '12': 49
                            '13': 169
                            '14': 195
                            '15': 190
                            '16': 119
                            '17': 232
                            '18': 196
                            '19': 175
                            '20': 164
                            '21': 158
                            '22': 148
                            '23': 135
                            '24': 68
                            '25': 171
                            '26': 190
                            '27': 225
                            '28': 31
                            '29': 147
                            '30': 158
                            '31': 42
                            '32': 66
                            '33': 15
                            '34': 70
                        modeInfo:
                          single:
                            mode: 1
                        sequence:
                          low: 102
                          high: 0
                          unsigned: true
                    fee:
                      amount:
                        - denom: uosmo
                          amount: '5000'
                      gasLimit:
                        low: 2000000
                        high: 0
                        unsigned: true
                      payer: ''
                      granter: ''
                  body:
                    messages:
                      - typeUrl: /cosmos.staking.v1beta1.MsgDelegate
                        value:
                          '0': 10
                          '1': 45
                          '2': 99
                          '3': 111
                          '4': 115
                          '5': 109
                          '6': 111
                          '7': 115
                          '8': 49
                          '9': 57
                          '10': 99
                          '11': 57
                          '12': 102
                          '13': 100
                          '14': 104
                          '15': 52
                          '16': 56
                          '17': 56
                          '18': 118
                          '19': 113
                          '20': 106
                          '21': 99
                          '22': 108
                          '23': 108
                          '24': 116
                          '25': 119
                          '26': 112
                          '27': 54
                          '28': 56
                          '29': 106
                          '30': 109
                          '31': 53
                          '32': 48
                          '33': 121
                          '34': 100
                          '35': 119
                          '36': 121
                          '37': 104
                          '38': 51
                          '39': 54
                          '40': 106
                          '41': 113
                          '42': 101
                          '43': 97
                          '44': 116
                          '45': 101
                          '46': 118
                          '47': 18
                          '48': 52
                          '49': 99
                          '50': 111
                          '51': 115
                          '52': 109
                          '53': 111
                          '54': 115
                          '55': 118
                          '56': 97
                          '57': 108
                          '58': 111
                          '59': 112
                          '60': 101
                          '61': 114
                          '62': 49
                          '63': 54
                          '64': 121
                          '65': 115
                          '66': 48
                          '67': 101
                          '68': 103
                          '69': 57
                          '70': 51
                          '71': 53
                          '72': 109
                          '73': 107
                          '74': 113
                          '75': 112
                          '76': 107
                          '77': 121
                          '78': 100
                          '79': 107
                          '80': 103
                          '81': 102
                          '82': 99
                          '83': 106
                          '84': 57
                          '85': 97
                          '86': 103
                          '87': 101
                          '88': 50
                          '89': 97
                          '90': 117
                          '91': 56
                          '92': 108
                          '93': 57
                          '94': 54
                          '95': 110
                          '96': 97
                          '97': 101
                          '98': 114
                          '99': 101
                          '100': 57
                          '101': 26
                          '102': 16
                          '103': 10
                          '104': 5
                          '105': 117
                          '106': 97
                          '107': 116
                          '108': 111
                          '109': 109
                          '110': 18
                          '111': 7
                          '112': 49
                          '113': 48
                          '114': 48
                          '115': 48
                          '116': 48
                          '117': 48
                          '118': 48
                    memo: ''
                    timeoutHeight:
                      low: 0
                      high: 0
                      unsigned: true
                    extensionOptions: []
                    nonCriticalExtensionOptions: []
                  signatures:
                    - '0': 116
                      '1': 104
                      '2': 101
                      '3': 116
                      '4': 97
                      '5': 45
                      '6': 116
                      '7': 101
                      '8': 115
                      '9': 116
                      '10': 110
                      '11': 101
                      '12': 116
                      '13': 45
                      '14': 48
                      '15': 48
                      '16': 49
        '400':
          description: Invalid parameters
        '401':
          description: Unauthorized
        '500':
          description: Internal server error
  /tia/stakes:
    get:
      tags:
        - Celestia (TIA)
      summary: Stakes
      description: Get the status of TIA stakes. Units are in uTIA (10⁻⁶ TIA).
      operationId: getCelestiaStakes
      parameters:
        - $ref: '#/components/parameters/TIAValidatorsParam'
        - $ref: '#/components/parameters/TIADelegatorsParam'
        - $ref: '#/components/parameters/AccountsParam'
        - $ref: '#/components/parameters/TIAPrecisionParam'
      responses:
        '200':
          description: Successful operation
          content:
            application/json; charset=utf-8:
              schema:
                type: object
                required:
                  - data
                properties:
                  data:
                    type: array
                    items:
                      $ref: '#/components/schemas/TIAStake'
        '400':
          description: Invalid parameters
        '401':
          description: Unauthorized
        '500':
          description: Internal server error
    post:
      tags:
        - Celestia (TIA)
      summary: Create stakes
      description: Link an CELESTIA stake to a Kiln account
      operationId: postCelstiaStakes
      requestBody:
        description: Stakes to create
        required: true
        content:
          application/json; charset=utf-8:
            schema:
              $ref: '#/components/schemas/PostTIAStakesPayload'
      responses:
        '201':
          description: Successful operation
          content:
            application/json; charset=utf-8:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/CoreStake'
        '400':
          description: Invalid parameters
        '401':
          description: Unauthorized
        '500':
          description: Internal server error
  /tia/rewards:
    get:
      tags:
        - Celestia (TIA)
      summary: Rewards
      description: Get historical rewards by day of CELESTIA stakes. Units are in uTIA (10⁻⁶ TIA).
      operationId: getCelestiaRewards
      parameters:
        - $ref: '#/components/parameters/TIAValidatorsParam'
        - $ref: '#/components/parameters/TIADelegatorsParam'
        - $ref: '#/components/parameters/AccountsParam'
        - $ref: '#/components/parameters/StartDateParam'
        - $ref: '#/components/parameters/EndDateParam'
        - $ref: '#/components/parameters/IncludeUSDParam'
        - $ref: '#/components/parameters/TIAPrecisionParam'
      responses:
        '200':
          description: Successful operation
          content:
            application/json; charset=utf-8:
              schema:
                type: object
                required:
                  - data
                properties:
                  data:
                    type: array
                    items:
                      $ref: '#/components/schemas/TIAReward'
              examples:
                rewards:
                  value:
                    data:
                      - date: '2023-01-15'
                        rewards: '3575891083876864200000'
                        active_balance: '6300000000000000000000000'
                        net_apy: 3.42
                        rewards_usd: '12'
                        stake_balance_usd: '25400'
                      - date: '2023-01-16'
                        rewards: '3575891083876864200000'
                        active_balance: '6300000000000000000000000'
                        net_apy: 3.4
                        rewards_usd: '13'
                        stake_balance_usd: '25412'
        '400':
          description: Invalid parameters
        '401':
          description: Unauthorized
        '500':
          description: Internal server error
  /tia/operations:
    get:
      tags:
        - Celestia (TIA)
      summary: Operations
      description: Get the operations of TIA stakes. Units are in uTIA (10⁻⁶ TIA).
      operationId: getCelestiaOperations
      parameters:
        - $ref: '#/components/parameters/TIAValidatorsParam'
        - $ref: '#/components/parameters/TIADelegatorsParam'
        - $ref: '#/components/parameters/TIAAuthzFlagParam'
        - $ref: '#/components/parameters/AccountsParam'
        - $ref: '#/components/parameters/StartDateParam'
        - $ref: '#/components/parameters/EndDateParam'
        - $ref: '#/components/parameters/TIAPrecisionParam'
      responses:
        '200':
          description: Successful operation
          content:
            application/json; charset=utf-8:
              schema:
                type: object
                properties:
                  data:
                    type: array
                    items:
                      anyOf:
                        - $ref: '#/components/schemas/TIAOperationDelegate'
                        - $ref: '#/components/schemas/TIAOperationUndelegate'
                        - $ref: '#/components/schemas/TIAOperationRedelegate'
                        - $ref: '#/components/schemas/TIAOperationWithdrawRewards'
                        - $ref: '#/components/schemas/TIAOperationGrant'
                        - $ref: '#/components/schemas/TIAOperationExec'
                      discriminator:
                        propertyName: type
                        mapping:
                          staking.MsgDelegate: '#/components/schemas/TIAOperationDelegate'
                          staking.MsgUndelegate: '#/components/schemas/TIAOperationUndelegate'
                          staking.MsgBeginRedelegate: '#/components/schemas/TIAOperationRedelegate'
                          distr.MsgWithdrawDelegatorReward: '#/components/schemas/TIAOperationWithdrawRewards'
                          authz.Grant: '#/components/schemas/TIAOperationGrant'
                          authz.Exec: '#/components/schemas/TIAOperationExec'
        '400':
          description: Invalid parameters
        '401':
          description: Unauthorized
        '500':
          description: Internal server error
  /tia/network-stats:
    get:
      tags:
        - Celestia (TIA)
      summary: Network Stats
      description: Get some network statistics on Celestia
      operationId: getCelestiaNetworkStats
      responses:
        '200':
          description: Successful operation
          content:
            application/json; charset=utf-8:
              schema:
                type: object
                required:
                  - data
                properties:
                  data:
                    $ref: '#/components/schemas/TIANetworkStats'
        '401':
          description: Unauthorized
        '500':
          description: Internal server error
  /tia/reports:
    get:
      tags:
        - Celestia (TIA)
      summary: Reports
      description: Get reports on Cosmos staking
      operationId: getCelestiaReports
      parameters:
        - $ref: '#/components/parameters/TIADelegatorsParam'
        - $ref: '#/components/parameters/TIAValidatorsParam'
        - $ref: '#/components/parameters/AccountsParam'
      responses:
        '200':
          description: Successful operation
          content:
            application/octet-stream:
              schema:
                type: string
                format: binary
                example: ...
        '400':
          description: Invalid parameters
        '401':
          description: Unauthorized
        '500':
          description: Internal server error
  /tia/transaction/stake:
    post:
      tags:
        - Celestia (TIA)
      summary: Stake Transaction
      description: Generates a delegate transaction on Celestia
      operationId: postTiaStakeTx
      requestBody:
        description: Transaction to craft
        required: true
        content:
          application/json; charset=utf-8:
            schema:
              $ref: '#/components/schemas/TIACraftStakeTxPayload'
      responses:
        '200':
          description: Successful operation
          content:
            application/json; charset=utf-8:
              schema:
                type: object
                required:
                  - data
                properties:
                  data:
                    $ref: '#/components/schemas/TIAStakeUnsignedTx'
        '400':
          description: Invalid parameters
        '401':
          description: Unauthorized
        '500':
          description: Internal server error
  /tia/transaction/withdraw-rewards:
    post:
      tags:
        - Celestia (TIA)
      summary: Withdraw Rewards Transaction
      description: Generates a withdraw rewards transaction on Celestia
      operationId: postTiaWithdrawRewardsTx
      requestBody:
        description: Transaction to craft
        required: true
        content:
          application/json; charset=utf-8:
            schema:
              $ref: '#/components/schemas/TIACraftWithdrawRewardsTxPayload'
      responses:
        '200':
          description: Successful operation
          content:
            application/json; charset=utf-8:
              schema:
                type: object
                required:
                  - data
                properties:
                  data:
                    $ref: '#/components/schemas/TIAUnsignedTx'
        '400':
          description: Invalid parameters
        '401':
          description: Unauthorized
        '500':
          description: Internal server error
  /tia/transaction/restake-rewards:
    post:
      tags:
        - Celestia (TIA)
      summary: Restake Rewards Transaction
      description: Generates a restake rewards transaction on Celestia
      operationId: postTiaRestakeRewardsTx
      requestBody:
        description: Transaction to craft
        required: true
        content:
          application/json; charset=utf-8:
            schema:
              $ref: '#/components/schemas/TIACraftRestakeRewardsTxPayload'
      responses:
        '200':
          description: Successful operation
          content:
            application/json; charset=utf-8:
              schema:
                type: object
                required:
                  - data
                properties:
                  data:
                    $ref: '#/components/schemas/TIAUnsignedTx'
        '400':
          description: Invalid parameters
        '401':
          description: Unauthorized
        '500':
          description: Internal server error
  /tia/transaction/unstake:
    post:
      tags:
        - Celestia (TIA)
      summary: Unstake Transaction
      description: Generates an undelegate transaction on Celestia
      operationId: postTiaUnstakeTx
      requestBody:
        description: Transaction to craft
        required: true
        content:
          application/json; charset=utf-8:
            schema:
              $ref: '#/components/schemas/TIACraftUnstakeTxPayload'
      responses:
        '200':
          description: Successful operation
          content:
            application/json; charset=utf-8:
              schema:
                type: object
                required:
                  - data
                properties:
                  data:
                    $ref: '#/components/schemas/TIAUnsignedTx'
        '400':
          description: Invalid parameters
        '401':
          description: Unauthorized
        '500':
          description: Internal server error
  /tia/transaction/redelegate:
    post:
      tags:
        - Celestia (TIA)
      summary: Redelegate Transaction
      description: Generates a redelegate transaction on Celestia to move a stake from a validator to another without going through the 21 days unbonding period.
      operationId: postTiaRedelegateTx
      requestBody:
        description: Transaction to craft
        required: true
        content:
          application/json; charset=utf-8:
            schema:
              $ref: '#/components/schemas/TIACraftRedelegateTxPayload'
      responses:
        '200':
          description: Successful operation
          content:
            application/json; charset=utf-8:
              schema:
                type: object
                required:
                  - data
                properties:
                  data:
                    $ref: '#/components/schemas/TIAUnsignedTx'
        '400':
          description: Invalid parameters
        '401':
          description: Unauthorized
        '500':
          description: Internal server error
  /tia/transaction/prepare:
    post:
      tags:
        - Celestia (TIA)
      summary: Prepare Transaction
      description: Prepare an unsigned transaction for broadcast by adding signatures to it
      operationId: postTiaPrepareTx
      requestBody:
        description: Transaction to prepare
        required: true
        content:
          application/json; charset=utf-8:
            schema:
              $ref: '#/components/schemas/TIAPrepareTxPayload'
      responses:
        '200':
          description: Successful operation
          content:
            application/json; charset=utf-8:
              schema:
                type: object
                required:
                  - data
                properties:
                  data:
                    $ref: '#/components/schemas/TIASignedTx'
        '400':
          description: Invalid parameters
        '401':
          description: Unauthorized
        '500':
          description: Internal server error
  /tia/transaction/broadcast:
    post:
      tags:
        - Celestia (TIA)
      summary: Broadcast Transaction
      description: Broadcast a signed transaction to the Celestia network
      operationId: postTiaBroadcastTx
      requestBody:
        description: Transaction to broadcast
        required: true
        content:
          application/json; charset=utf-8:
            schema:
              $ref: '#/components/schemas/TIABroadcastTxPayload'
      responses:
        '200':
          description: Successful operation
          content:
            application/json; charset=utf-8:
              schema:
                type: object
                required:
                  - data
                properties:
                  data:
                    $ref: '#/components/schemas/TIATxHash'
        '400':
          description: Invalid parameters
        '401':
          description: Unauthorized
        '500':
          description: Internal server error
  /tia/transaction/status:
    get:
      tags:
        - Celestia (TIA)
      summary: Transaction Status
      description: Get the status of a transaction
      operationId: getTiaTxStatus
      parameters:
        - name: tx_hash
          in: query
          description: Hash of the transaction
          required: true
          style: form
          explode: false
          schema:
            type: string
            example: 2B4F732E12D5D5AF1F907AD03B199167A718EDC6201DE5713143AB80990420CB
      responses:
        '200':
          description: Successful operation
          content:
            application/json; charset=utf-8:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/TIATxStatus'
        '400':
          description: Invalid parameters
        '401':
          description: Unauthorized
        '500':
          description: Internal server error
  /tia/transaction/decode:
    get:
      tags:
        - Celestia (TIA)
      summary: Transaction Decoding
      description: Decode a transaction
      operationId: getTiaTxDecoding
      parameters:
        - name: tx_serialized
          in: query
          description: Raw transaction to decode
          required: true
          style: form
          explode: false
          schema:
            type: string
            example: 0aa1010a9e010a232f636f736d6f732e7374616b696e672e763162657461312e4d736744656c656761746512770a2d636f736d6f733139633966646834383876716a636c6c74777036386a6d3530796477796833366a7165617465761234636f736d6f7376616c6f706572313679733065673933356d6b71706b79646b6766636a39616765326175386c39366e61657265391a100a057561746f6d12073130303030303012670a500a460a1f2f636f736d6f732e63727970746f2e736563703235366b312e5075624b657912230a21039ce47b2a813d13876131a9c3be77e8c4afa49e948744abbee11f939e2a420f4612040a020801186612130a0d0a057561746f6d1204353030301080897a1a1174686574612d746573746e65742d30303120e0cd2a
      responses:
        '200':
          description: Successful operation
          content:
            application/json; charset=utf-8:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/TIATxDecoding'
        '400':
          description: Invalid parameters
        '401':
          description: Unauthorized
        '500':
          description: Internal server error
  /zeta/stakes:
    get:
      tags:
        - ZetaChain (ZETA)
      summary: Stakes
      description: Get the status of ZETA stakes. Units are in uZETA (10⁻⁶ ZETA).
      operationId: getZetachainStakes
      parameters:
        - $ref: '#/components/parameters/ZETAValidatorsParam'
        - $ref: '#/components/parameters/ZETADelegatorsParam'
        - $ref: '#/components/parameters/AccountsParam'
        - $ref: '#/components/parameters/ZETAPrecisionParam'
      responses:
        '200':
          description: Successful operation
          content:
            application/json; charset=utf-8:
              schema:
                type: object
                required:
                  - data
                properties:
                  data:
                    type: array
                    items:
                      $ref: '#/components/schemas/ZETAStake'
        '400':
          description: Invalid parameters
        '401':
          description: Unauthorized
        '500':
          description: Internal server error
    post:
      tags:
        - ZetaChain (ZETA)
      summary: Create stakes
      description: Link a ZetaChain stake to a Kiln account
      operationId: postZetachainStakes
      requestBody:
        description: Stakes to create
        required: true
        content:
          application/json; charset=utf-8:
            schema:
              $ref: '#/components/schemas/PostZETAStakesPayload'
      responses:
        '201':
          description: Successful operation
          content:
            application/json; charset=utf-8:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/CoreStake'
        '400':
          description: Invalid parameters
        '401':
          description: Unauthorized
        '500':
          description: Internal server error
  /zeta/rewards:
    get:
      tags:
        - ZetaChain (ZETA)
      summary: Rewards
      description: Get historical rewards by day of ZETA stakes. Units are in uZETA (10⁻⁶ ZETA).
      operationId: getZetachainRewards
      parameters:
        - $ref: '#/components/parameters/ZETAValidatorsParam'
        - $ref: '#/components/parameters/ZETADelegatorsParam'
        - $ref: '#/components/parameters/AccountsParam'
        - $ref: '#/components/parameters/StartDateParam'
        - $ref: '#/components/parameters/EndDateParam'
        - $ref: '#/components/parameters/IncludeUSDParam'
        - $ref: '#/components/parameters/ZETAPrecisionParam'
      responses:
        '200':
          description: Successful operation
          content:
            application/json; charset=utf-8:
              schema:
                type: object
                required:
                  - data
                properties:
                  data:
                    type: array
                    items:
                      $ref: '#/components/schemas/ZETAReward'
              examples:
                rewards:
                  value:
                    data:
                      - date: '2023-01-15'
                        rewards: '3575891083876864200000'
                        active_balance: '6300000000000000000000000'
                        net_apy: 3.42
                        rewards_usd: '12'
                        stake_balance_usd: '25400'
                      - date: '2023-01-16'
                        rewards: '3575891083876864200000'
                        active_balance: '6300000000000000000000000'
                        net_apy: 3.4
                        rewards_usd: '13'
                        stake_balance_usd: '25412'
        '400':
          description: Invalid parameters
        '401':
          description: Unauthorized
        '500':
          description: Internal server error
  /zeta/operations:
    get:
      tags:
        - ZetaChain (ZETA)
      summary: Operations
      description: Get the operations of ZETACHAIN stakes. Units are in uZETA (10⁻⁶ ZETA).
      operationId: getZetachainOperations
      parameters:
        - $ref: '#/components/parameters/ZETAValidatorsParam'
        - $ref: '#/components/parameters/ZETADelegatorsParam'
        - $ref: '#/components/parameters/ZETAAuthzFlagParam'
        - $ref: '#/components/parameters/AccountsParam'
        - $ref: '#/components/parameters/StartDateParam'
        - $ref: '#/components/parameters/EndDateParam'
        - $ref: '#/components/parameters/ZETAPrecisionParam'
      responses:
        '200':
          description: Successful operation
          content:
            application/json; charset=utf-8:
              schema:
                type: object
                properties:
                  data:
                    type: array
                    items:
                      anyOf:
                        - $ref: '#/components/schemas/ZETAOperationDelegate'
                        - $ref: '#/components/schemas/ZETAOperationUndelegate'
                        - $ref: '#/components/schemas/ZETAOperationRedelegate'
                        - $ref: '#/components/schemas/ZETAOperationWithdrawRewards'
                        - $ref: '#/components/schemas/ZETAOperationGrant'
                        - $ref: '#/components/schemas/ZETAOperationExec'
                      discriminator:
                        propertyName: type
                        mapping:
                          staking.MsgDelegate: '#/components/schemas/ZETAOperationDelegate'
                          staking.MsgUndelegate: '#/components/schemas/ZETAOperationUndelegate'
                          staking.MsgBeginRedelegate: '#/components/schemas/ZETAOperationRedelegate'
                          distr.MsgWithdrawDelegatorReward: '#/components/schemas/ZETAOperationWithdrawRewards'
                          authz.Grant: '#/components/schemas/ZETAOperationGrant'
                          authz.Exec: '#/components/schemas/ZETAOperationExec'
        '400':
          description: Invalid parameters
        '401':
          description: Unauthorized
        '500':
          description: Internal server error
  /zeta/network-stats:
    get:
      tags:
        - ZetaChain (ZETA)
      summary: Network Stats
      description: Get some network statistics on Zetachain
      operationId: getZetachainNetworkStats
      responses:
        '200':
          description: Successful operation
          content:
            application/json; charset=utf-8:
              schema:
                type: object
                required:
                  - data
                properties:
                  data:
                    $ref: '#/components/schemas/ZETANetworkStats'
        '401':
          description: Unauthorized
        '500':
          description: Internal server error
  /zeta/reports:
    get:
      tags:
        - ZetaChain (ZETA)
      summary: Reports
      description: Get reports on Cosmos staking
      operationId: getZetachainReports
      parameters:
        - $ref: '#/components/parameters/ZETADelegatorsParam'
        - $ref: '#/components/parameters/ZETAValidatorsParam'
        - $ref: '#/components/parameters/AccountsParam'
      responses:
        '200':
          description: Successful operation
          content:
            application/octet-stream:
              schema:
                type: string
                format: binary
                example: ...
        '400':
          description: Invalid parameters
        '401':
          description: Unauthorized
        '500':
          description: Internal server error
  /zeta/balance:
    post:
      tags:
        - ZetaChain (ZETA)
      summary: Get balance
      description: Get balance of a Zeta account
      operationId: postZetaGetBalance
      requestBody:
        description: Account to query
        required: true
        content:
          application/json; charset=utf-8:
            schema:
              $ref: '#/components/schemas/ZETAGetBalancePayload'
      responses:
        '200':
          description: Successful operation
          content:
            application/json; charset=utf-8:
              schema:
                type: object
                required:
                  - data
                properties:
                  data:
                    type: object
                    required:
                      - amount
                      - denom
                    properties:
                      amount:
                        type: string
                        description: The balance of the account
                        example: '1000000'
                      denom:
                        type: string
                        description: The denomination of the balance
                        example: azeta
        '400':
          description: Invalid parameters
        '401':
          description: Unauthorized
        '500':
          description: Internal server error
  /zeta/transaction/stake:
    post:
      tags:
        - ZetaChain (ZETA)
      summary: Stake Transaction
      description: Generates a delegate transaction on ZetaChain
      operationId: postZetaStakeTx
      requestBody:
        description: Transaction to craft
        required: true
        content:
          application/json; charset=utf-8:
            schema:
              $ref: '#/components/schemas/ZETACraftStakeTxPayload'
      responses:
        '200':
          description: Successful operation
          content:
            application/json; charset=utf-8:
              schema:
                type: object
                required:
                  - data
                properties:
                  data:
                    $ref: '#/components/schemas/ZETAStakeUnsignedTx'
        '400':
          description: Invalid parameters
        '401':
          description: Unauthorized
        '500':
          description: Internal server error
  /zeta/transaction/send:
    post:
      tags:
        - ZetaChain (ZETA)
      summary: Send Transaction
      description: Generates a send transaction on ZetaChain
      operationId: postZetaSendTx
      requestBody:
        description: Transaction to craft
        required: true
        content:
          application/json; charset=utf-8:
            schema:
              $ref: '#/components/schemas/ZETACraftSendTxPayload'
      responses:
        '200':
          description: Successful operation
          content:
            application/json; charset=utf-8:
              schema:
                type: object
                required:
                  - data
                properties:
                  data:
                    $ref: '#/components/schemas/ZETAUnsignedTx'
        '400':
          description: Invalid parameters
        '401':
          description: Unauthorized
        '500':
          description: Internal server error
  /zeta/transaction/withdraw-rewards:
    post:
      tags:
        - ZetaChain (ZETA)
      summary: Withdraw Rewards Transaction
      description: Generates a withdraw rewards transaction on ZetaChain
      operationId: postZetaWithdrawRewardsTx
      requestBody:
        description: Transaction to craft
        required: true
        content:
          application/json; charset=utf-8:
            schema:
              $ref: '#/components/schemas/ZETACraftWithdrawRewardsTxPayload'
      responses:
        '200':
          description: Successful operation
          content:
            application/json; charset=utf-8:
              schema:
                type: object
                required:
                  - data
                properties:
                  data:
                    $ref: '#/components/schemas/ZETAUnsignedTx'
        '400':
          description: Invalid parameters
        '401':
          description: Unauthorized
        '500':
          description: Internal server error
  /zeta/transaction/unstake:
    post:
      tags:
        - ZetaChain (ZETA)
      summary: Unstake Transaction
      description: Generates an undelegate transaction on ZetaChain
      operationId: postZetaUnstakeTx
      requestBody:
        description: Transaction to craft
        required: true
        content:
          application/json; charset=utf-8:
            schema:
              $ref: '#/components/schemas/ZETACraftUnstakeTxPayload'
      responses:
        '200':
          description: Successful operation
          content:
            application/json; charset=utf-8:
              schema:
                type: object
                required:
                  - data
                properties:
                  data:
                    $ref: '#/components/schemas/ZETAUnsignedTx'
        '400':
          description: Invalid parameters
        '401':
          description: Unauthorized
        '500':
          description: Internal server error
  /zeta/transaction/redelegate:
    post:
      tags:
        - ZetaChain (ZETA)
      summary: Redelegate Transaction
      description: Generates a redelegate transaction on ZetaChain to move a stake from a validator to another without going through the 21 days unbonding period.
      operationId: postZetaRedelegateTx
      requestBody:
        description: Transaction to craft
        required: true
        content:
          application/json; charset=utf-8:
            schema:
              $ref: '#/components/schemas/ZETACraftRedelegateTxPayload'
      responses:
        '200':
          description: Successful operation
          content:
            application/json; charset=utf-8:
              schema:
                type: object
                required:
                  - data
                properties:
                  data:
                    $ref: '#/components/schemas/ZETAUnsignedTx'
        '400':
          description: Invalid parameters
        '401':
          description: Unauthorized
        '500':
          description: Internal server error
  /zeta/transaction/prepare:
    post:
      tags:
        - ZetaChain (ZETA)
      summary: Prepare Transaction
      description: Prepare an unsigned transaction for broadcast by adding signatures to it
      operationId: postZetaPrepareTx
      requestBody:
        description: Transaction to prepare
        required: true
        content:
          application/json; charset=utf-8:
            schema:
              $ref: '#/components/schemas/ZETAPrepareTxPayload'
      responses:
        '200':
          description: Successful operation
          content:
            application/json; charset=utf-8:
              schema:
                type: object
                required:
                  - data
                properties:
                  data:
                    $ref: '#/components/schemas/ZETASignedTx'
        '400':
          description: Invalid parameters
        '401':
          description: Unauthorized
        '500':
          description: Internal server error
  /zeta/transaction/broadcast:
    post:
      tags:
        - ZetaChain (ZETA)
      summary: Broadcast Transaction
      description: Broadcast a signed transaction to the ZetaChain network
      operationId: postZetaBroadcastTx
      requestBody:
        description: Transaction to broadcast
        required: true
        content:
          application/json; charset=utf-8:
            schema:
              $ref: '#/components/schemas/ZETABroadcastTxPayload'
      responses:
        '200':
          description: Successful operation
          content:
            application/json; charset=utf-8:
              schema:
                type: object
                required:
                  - data
                properties:
                  data:
                    $ref: '#/components/schemas/ZETATxHash'
        '400':
          description: Invalid parameters
        '401':
          description: Unauthorized
        '500':
          description: Internal server error
  /zeta/transaction/status:
    get:
      tags:
        - ZetaChain (ZETA)
      summary: Transaction Status
      description: Get the status of a transaction
      operationId: getZetaTxStatus
      parameters:
        - name: tx_hash
          in: query
          description: Hash of the transaction
          required: true
          style: form
          explode: false
          schema:
            type: string
            example: 2B4F732E12D5D5AF1F907AD03B199167A718EDC6201DE5713143AB80990420CB
      responses:
        '200':
          description: Successful operation
          content:
            application/json; charset=utf-8:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/ZETATxStatus'
        '400':
          description: Invalid parameters
        '401':
          description: Unauthorized
        '500':
          description: Internal server error
  /zeta/transaction/decode:
    get:
      tags:
        - ZetaChain (ZETA)
      summary: Transaction Decoding
      description: Decode a transaction
      operationId: getZetaTxDecoding
      parameters:
        - name: tx_serialized
          in: query
          description: Raw transaction to decode
          required: true
          style: form
          explode: false
          schema:
            type: string
            example: 0aa1010a9e010a232f636f736d6f732e7374616b696e672e763162657461312e4d736744656c656761746512770a2d636f736d6f733139633966646834383876716a636c6c74777036386a6d3530796477796833366a7165617465761234636f736d6f7376616c6f706572313679733065673933356d6b71706b79646b6766636a39616765326175386c39366e61657265391a100a057561746f6d12073130303030303012670a500a460a1f2f636f736d6f732e63727970746f2e736563703235366b312e5075624b657912230a21039ce47b2a813d13876131a9c3be77e8c4afa49e948744abbee11f939e2a420f4612040a020801186612130a0d0a057561746f6d1204353030301080897a1a1174686574612d746573746e65742d30303120e0cd2a
      responses:
        '200':
          description: Successful operation
          content:
            application/json; charset=utf-8:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/ZETATxDecoding'
        '400':
          description: Invalid parameters
        '401':
          description: Unauthorized
        '500':
          description: Internal server error
  /kava/stakes:
    get:
      tags:
        - Kava (KAVA)
      summary: Stakes
      description: Get the status of KAVA stakes. Units are in uKAVA (10⁻⁶ KAVA).
      operationId: getKavaStakes
      parameters:
        - $ref: '#/components/parameters/KAVAValidatorsParam'
        - $ref: '#/components/parameters/KAVADelegatorsParam'
        - $ref: '#/components/parameters/AccountsParam'
        - $ref: '#/components/parameters/KAVAPrecisionParam'
      responses:
        '200':
          description: Successful operation
          content:
            application/json; charset=utf-8:
              schema:
                type: object
                required:
                  - data
                properties:
                  data:
                    type: array
                    items:
                      $ref: '#/components/schemas/KAVAStake'
        '400':
          description: Invalid parameters
        '401':
          description: Unauthorized
        '500':
          description: Internal server error
    post:
      tags:
        - Kava (KAVA)
      summary: Create stakes
      description: Link a Kava stake to a Kiln account
      operationId: postKavaStakes
      requestBody:
        description: Stakes to create
        required: true
        content:
          application/json; charset=utf-8:
            schema:
              $ref: '#/components/schemas/PostKAVAStakesPayload'
      responses:
        '201':
          description: Successful operation
          content:
            application/json; charset=utf-8:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/CoreStake'
        '400':
          description: Invalid parameters
        '401':
          description: Unauthorized
        '500':
          description: Internal server error
  /kava/rewards:
    get:
      tags:
        - Kava (KAVA)
      summary: Rewards
      description: Get historical rewards by day of KAVA stakes. Units are in uKAVA (10⁻⁶ KAVA).
      operationId: getKavaRewards
      parameters:
        - $ref: '#/components/parameters/KAVAValidatorsParam'
        - $ref: '#/components/parameters/KAVADelegatorsParam'
        - $ref: '#/components/parameters/AccountsParam'
        - $ref: '#/components/parameters/StartDateParam'
        - $ref: '#/components/parameters/EndDateParam'
        - $ref: '#/components/parameters/IncludeUSDParam'
        - $ref: '#/components/parameters/KAVAPrecisionParam'
      responses:
        '200':
          description: Successful operation
          content:
            application/json; charset=utf-8:
              schema:
                type: object
                required:
                  - data
                properties:
                  data:
                    type: array
                    items:
                      $ref: '#/components/schemas/KAVAReward'
              examples:
                rewards:
                  value:
                    data:
                      - date: '2023-01-15'
                        rewards: '3575891083876864200000'
                        active_balance: '6300000000000000000000000'
                        net_apy: 3.42
                        rewards_usd: '12'
                        stake_balance_usd: '25400'
                      - date: '2023-01-16'
                        rewards: '3575891083876864200000'
                        active_balance: '6300000000000000000000000'
                        net_apy: 3.4
                        rewards_usd: '13'
                        stake_balance_usd: '25412'
        '400':
          description: Invalid parameters
        '401':
          description: Unauthorized
        '500':
          description: Internal server error
  /kava/operations:
    get:
      tags:
        - Kava (KAVA)
      summary: Operations
      description: Get the operations of Kava stakes. Units are in uKAVA (10⁻⁶ KAVA).
      operationId: getKavaOperations
      parameters:
        - $ref: '#/components/parameters/KAVAValidatorsParam'
        - $ref: '#/components/parameters/KAVADelegatorsParam'
        - $ref: '#/components/parameters/KAVAAuthzFlagParam'
        - $ref: '#/components/parameters/AccountsParam'
        - $ref: '#/components/parameters/StartDateParam'
        - $ref: '#/components/parameters/EndDateParam'
        - $ref: '#/components/parameters/KAVAPrecisionParam'
      responses:
        '200':
          description: Successful operation
          content:
            application/json; charset=utf-8:
              schema:
                type: object
                required:
                  - data
                properties:
                  data:
                    type: array
                    items:
                      anyOf:
                        - $ref: '#/components/schemas/KAVAOperationDelegate'
                        - $ref: '#/components/schemas/KAVAOperationUndelegate'
                        - $ref: '#/components/schemas/KAVAOperationRedelegate'
                        - $ref: '#/components/schemas/KAVAOperationWithdrawRewards'
                        - $ref: '#/components/schemas/KAVAOperationGrant'
                        - $ref: '#/components/schemas/KAVAOperationExec'
                      discriminator:
                        propertyName: type
                        mapping:
                          staking.MsgDelegate: '#/components/schemas/KAVAOperationDelegate'
                          staking.MsgUndelegate: '#/components/schemas/KAVAOperationUndelegate'
                          staking.MsgBeginRedelegate: '#/components/schemas/KAVAOperationRedelegate'
                          distr.MsgWithdrawDelegatorReward: '#/components/schemas/KAVAOperationWithdrawRewards'
                          authz.Grant: '#/components/schemas/KAVAOperationGrant'
                          authz.Exec: '#/components/schemas/KAVAOperationExec'
        '400':
          description: Invalid parameters
        '401':
          description: Unauthorized
        '500':
          description: Internal server error
  /kava/network-stats:
    get:
      tags:
        - Kava (KAVA)
      summary: Network Stats
      description: Get some network statistics on Kava
      operationId: getKavaNetworkStats
      responses:
        '200':
          description: Successful operation
          content:
            application/json; charset=utf-8:
              schema:
                type: object
                required:
                  - data
                properties:
                  data:
                    $ref: '#/components/schemas/KAVANetworkStats'
        '401':
          description: Unauthorized
        '500':
          description: Internal server error
  /kava/reports:
    get:
      tags:
        - Kava (KAVA)
      summary: Reports
      description: Get reports on Kava staking
      operationId: getKavaReports
      parameters:
        - $ref: '#/components/parameters/KAVADelegatorsParam'
        - $ref: '#/components/parameters/KAVAValidatorsParam'
        - $ref: '#/components/parameters/AccountsParam'
      responses:
        '200':
          description: Successful operation
          content:
            application/octet-stream:
              schema:
                type: string
                format: binary
                example: ...
        '400':
          description: Invalid parameters
        '401':
          description: Unauthorized
        '500':
          description: Internal server error
  /kava/balance:
    post:
      tags:
        - Kava (KAVA)
      summary: Get balance
      description: Get balance of a Kava account
      operationId: postKavaGetBalance
      requestBody:
        description: Account to query
        required: true
        content:
          application/json; charset=utf-8:
            schema:
              $ref: '#/components/schemas/KAVAGetBalancePayload'
      responses:
        '200':
          description: Successful operation
          content:
            application/json; charset=utf-8:
              schema:
                type: object
                required:
                  - data
                properties:
                  data:
                    type: object
                    required:
                      - amount
                      - denom
                    properties:
                      amount:
                        type: string
                        description: The balance of the account
                        example: '1000000'
                      denom:
                        type: string
                        description: The denomination of the balance
                        example: ukava
        '400':
          description: Invalid parameters
        '401':
          description: Unauthorized
        '500':
          description: Internal server error
  /kava/transaction/stake:
    post:
      tags:
        - Kava (KAVA)
      summary: Stake Transaction
      description: Generates a delegate transaction on Kava
      operationId: postKavaStakeTx
      requestBody:
        description: Transaction to craft
        required: true
        content:
          application/json; charset=utf-8:
            schema:
              $ref: '#/components/schemas/KAVACraftStakeTxPayload'
      responses:
        '200':
          description: Successful operation
          content:
            application/json; charset=utf-8:
              schema:
                type: object
                required:
                  - data
                properties:
                  data:
                    $ref: '#/components/schemas/KAVAStakeUnsignedTx'
        '400':
          description: Invalid parameters
        '401':
          description: Unauthorized
        '500':
          description: Internal server error
  /kava/transaction/withdraw-rewards:
    post:
      tags:
        - Kava (KAVA)
      summary: Withdraw Rewards Transaction
      description: Generates a withdraw rewards transaction on Kava
      operationId: postKavaWithdrawRewardsTx
      requestBody:
        description: Transaction to craft
        required: true
        content:
          application/json; charset=utf-8:
            schema:
              $ref: '#/components/schemas/KAVACraftWithdrawRewardsTxPayload'
      responses:
        '200':
          description: Successful operation
          content:
            application/json; charset=utf-8:
              schema:
                type: object
                required:
                  - data
                properties:
                  data:
                    $ref: '#/components/schemas/KAVAUnsignedTx'
        '400':
          description: Invalid parameters
        '401':
          description: Unauthorized
        '500':
          description: Internal server error
  /kava/transaction/unstake:
    post:
      tags:
        - Kava (KAVA)
      summary: Unstake Transaction
      description: Generates an undelegate transaction on Kava
      operationId: postKavaUnstakeTx
      requestBody:
        description: Transaction to craft
        required: true
        content:
          application/json; charset=utf-8:
            schema:
              $ref: '#/components/schemas/KAVACraftUnstakeTxPayload'
      responses:
        '200':
          description: Successful operation
          content:
            application/json; charset=utf-8:
              schema:
                type: object
                required:
                  - data
                properties:
                  data:
                    $ref: '#/components/schemas/KAVAUnsignedTx'
        '400':
          description: Invalid parameters
        '401':
          description: Unauthorized
        '500':
          description: Internal server error
  /kava/transaction/restake-rewards:
    post:
      tags:
        - Kava (KAVA)
      summary: Restake Rewards Transaction
      description: Generates a restake rewards transaction on Kava
      operationId: postKavaRestakeRewardsTx
      requestBody:
        description: Transaction to craft
        required: true
        content:
          application/json; charset=utf-8:
            schema:
              $ref: '#/components/schemas/KAVACraftRestakeRewardsTxPayload'
      responses:
        '200':
          description: Successful operation
          content:
            application/json; charset=utf-8:
              schema:
                type: object
                required:
                  - data
                properties:
                  data:
                    $ref: '#/components/schemas/KAVAUnsignedTx'
        '400':
          description: Invalid parameters
        '401':
          description: Unauthorized
        '500':
          description: Internal server error
  /kava/transaction/redelegate:
    post:
      tags:
        - Kava (KAVA)
      summary: Redelegate Transaction
      description: Generates a redelegate transaction on Kava to move a stake from a validator to another without going through the 21 days unbonding period.
      operationId: postKavaRedelegateTx
      requestBody:
        description: Transaction to craft
        required: true
        content:
          application/json; charset=utf-8:
            schema:
              $ref: '#/components/schemas/KAVACraftRedelegateTxPayload'
      responses:
        '200':
          description: Successful operation
          content:
            application/json; charset=utf-8:
              schema:
                type: object
                required:
                  - data
                properties:
                  data:
                    $ref: '#/components/schemas/KAVAUnsignedTx'
        '400':
          description: Invalid parameters
        '401':
          description: Unauthorized
        '500':
          description: Internal server error
  /kava/transaction/prepare:
    post:
      tags:
        - Kava (KAVA)
      summary: Prepare Transaction
      description: Prepare an unsigned transaction for broadcast by adding signatures to it
      operationId: postKavaPrepareTx
      requestBody:
        description: Transaction to prepare
        required: true
        content:
          application/json; charset=utf-8:
            schema:
              $ref: '#/components/schemas/KAVAPrepareTxPayload'
      responses:
        '200':
          description: Successful operation
          content:
            application/json; charset=utf-8:
              schema:
                type: object
                required:
                  - data
                properties:
                  data:
                    $ref: '#/components/schemas/KAVASignedTx'
        '400':
          description: Invalid parameters
        '401':
          description: Unauthorized
        '500':
          description: Internal server error
  /kava/transaction/broadcast:
    post:
      tags:
        - Kava (KAVA)
      summary: Broadcast Transaction
      description: Broadcast a signed transaction to the Kava network
      operationId: postKavaBroadcastTx
      requestBody:
        description: Transaction to broadcast
        required: true
        content:
          application/json; charset=utf-8:
            schema:
              $ref: '#/components/schemas/KAVABroadcastTxPayload'
      responses:
        '200':
          description: Successful operation
          content:
            application/json; charset=utf-8:
              schema:
                type: object
                required:
                  - data
                properties:
                  data:
                    $ref: '#/components/schemas/KAVATxHash'
        '400':
          description: Invalid parameters
        '401':
          description: Unauthorized
        '500':
          description: Internal server error
  /kava/transaction/send:
    post:
      tags:
        - Kava (KAVA)
      summary: Send Transaction
      description: Generates a send transaction on Kava
      operationId: postKavaSendTx
      requestBody:
        description: Transaction to craft
        required: true
        content:
          application/json; charset=utf-8:
            schema:
              $ref: '#/components/schemas/KAVACraftSendTxPayload'
      responses:
        '200':
          description: Successful operation
          content:
            application/json; charset=utf-8:
              schema:
                type: object
                required:
                  - data
                properties:
                  data:
                    $ref: '#/components/schemas/KAVAUnsignedTx'
        '400':
          description: Invalid parameters
        '401':
          description: Unauthorized
        '500':
          description: Internal server error
  /kava/transaction/status:
    get:
      tags:
        - Kava (KAVA)
      summary: Transaction Status
      description: Get the status of a transaction
      operationId: getKavaTxStatus
      parameters:
        - name: tx_hash
          in: query
          description: Hash of the transaction
          required: true
          style: form
          explode: false
          schema:
            type: string
            example: 2B4F732E12D5D5AF1F907AD03B199167A718EDC6201DE5713143AB80990420CB
      responses:
        '200':
          description: Successful operation
          content:
            application/json; charset=utf-8:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/KAVATxStatus'
        '400':
          description: Invalid parameters
        '401':
          description: Unauthorized
        '500':
          description: Internal server error
  /kava/transaction/decode:
    get:
      tags:
        - Kava (KAVA)
      summary: Transaction Decoding
      description: Decode a transaction
      operationId: getKavaTxDecoding
      parameters:
        - name: tx_serialized
          in: query
          description: Raw transaction to decode
          required: true
          style: form
          explode: false
          schema:
            type: string
            example: 0aa1010a9e010a232f636f736d6f732e7374616b696e672e763162657461312e4d736744656c656761746512770a2d636f736d6f733139633966646834383876716a636c6c74777036386a6d3530796477796833366a7165617465761234636f736d6f7376616c6f706572313679733065673933356d6b71706b79646b6766636a39616765326175386c39366e61657265391a100a057561746f6d12073130303030303012670a500a460a1f2f636f736d6f732e63727970746f2e736563703235366b312e5075624b657912230a21039ce47b2a813d13876131a9c3be77e8c4afa49e948744abbee11f939e2a420f4612040a020801186612130a0d0a057561746f6d1204353030301080897a1a1174686574612d746573746e65742d30303120e0cd2a
      responses:
        '200':
          description: Successful operation
          content:
            application/json; charset=utf-8:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/KAVATxDecoding'
        '400':
          description: Invalid parameters
        '401':
          description: Unauthorized
        '500':
          description: Internal server error
  /fet/stakes:
    get:
      tags:
        - Fetch.ai (FET)
      summary: Stakes
      description: Get the status of FET stakes. Units are in uFET (10⁻⁶ FET).
      operationId: getFetchStakes
      parameters:
        - $ref: '#/components/parameters/FETValidatorsParam'
        - $ref: '#/components/parameters/FETDelegatorsParam'
        - $ref: '#/components/parameters/AccountsParam'
        - $ref: '#/components/parameters/FETPrecisionParam'
      responses:
        '200':
          description: Successful operation
          content:
            application/json; charset=utf-8:
              schema:
                type: object
                required:
                  - data
                properties:
                  data:
                    type: array
                    items:
                      $ref: '#/components/schemas/FETStake'
        '400':
          description: Invalid parameters
        '401':
          description: Unauthorized
        '500':
          description: Internal server error
    post:
      tags:
        - Fetch.ai (FET)
      summary: Create stakes
      description: Link a FETCH stake to a Kiln account
      operationId: postFetchStakes
      requestBody:
        description: Stakes to create
        required: true
        content:
          application/json; charset=utf-8:
            schema:
              $ref: '#/components/schemas/PostFETStakesPayload'
      responses:
        '201':
          description: Successful operation
          content:
            application/json; charset=utf-8:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/CoreStake'
        '400':
          description: Invalid parameters
        '401':
          description: Unauthorized
        '500':
          description: Internal server error
  /fet/rewards:
    get:
      tags:
        - Fetch.ai (FET)
      summary: Rewards
      description: Get historical rewards by day of FETCH stakes. Units are in uFET (10⁻⁶ FET).
      operationId: getFetchRewards
      parameters:
        - $ref: '#/components/parameters/FETValidatorsParam'
        - $ref: '#/components/parameters/FETDelegatorsParam'
        - $ref: '#/components/parameters/AccountsParam'
        - $ref: '#/components/parameters/StartDateParam'
        - $ref: '#/components/parameters/EndDateParam'
        - $ref: '#/components/parameters/IncludeUSDParam'
        - $ref: '#/components/parameters/FETPrecisionParam'
      responses:
        '200':
          description: Successful operation
          content:
            application/json; charset=utf-8:
              schema:
                type: object
                required:
                  - data
                properties:
                  data:
                    type: array
                    items:
                      $ref: '#/components/schemas/FETReward'
              examples:
                rewards:
                  value:
                    data:
                      - date: '2024-04-02'
                        balance: '1241363393778'
                        rewards: '304836574'
                        net_apy: 8.96
                        balance_usd: 3594430.8409594875
                        rewards_usd: 882.6698036449283
                      - date: '2024-04-03'
                        balance: '1241726584155'
                        rewards: '303185463'
                        net_apy: 8.91
                        balance_usd: 3271315.486798869
                        rewards_usd: 798.7388795087446
        '400':
          description: Invalid parameters
        '401':
          description: Unauthorized
        '500':
          description: Internal server error
  /fet/operations:
    get:
      tags:
        - Fetch.ai (FET)
      summary: Operations
      description: Get the operations of FET stakes. Units are in uFET (10⁻⁶ FET).
      operationId: getFetchOperations
      parameters:
        - $ref: '#/components/parameters/FETValidatorsParam'
        - $ref: '#/components/parameters/FETDelegatorsParam'
        - $ref: '#/components/parameters/FETAuthzFlagParam'
        - $ref: '#/components/parameters/AccountsParam'
        - $ref: '#/components/parameters/StartDateParam'
        - $ref: '#/components/parameters/EndDateParam'
        - $ref: '#/components/parameters/FETPrecisionParam'
      responses:
        '200':
          description: Successful operation
          content:
            application/json; charset=utf-8:
              schema:
                type: object
                properties:
                  data:
                    type: array
                    items:
                      anyOf:
                        - $ref: '#/components/schemas/FETOperationDelegate'
                        - $ref: '#/components/schemas/FETOperationUndelegate'
                        - $ref: '#/components/schemas/FETOperationRedelegate'
                        - $ref: '#/components/schemas/FETOperationWithdrawRewards'
                        - $ref: '#/components/schemas/FETOperationGrant'
                        - $ref: '#/components/schemas/FETOperationExec'
                      discriminator:
                        propertyName: type
                        mapping:
                          staking.MsgDelegate: '#/components/schemas/FETOperationDelegate'
                          staking.MsgUndelegate: '#/components/schemas/FETOperationUndelegate'
                          staking.MsgBeginRedelegate: '#/components/schemas/FETOperationRedelegate'
                          distr.MsgWithdrawDelegatorReward: '#/components/schemas/FETOperationWithdrawRewards'
                          authz.Grant: '#/components/schemas/FETOperationGrant'
                          authz.Exec: '#/components/schemas/FETOperationExec'
        '400':
          description: Invalid parameters
        '401':
          description: Unauthorized
        '500':
          description: Internal server error
  /fet/network-stats:
    get:
      tags:
        - Fetch.ai (FET)
      summary: Network Stats
      description: Get some network statistics on Fetch
      operationId: getFetchNetworkStats
      responses:
        '200':
          description: Successful operation
          content:
            application/json; charset=utf-8:
              schema:
                type: object
                required:
                  - data
                properties:
                  data:
                    $ref: '#/components/schemas/FETNetworkStats'
        '401':
          description: Unauthorized
        '500':
          description: Internal server error
  /fet/reports:
    get:
      tags:
        - Fetch.ai (FET)
      summary: Reports
      description: Get reports on Cosmos staking
      operationId: getFetchReports
      parameters:
        - $ref: '#/components/parameters/FETDelegatorsParam'
        - $ref: '#/components/parameters/FETValidatorsParam'
        - $ref: '#/components/parameters/AccountsParam'
      responses:
        '200':
          description: Successful operation
          content:
            application/octet-stream:
              schema:
                type: string
                format: binary
                example: ...
        '400':
          description: Invalid parameters
        '401':
          description: Unauthorized
        '500':
          description: Internal server error
  /fet/balance:
    post:
      tags:
        - Fetch.ai (FET)
      summary: Get balance
      description: Get balance of a Fet account
      operationId: postFetGetBalance
      requestBody:
        description: Account to query
        required: true
        content:
          application/json; charset=utf-8:
            schema:
              $ref: '#/components/schemas/FETGetBalancePayload'
      responses:
        '200':
          description: Successful operation
          content:
            application/json; charset=utf-8:
              schema:
                type: object
                required:
                  - data
                properties:
                  data:
                    type: object
                    required:
                      - amount
                      - denom
                    properties:
                      amount:
                        type: string
                        description: The balance of the account
                        example: '1000000'
                      denom:
                        type: string
                        description: The denomination of the balance
                        example: afet
        '400':
          description: Invalid parameters
        '401':
          description: Unauthorized
        '500':
          description: Internal server error
  /fet/transaction/stake:
    post:
      tags:
        - Fetch.ai (FET)
      summary: Stake Transaction
      description: Generates a delegate transaction on Fetch
      operationId: postFetchStakeTx
      requestBody:
        description: Transaction to craft
        required: true
        content:
          application/json; charset=utf-8:
            schema:
              $ref: '#/components/schemas/FETCraftStakeTxPayload'
      responses:
        '200':
          description: Successful operation
          content:
            application/json; charset=utf-8:
              schema:
                type: object
                required:
                  - data
                properties:
                  data:
                    $ref: '#/components/schemas/FETStakeUnsignedTx'
        '400':
          description: Invalid parameters
        '401':
          description: Unauthorized
        '500':
          description: Internal server error
  /fet/transaction/withdraw-rewards:
    post:
      tags:
        - Fetch.ai (FET)
      summary: Withdraw Rewards Transaction
      description: Generates a withdraw rewards transaction on Fetch
      operationId: postFetchWithdrawRewardsTx
      requestBody:
        description: Transaction to craft
        required: true
        content:
          application/json; charset=utf-8:
            schema:
              $ref: '#/components/schemas/FETCraftWithdrawRewardsTxPayload'
      responses:
        '200':
          description: Successful operation
          content:
            application/json; charset=utf-8:
              schema:
                type: object
                required:
                  - data
                properties:
                  data:
                    $ref: '#/components/schemas/FETUnsignedTx'
        '400':
          description: Invalid parameters
        '401':
          description: Unauthorized
        '500':
          description: Internal server error
  /fet/transaction/restake-rewards:
    post:
      tags:
        - Fetch.ai (FET)
      summary: Restake Rewards Transaction
      description: Generates a restake rewards transaction on Fetch
      operationId: postFetchRestakeRewardsTx
      requestBody:
        description: Transaction to craft
        required: true
        content:
          application/json; charset=utf-8:
            schema:
              $ref: '#/components/schemas/FETCraftRestakeRewardsTxPayload'
      responses:
        '200':
          description: Successful operation
          content:
            application/json; charset=utf-8:
              schema:
                type: object
                required:
                  - data
                properties:
                  data:
                    $ref: '#/components/schemas/FETUnsignedTx'
        '400':
          description: Invalid parameters
        '401':
          description: Unauthorized
        '500':
          description: Internal server error
  /fet/transaction/unstake:
    post:
      tags:
        - Fetch.ai (FET)
      summary: Unstake Transaction
      description: Generates an undelegate transaction on Fetch
      operationId: postFetchUnstakeTx
      requestBody:
        description: Transaction to craft
        required: true
        content:
          application/json; charset=utf-8:
            schema:
              $ref: '#/components/schemas/FETCraftUnstakeTxPayload'
      responses:
        '200':
          description: Successful operation
          content:
            application/json; charset=utf-8:
              schema:
                type: object
                required:
                  - data
                properties:
                  data:
                    $ref: '#/components/schemas/FETUnsignedTx'
        '400':
          description: Invalid parameters
        '401':
          description: Unauthorized
        '500':
          description: Internal server error
  /fet/transaction/send:
    post:
      tags:
        - Fetch.ai (FET)
      summary: Send Transaction
      description: Generates a send transaction on Fetch
      operationId: postFetchSendTx
      requestBody:
        description: Transaction to craft
        required: true
        content:
          application/json; charset=utf-8:
            schema:
              $ref: '#/components/schemas/FETCraftSendTxPayload'
      responses:
        '200':
          description: Successful operation
          content:
            application/json; charset=utf-8:
              schema:
                type: object
                required:
                  - data
                properties:
                  data:
                    $ref: '#/components/schemas/FETUnsignedTx'
        '400':
          description: Invalid parameters
        '401':
          description: Unauthorized
        '500':
          description: Internal server error
  /fet/transaction/redelegate:
    post:
      tags:
        - Fetch.ai (FET)
      summary: Redelegate Transaction
      description: Generates a redelegate transaction on Fetch to move a stake from a validator to another without going through the 21 days unbonding period.
      operationId: postFetchRedelegateTx
      requestBody:
        description: Transaction to craft
        required: true
        content:
          application/json; charset=utf-8:
            schema:
              $ref: '#/components/schemas/FETCraftRedelegateTxPayload'
      responses:
        '200':
          description: Successful operation
          content:
            application/json; charset=utf-8:
              schema:
                type: object
                required:
                  - data
                properties:
                  data:
                    $ref: '#/components/schemas/FETUnsignedTx'
        '400':
          description: Invalid parameters
        '401':
          description: Unauthorized
        '500':
          description: Internal server error
  /fet/transaction/prepare:
    post:
      tags:
        - Fetch.ai (FET)
      summary: Prepare Transaction
      description: Prepare an unsigned transaction for broadcast by adding signatures to it
      operationId: postFetchPrepareTx
      requestBody:
        description: Transaction to prepare
        required: true
        content:
          application/json; charset=utf-8:
            schema:
              $ref: '#/components/schemas/FETPrepareTxPayload'
      responses:
        '200':
          description: Successful operation
          content:
            application/json; charset=utf-8:
              schema:
                type: object
                required:
                  - data
                properties:
                  data:
                    $ref: '#/components/schemas/FETSignedTx'
        '400':
          description: Invalid parameters
        '401':
          description: Unauthorized
        '500':
          description: Internal server error
  /fet/transaction/broadcast:
    post:
      tags:
        - Fetch.ai (FET)
      summary: Broadcast Transaction
      description: Broadcast a signed transaction to the Fetch network
      operationId: postFetchBroadcastTx
      requestBody:
        description: Transaction to broadcast
        required: true
        content:
          application/json; charset=utf-8:
            schema:
              $ref: '#/components/schemas/FETBroadcastTxPayload'
      responses:
        '200':
          description: Successful operation
          content:
            application/json; charset=utf-8:
              schema:
                type: object
                required:
                  - data
                properties:
                  data:
                    $ref: '#/components/schemas/FETTxHash'
        '400':
          description: Invalid parameters
        '401':
          description: Unauthorized
        '500':
          description: Internal server error
  /fet/transaction/status:
    get:
      tags:
        - Fetch.ai (FET)
      summary: Transaction Status
      description: Get the status of a transaction
      operationId: getFetchTxStatus
      parameters:
        - name: tx_hash
          in: query
          description: Hash of the transaction
          required: true
          style: form
          explode: false
          schema:
            type: string
            example: 2B4F732E12D5D5AF1F907AD03B199167A718EDC6201DE5713143AB80990420CB
      responses:
        '200':
          description: Successful operation
          content:
            application/json; charset=utf-8:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/FETTxStatus'
        '400':
          description: Invalid parameters
        '401':
          description: Unauthorized
        '500':
          description: Internal server error
  /fet/transaction/decode:
    get:
      tags:
        - Fetch.ai (FET)
      summary: Transaction Decoding
      description: Decode a transaction
      operationId: getFetchTxDecoding
      parameters:
        - name: tx_serialized
          in: query
          description: Raw transaction to decode
          required: true
          style: form
          explode: false
          schema:
            type: string
            example: 0aa1010a9e010a232f636f736d6f732e7374616b696e672e763162657461312e4d736744656c656761746512770a2d636f736d6f733139633966646834383876716a636c6c74777036386a6d3530796477796833366a7165617465761234636f736d6f7376616c6f706572313679733065673933356d6b71706b79646b6766636a39616765326175386c39366e61657265391a100a057561746f6d12073130303030303012670a500a460a1f2f636f736d6f732e63727970746f2e736563703235366b312e5075624b657912230a21039ce47b2a813d13876131a9c3be77e8c4afa49e948744abbee11f939e2a420f4612040a020801186612130a0d0a057561746f6d1204353030301080897a1a1174686574612d746573746e65742d30303120e0cd2a
      responses:
        '200':
          description: Successful operation
          content:
            application/json; charset=utf-8:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/FETTxDecoding'
        '400':
          description: Invalid parameters
        '401':
          description: Unauthorized
        '500':
          description: Internal server error
  /inj/stakes:
    get:
      tags:
        - Injective (INJ)
      summary: Stakes
      description: Get the status of INJ stakes. Units are in uINJ (10⁻⁶ INJ).
      operationId: getInjStakes
      parameters:
        - $ref: '#/components/parameters/INJValidatorsParam'
        - $ref: '#/components/parameters/INJDelegatorsParam'
        - $ref: '#/components/parameters/AccountsParam'
        - $ref: '#/components/parameters/INJPrecisionParam'
      responses:
        '200':
          description: Successful operation
          content:
            application/json; charset=utf-8:
              schema:
                type: object
                required:
                  - data
                properties:
                  data:
                    type: array
                    items:
                      $ref: '#/components/schemas/INJStake'
        '400':
          description: Invalid parameters
        '401':
          description: Unauthorized
        '500':
          description: Internal server error
    post:
      tags:
        - Injective (INJ)
      summary: Create stakes
      description: Link a Inj stake to a Kiln account
      operationId: postInjStakes
      requestBody:
        description: Stakes to create
        required: true
        content:
          application/json; charset=utf-8:
            schema:
              $ref: '#/components/schemas/PostINJStakesPayload'
      responses:
        '201':
          description: Successful operation
          content:
            application/json; charset=utf-8:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/CoreStake'
        '400':
          description: Invalid parameters
        '401':
          description: Unauthorized
        '500':
          description: Internal server error
  /inj/rewards:
    get:
      tags:
        - Injective (INJ)
      summary: Rewards
      description: Get historical rewards by day of Inj stakes. Units are in uINJ (10⁻⁶ INJ).
      operationId: getInjRewards
      parameters:
        - $ref: '#/components/parameters/INJValidatorsParam'
        - $ref: '#/components/parameters/INJDelegatorsParam'
        - $ref: '#/components/parameters/AccountsParam'
        - $ref: '#/components/parameters/StartDateParam'
        - $ref: '#/components/parameters/EndDateParam'
        - $ref: '#/components/parameters/IncludeUSDParam'
        - $ref: '#/components/parameters/INJPrecisionParam'
      responses:
        '200':
          description: Successful operation
          content:
            application/json; charset=utf-8:
              schema:
                type: object
                required:
                  - data
                properties:
                  data:
                    type: array
                    items:
                      $ref: '#/components/schemas/INJReward'
              examples:
                rewards:
                  value:
                    data:
                      - date: '2024-04-02'
                        balance: '1241363393778'
                        rewards: '304836574'
                        net_apy: 8.96
                        balance_usd: 3594430.8409594875
                        rewards_usd: 882.6698036449283
                      - date: '2024-04-03'
                        balance: '1241726584155'
                        rewards: '303185463'
                        net_apy: 8.91
                        balance_usd: 3271315.486798869
                        rewards_usd: 798.7388795087446
        '400':
          description: Invalid parameters
        '401':
          description: Unauthorized
        '500':
          description: Internal server error
  /inj/operations:
    get:
      tags:
        - Injective (INJ)
      summary: Operations
      description: Get the operations of INJ stakes. Units are in uINJ (10⁻⁶ INJ).
      operationId: getInjOperations
      parameters:
        - $ref: '#/components/parameters/INJValidatorsParam'
        - $ref: '#/components/parameters/INJDelegatorsParam'
        - $ref: '#/components/parameters/INJAuthzFlagParam'
        - $ref: '#/components/parameters/AccountsParam'
        - $ref: '#/components/parameters/StartDateParam'
        - $ref: '#/components/parameters/EndDateParam'
        - $ref: '#/components/parameters/INJPrecisionParam'
      responses:
        '200':
          description: Successful operation
          content:
            application/json; charset=utf-8:
              schema:
                type: object
                properties:
                  data:
                    type: array
                    items:
                      anyOf:
                        - $ref: '#/components/schemas/INJOperationDelegate'
                        - $ref: '#/components/schemas/INJOperationUndelegate'
                        - $ref: '#/components/schemas/INJOperationRedelegate'
                        - $ref: '#/components/schemas/INJOperationWithdrawRewards'
                        - $ref: '#/components/schemas/INJOperationGrant'
                        - $ref: '#/components/schemas/INJOperationExec'
                      discriminator:
                        propertyName: type
                        mapping:
                          staking.MsgDelegate: '#/components/schemas/INJOperationDelegate'
                          staking.MsgUndelegate: '#/components/schemas/INJOperationUndelegate'
                          staking.MsgBeginRedelegate: '#/components/schemas/INJOperationRedelegate'
                          distr.MsgWithdrawDelegatorReward: '#/components/schemas/INJOperationWithdrawRewards'
                          authz.Grant: '#/components/schemas/INJOperationGrant'
                          authz.Exec: '#/components/schemas/INJOperationExec'
        '400':
          description: Invalid parameters
        '401':
          description: Unauthorized
        '500':
          description: Internal server error
  /inj/network-stats:
    get:
      tags:
        - Injective (INJ)
      summary: Network Stats
      description: Get some network statistics on Inj
      operationId: getInjNetworkStats
      responses:
        '200':
          description: Successful operation
          content:
            application/json; charset=utf-8:
              schema:
                type: object
                required:
                  - data
                properties:
                  data:
                    $ref: '#/components/schemas/INJNetworkStats'
        '401':
          description: Unauthorized
        '500':
          description: Internal server error
  /inj/reports:
    get:
      tags:
        - Injective (INJ)
      summary: Reports
      description: Get reports on Cosmos staking
      operationId: getInjReports
      parameters:
        - $ref: '#/components/parameters/INJDelegatorsParam'
        - $ref: '#/components/parameters/INJValidatorsParam'
        - $ref: '#/components/parameters/AccountsParam'
      responses:
        '200':
          description: Successful operation
          content:
            application/octet-stream:
              schema:
                type: string
                format: binary
                example: ...
        '400':
          description: Invalid parameters
        '401':
          description: Unauthorized
        '500':
          description: Internal server error
  /inj/transaction/stake:
    post:
      tags:
        - Injective (INJ)
      summary: Stake Transaction
      description: Generates a delegate transaction on Inj
      operationId: postInjStakeTx
      requestBody:
        description: Transaction to craft
        required: true
        content:
          application/json; charset=utf-8:
            schema:
              $ref: '#/components/schemas/INJCraftStakeTxPayload'
      responses:
        '200':
          description: Successful operation
          content:
            application/json; charset=utf-8:
              schema:
                type: object
                required:
                  - data
                properties:
                  data:
                    $ref: '#/components/schemas/INJStakeUnsignedTx'
        '400':
          description: Invalid parameters
        '401':
          description: Unauthorized
        '500':
          description: Internal server error
  /inj/transaction/withdraw-rewards:
    post:
      tags:
        - Injective (INJ)
      summary: Withdraw Rewards Transaction
      description: Generates a withdraw rewards transaction on Inj
      operationId: postInjWithdrawRewardsTx
      requestBody:
        description: Transaction to craft
        required: true
        content:
          application/json; charset=utf-8:
            schema:
              $ref: '#/components/schemas/INJCraftWithdrawRewardsTxPayload'
      responses:
        '200':
          description: Successful operation
          content:
            application/json; charset=utf-8:
              schema:
                type: object
                required:
                  - data
                properties:
                  data:
                    $ref: '#/components/schemas/INJUnsignedTx'
        '400':
          description: Invalid parameters
        '401':
          description: Unauthorized
        '500':
          description: Internal server error
  /inj/transaction/unstake:
    post:
      tags:
        - Injective (INJ)
      summary: Unstake Transaction
      description: Generates an undelegate transaction on Inj
      operationId: postInjUnstakeTx
      requestBody:
        description: Transaction to craft
        required: true
        content:
          application/json; charset=utf-8:
            schema:
              $ref: '#/components/schemas/INJCraftUnstakeTxPayload'
      responses:
        '200':
          description: Successful operation
          content:
            application/json; charset=utf-8:
              schema:
                type: object
                required:
                  - data
                properties:
                  data:
                    $ref: '#/components/schemas/INJUnsignedTx'
        '400':
          description: Invalid parameters
        '401':
          description: Unauthorized
        '500':
          description: Internal server error
  /inj/transaction/redelegate:
    post:
      tags:
        - Injective (INJ)
      summary: Redelegate Transaction
      description: Generates a redelegate transaction on Inj to move a stake from a validator to another without going through the 21 days unbonding period.
      operationId: postInjRedelegateTx
      requestBody:
        description: Transaction to craft
        required: true
        content:
          application/json; charset=utf-8:
            schema:
              $ref: '#/components/schemas/INJCraftRedelegateTxPayload'
      responses:
        '200':
          description: Successful operation
          content:
            application/json; charset=utf-8:
              schema:
                type: object
                required:
                  - data
                properties:
                  data:
                    $ref: '#/components/schemas/INJUnsignedTx'
        '400':
          description: Invalid parameters
        '401':
          description: Unauthorized
        '500':
          description: Internal server error
  /inj/transaction/prepare:
    post:
      tags:
        - Injective (INJ)
      summary: Prepare Transaction
      description: Prepare an unsigned transaction for broadcast by adding signatures to it
      operationId: postInjPrepareTx
      requestBody:
        description: Transaction to prepare
        required: true
        content:
          application/json; charset=utf-8:
            schema:
              $ref: '#/components/schemas/INJPrepareTxPayload'
      responses:
        '200':
          description: Successful operation
          content:
            application/json; charset=utf-8:
              schema:
                type: object
                required:
                  - data
                properties:
                  data:
                    $ref: '#/components/schemas/INJSignedTx'
        '400':
          description: Invalid parameters
        '401':
          description: Unauthorized
        '500':
          description: Internal server error
  /inj/transaction/broadcast:
    post:
      tags:
        - Injective (INJ)
      summary: Broadcast Transaction
      description: Broadcast a signed transaction to the Inj network
      operationId: postInjBroadcastTx
      requestBody:
        description: Transaction to broadcast
        required: true
        content:
          application/json; charset=utf-8:
            schema:
              $ref: '#/components/schemas/INJBroadcastTxPayload'
      responses:
        '200':
          description: Successful operation
          content:
            application/json; charset=utf-8:
              schema:
                type: object
                required:
                  - data
                properties:
                  data:
                    $ref: '#/components/schemas/INJTxHash'
        '400':
          description: Invalid parameters
        '401':
          description: Unauthorized
        '500':
          description: Internal server error
  /inj/transaction/status:
    get:
      tags:
        - Injective (INJ)
      summary: Transaction Status
      description: Get the status of a transaction
      operationId: getInjTxStatus
      parameters:
        - name: tx_hash
          in: query
          description: Hash of the transaction
          required: true
          style: form
          explode: false
          schema:
            type: string
            example: 2B4F732E12D5D5AF1F907AD03B199167A718EDC6201DE5713143AB80990420CB
      responses:
        '200':
          description: Successful operation
          content:
            application/json; charset=utf-8:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/INJTxStatus'
        '400':
          description: Invalid parameters
        '401':
          description: Unauthorized
        '500':
          description: Internal server error
  /inj/transaction/decode:
    get:
      tags:
        - Injective (INJ)
      summary: Transaction Decoding
      description: Decode a transaction
      operationId: getInjTxDecoding
      parameters:
        - name: tx_serialized
          in: query
          description: Raw transaction to decode
          required: true
          style: form
          explode: false
          schema:
            type: string
            example: 0aa1010a9e010a232f636f736d6f732e7374616b696e672e763162657461312e4d736744656c656761746512770a2d636f736d6f733139633966646834383876716a636c6c74777036386a6d3530796477796833366a7165617465761234636f736d6f7376616c6f706572313679733065673933356d6b71706b79646b6766636a39616765326175386c39366e61657265391a100a057561746f6d12073130303030303012670a500a460a1f2f636f736d6f732e63727970746f2e736563703235366b312e5075624b657912230a21039ce47b2a813d13876131a9c3be77e8c4afa49e948744abbee11f939e2a420f4612040a020801186612130a0d0a057561746f6d1204353030301080897a1a1174686574612d746573746e65742d30303120e0cd2a
      responses:
        '200':
          description: Successful operation
          content:
            application/json; charset=utf-8:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/INJTxDecoding'
        '400':
          description: Invalid parameters
        '401':
          description: Unauthorized
        '500':
          description: Internal server error
  /ton/stakes:
    get:
      tags:
        - The Open Network (TON)
      summary: Stakes
      description: Get the status of TON stakes
      operationId: getTonStakes
      parameters:
        - $ref: '#/components/parameters/TONNominatorsParam'
        - $ref: '#/components/parameters/TONPoolsParam'
        - $ref: '#/components/parameters/AccountsParam'
      responses:
        '200':
          description: Successful operation
          content:
            application/json; charset=utf-8:
              schema:
                type: object
                required:
                  - data
                properties:
                  data:
                    type: array
                    items:
                      oneOf:
                        - $ref: '#/components/schemas/TONStake'
        '400':
          description: Invalid parameters
        '401':
          description: Unauthorized
        '500':
          description: Internal server error
    post:
      tags:
        - The Open Network (TON)
      summary: Create stakes
      description: Link an TON stake to a Kiln account
      operationId: postTonStakes
      requestBody:
        description: Stakes to create
        required: true
        content:
          application/json; charset=utf-8:
            schema:
              $ref: '#/components/schemas/TONPostStakesPayload'
      responses:
        '201':
          description: Successful operation
          content:
            application/json; charset=utf-8:
              schema:
                type: object
                required:
                  - data
                properties:
                  data:
                    $ref: '#/components/schemas/CoreStake'
        '400':
          description: Invalid parameters
        '401':
          description: Unauthorized
        '500':
          description: Internal server error
  /ton/rewards:
    get:
      tags:
        - The Open Network (TON)
      summary: Rewards
      description: Get historical rewards by day of TON stakes. Units are in nanoton (10⁻⁹ TON).
      operationId: getTonRewards
      parameters:
        - $ref: '#/components/parameters/TONNominatorsParam'
        - $ref: '#/components/parameters/TONPoolsParam'
        - $ref: '#/components/parameters/AccountsParam'
        - $ref: '#/components/parameters/StartDateParam'
        - $ref: '#/components/parameters/TONRewardsFormatParam'
        - $ref: '#/components/parameters/EndDateParam'
        - $ref: '#/components/parameters/IncludeUSDParam'
      responses:
        '200':
          description: Successful operation
          content:
            application/json; charset=utf-8:
              schema:
                type: object
                required:
                  - data
                properties:
                  data:
                    type: array
                    items:
                      oneOf:
                        - $ref: '#/components/schemas/TONRewardByDay'
                        - $ref: '#/components/schemas/TONRewardByEpoch'
        '400':
          description: Invalid parameters
        '401':
          description: Unauthorized
        '500':
          description: Internal server error
  /ton/network-stats:
    get:
      tags:
        - The Open Network (TON)
      summary: Network Stats
      description: Get some network statistics on The Open Network
      operationId: getTonNetworkStats
      responses:
        '200':
          description: Successful operation
          content:
            application/json; charset=utf-8:
              schema:
                type: object
                required:
                  - data
                properties:
                  data:
                    $ref: '#/components/schemas/TONNetworkStats'
        '401':
          description: Unauthorized
        '500':
          description: Internal server error
  /ton/reports:
    get:
      tags:
        - The Open Network (TON)
      summary: Reports
      description: Get reports on The Open Network
      operationId: getTonReports
      parameters:
        - $ref: '#/components/parameters/TONNominatorsParam'
        - $ref: '#/components/parameters/TONPoolsParam'
        - $ref: '#/components/parameters/AccountsParam'
      responses:
        '200':
          description: Successful operation
          content:
            application/octet-stream:
              schema:
                type: string
                format: binary
                example: ...
        '400':
          description: Invalid parameters
        '401':
          description: Unauthorized
        '500':
          description: Internal server error
  /ton/wallet-info:
    get:
      tags:
        - The Open Network (TON)
      summary: Wallet info
      description: Get the status of a TON wallet
      operationId: getTonWalletInfo
      parameters:
        - $ref: '#/components/parameters/TONGetWalletInfoParam'
      responses:
        '200':
          description: Successful operation
          content:
            application/json; charset=utf-8:
              schema:
                type: object
                required:
                  - data
                properties:
                  data:
                    type: object
                    required:
                      - status
                    properties:
                      status:
                        type: string
                        description: Status of the wallet
                        example: active
        '400':
          description: Invalid parameters
        '401':
          description: Unauthorized
        '500':
          description: Internal server error
  /ton/balance:
    post:
      tags:
        - The Open Network (TON)
      summary: Get balance
      description: Get balance of a TON account
      operationId: postTonGetBalance
      requestBody:
        description: Account to query
        required: true
        content:
          application/json; charset=utf-8:
            schema:
              $ref: '#/components/schemas/TONGetBalancePayload'
      responses:
        '200':
          description: Successful operation
          content:
            application/json; charset=utf-8:
              schema:
                type: object
                required:
                  - data
                properties:
                  data:
                    type: object
                    required:
                      - amount
                      - denom
                    properties:
                      amount:
                        type: string
                        description: The balance of the account
                        example: '1000000'
                      denom:
                        type: string
                        description: The denomination of the balance
                        example: nanoton
        '400':
          description: Invalid parameters
        '401':
          description: Unauthorized
        '500':
          description: Internal server error
  /ton/withdraw-request:
    get:
      tags:
        - The Open Network (TON)
      summary: Withdraw request
      description: Get withdraw request for a pool
      operationId: getTonWithdrawRequest
      parameters:
        - $ref: '#/components/parameters/TONPoolParam'
      responses:
        '200':
          description: Successful operation
          content:
            application/json; charset=utf-8:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/TONWithdrawRequest'
        '400':
          description: Invalid parameters
        '401':
          description: Unauthorized
        '500':
          description: Internal server error
    post:
      tags:
        - The Open Network (TON)
      summary: Withdraw request
      description: Create withdraw request for a pool
      operationId: postTonWithdrawRequest
      requestBody:
        description: Withdraw request to create
        required: true
        content:
          application/json; charset=utf-8:
            schema:
              $ref: '#/components/schemas/TONWithdrawRequestPayload'
      responses:
        '200':
          description: Successful operation
          content:
            application/json; charset=utf-8:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/TONWithdrawRequest'
        '400':
          description: Invalid parameters
        '401':
          description: Unauthorized
        '500':
          description: Internal server error
    delete:
      tags:
        - The Open Network (TON)
      summary: Withdraw request
      description: Delete withdraw request for a pool
      operationId: deleteTonWithdrawRequest
      parameters:
        - $ref: '#/components/parameters/TONPoolParam'
        - $ref: '#/components/parameters/TONTxHashParam'
      responses:
        '200':
          description: Successful operation
        '400':
          description: Invalid parameters
        '401':
          description: Unauthorized
        '500':
          description: Internal server error
  /ton/transaction/prepare:
    post:
      tags:
        - The Open Network (TON)
      summary: Prepare Transaction
      description: Prepare an unsigned transaction for broadcast by adding signatures to it
      operationId: postTonPrepareTx
      requestBody:
        description: Transaction to sign
        required: true
        content:
          application/json; charset=utf-8:
            schema:
              $ref: '#/components/schemas/TONPrepareTxPayload'
      responses:
        '200':
          description: Successful operation
          content:
            application/json; charset=utf-8:
              schema:
                type: object
                required:
                  - data
                properties:
                  data:
                    $ref: '#/components/schemas/TONPreparedTx'
        '400':
          description: Invalid parameters
        '401':
          description: Unauthorized
        '500':
          description: Internal server error
  /ton/transaction/broadcast:
    post:
      tags:
        - The Open Network (TON)
      summary: Broadcast Transaction
      description: Broadcast a serialized signed transaction to the blockchain
      operationId: postTonBroadcastTx
      requestBody:
        description: Signed transaction to broadcast
        required: true
        content:
          application/json; charset=utf-8:
            schema:
              $ref: '#/components/schemas/TONBroadcastTxPayload'
      responses:
        '200':
          description: Successful operation
          content:
            application/json; charset=utf-8:
              schema:
                type: object
                required:
                  - data
                properties:
                  data:
                    $ref: '#/components/schemas/TONBroadcastTx'
        '400':
          description: Invalid parameters
        '401':
          description: Unauthorized
        '500':
          description: Internal server error
  /ton/transaction/status:
    get:
      tags:
        - The Open Network (TON)
      summary: Transaction Status
      description: Get the status of a transaction by message hash
      operationId: getTonTxStatus
      parameters:
        - name: msg_hash
          in: query
          description: Hash of the message
          required: true
          style: form
          explode: false
          schema:
            type: string
            example: SQ5y4jeRZzU4h/lbyWiLhTrR9A3smK5Vmm/1p9ylDFo=
      responses:
        '200':
          description: Successful operation
          content:
            application/json; charset=utf-8:
              schema:
                type: object
                required:
                  - data
                properties:
                  data:
                    $ref: '#/components/schemas/TONTxStatus'
        '400':
          description: Invalid parameters
        '401':
          description: Unauthorized
        '500':
          description: Internal server error
  /ton/transaction/stake-single-nomination-pool:
    post:
      tags:
        - The Open Network (TON)
      summary: Stake single nomination pool transaction
      description: Craft a stake transaction to a single nomination pool.
      operationId: postTonStakeSingleNominationPoolTx
      requestBody:
        description: Stake transaction to create
        required: true
        content:
          application/json; charset=utf-8:
            schema:
              $ref: '#/components/schemas/TONStakeTxPayload'
      responses:
        '200':
          description: Successful operation
          content:
            application/json; charset=utf-8:
              schema:
                type: object
                required:
                  - data
                properties:
                  data:
                    $ref: '#/components/schemas/TONTx'
        '400':
          description: Invalid parameters
        '401':
          description: Unauthorized
        '500':
          description: Internal server error
  /ton/transaction/stake-ton-whales-pool:
    post:
      tags:
        - The Open Network (TON)
      summary: Stake TON whales pool transaction
      description: Craft a stake transaction to TON whales pool.
      operationId: postTonStakeWhalesPoolTx
      requestBody:
        description: Stake transaction to create
        required: true
        content:
          application/json; charset=utf-8:
            schema:
              $ref: '#/components/schemas/TONStakeTxPayload'
      responses:
        '200':
          description: Successful operation
          content:
            application/json; charset=utf-8:
              schema:
                type: object
                required:
                  - data
                properties:
                  data:
                    $ref: '#/components/schemas/TONTx'
        '400':
          description: Invalid parameters
        '401':
          description: Unauthorized
        '500':
          description: Internal server error
  /ton/transaction/unstake-single-nomination-pool:
    post:
      tags:
        - The Open Network (TON)
      summary: Unstake single nomination pool transaction
      description: Craft an unstake transaction from a single nomination pool.
      operationId: postTonUnstakeSingleNominationPoolTx
      requestBody:
        description: Unstake transaction to create
        required: true
        content:
          application/json; charset=utf-8:
            schema:
              $ref: '#/components/schemas/TONUnstakeTxPayload'
      responses:
        '200':
          description: Successful operation
          content:
            application/json; charset=utf-8:
              schema:
                type: object
                required:
                  - data
                properties:
                  data:
                    $ref: '#/components/schemas/TONTx'
        '400':
          description: Invalid parameters
        '401':
          description: Unauthorized
        '500':
          description: Internal server error
  /ton/transaction/unstake-ton-whales-pool:
    post:
      tags:
        - The Open Network (TON)
      summary: Unstake TON whales pool transaction
      description: Craft an unstake transaction from a TON whales pool.
      operationId: postTonUnstakeWhalesPoolTx
      requestBody:
        description: Unstake transaction to create
        required: true
        content:
          application/json; charset=utf-8:
            schema:
              $ref: '#/components/schemas/TONUnstakeTxPayload'
      responses:
        '200':
          description: Successful operation
          content:
            application/json; charset=utf-8:
              schema:
                type: object
                required:
                  - data
                properties:
                  data:
                    $ref: '#/components/schemas/TONTx'
        '400':
          description: Invalid parameters
        '401':
          description: Unauthorized
        '500':
          description: Internal server error
  /ton/transaction/whitelist-vesting-contract:
    post:
      tags:
        - The Open Network (TON)
      summary: Whitelist address on vesting contract transaction
      description: Craft whitelist address on vesting contract transaction.
      operationId: postTonWhitelistVestingContractTx
      requestBody:
        description: Whitelist transaction to create
        required: true
        content:
          application/json; charset=utf-8:
            schema:
              $ref: '#/components/schemas/TONWhitelistTxPayload'
      responses:
        '200':
          description: Successful operation
          content:
            application/json; charset=utf-8:
              schema:
                type: object
                required:
                  - data
                properties:
                  data:
                    $ref: '#/components/schemas/TONTx'
        '400':
          description: Invalid parameters
        '401':
          description: Unauthorized
        '500':
          description: Internal server error
  /noble/balance:
    post:
      tags:
        - Noble (NOBLE)
      summary: Get balance
      description: Get balance of a Noble account
      operationId: postNobleGetBalance
      requestBody:
        description: Account to query
        required: true
        content:
          application/json; charset=utf-8:
            schema:
              $ref: '#/components/schemas/NOBLEGetBalancePayload'
      responses:
        '200':
          description: Successful operation
          content:
            application/json; charset=utf-8:
              schema:
                type: object
                required:
                  - data
                properties:
                  data:
                    type: object
                    required:
                      - amount
                      - denom
                    properties:
                      amount:
                        type: string
                        description: The balance of the account
                        example: '1000000'
                      denom:
                        type: string
                        description: The denomination of the balance
                        example: uusdc
        '400':
          description: Invalid parameters
        '401':
          description: Unauthorized
        '500':
          description: Internal server error
  /noble/transaction/burn-usdc:
    post:
      tags:
        - Noble (NOBLE)
      summary: Burn USDC transaction
      description: Generates a burn USDC transaction on Noble in order to mint the USDC on Ethereum
      operationId: postNobleBurnUsdcTx
      requestBody:
        description: Transaction payload
        required: true
        content:
          application/json; charset=utf-8:
            schema:
              $ref: '#/components/schemas/NOBLEBurnUsdcPayload'
      responses:
        '200':
          description: Successful operation
          content:
            application/json; charset=utf-8:
              schema:
                type: object
                required:
                  - data
                properties:
                  data:
                    $ref: '#/components/schemas/DYDXUnsignedTx'
        '400':
          description: Invalid parameters
        '401':
          description: Unauthorized
        '500':
          description: Internal server error
  /noble/transaction/osmo-ibc-transfer:
    post:
      tags:
        - Noble (NOBLE)
      summary: OSMO IBC transfer transaction
      description: Generates an IBC transfer transaction to transfer USDC from Noble to Osmosis
      operationId: postNobleOsmoIbcTransferTx
      requestBody:
        description: Transaction payload
        required: true
        content:
          application/json; charset=utf-8:
            schema:
              $ref: '#/components/schemas/NOBLEOsmoIbcTransferPayload'
      responses:
        '200':
          description: Successful operation
          content:
            application/json; charset=utf-8:
              schema:
                type: object
                required:
                  - data
                properties:
                  data:
                    $ref: '#/components/schemas/DYDXUnsignedTx'
        '400':
          description: Invalid parameters
        '401':
          description: Unauthorized
        '500':
          description: Internal server error
  /noble/transaction/prepare:
    post:
      tags:
        - Noble (NOBLE)
      summary: Prepare Transaction
      description: Prepare an unsigned transaction for broadcast by adding signatures to it
      operationId: postNoblePrepareTx
      requestBody:
        description: Transaction to prepare
        required: true
        content:
          application/json; charset=utf-8:
            schema:
              $ref: '#/components/schemas/DYDXPrepareTxPayload'
      responses:
        '200':
          description: Successful operation
          content:
            application/json; charset=utf-8:
              schema:
                type: object
                required:
                  - data
                properties:
                  data:
                    $ref: '#/components/schemas/DYDXSignedTx'
        '400':
          description: Invalid parameters
        '401':
          description: Unauthorized
        '500':
          description: Internal server error
  /noble/transaction/broadcast:
    post:
      tags:
        - Noble (NOBLE)
      summary: Broadcast Transaction
      description: Broadcast a signed transaction to the Noble network
      operationId: postNobleBroadcastTx
      requestBody:
        description: Transaction to broadcast
        required: true
        content:
          application/json; charset=utf-8:
            schema:
              $ref: '#/components/schemas/DYDXBroadcastTxPayload'
      responses:
        '200':
          description: Successful operation
          content:
            application/json; charset=utf-8:
              schema:
                type: object
                required:
                  - data
                properties:
                  data:
                    $ref: '#/components/schemas/DYDXTxHash'
        '400':
          description: Invalid parameters
        '401':
          description: Unauthorized
        '500':
          description: Internal server error
  /noble/transaction/status:
    get:
      tags:
        - Noble (NOBLE)
      summary: Transaction Status
      description: Get the status of a transaction
      operationId: getNobleTxStatus
      parameters:
        - name: tx_hash
          in: query
          description: Hash of the transaction
          required: true
          style: form
          explode: false
          schema:
            type: string
            example: 2B4F732E12D5D5AF1F907AD03B199167A718EDC6201DE5713143AB80990420CB
      responses:
        '200':
          description: Successful operation
          content:
            application/json; charset=utf-8:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/DYDXTxStatus'
        '400':
          description: Invalid parameters
        '401':
          description: Unauthorized
        '500':
          description: Internal server error
  /noble/transaction/decode:
    get:
      tags:
        - Noble (NOBLE)
      summary: Transaction Decoding
      description: Decode a transaction
      operationId: getNobleTxDecoding
      parameters:
        - name: tx_serialized
          in: query
          description: Raw transaction to decode
          required: true
          style: form
          explode: false
          schema:
            type: string
            example: 0aa1010a9e010a232f636f736d6f732e7374616b696e672e763162657461312e4d736744656c656761746512770a2d636f736d6f733139633966646834383876716a636c6c74777036386a6d3530796477796833366a7165617465761234636f736d6f7376616c6f706572313679733065673933356d6b71706b79646b6766636a39616765326175386c39366e61657265391a100a057561746f6d12073130303030303012670a500a460a1f2f636f736d6f732e63727970746f2e736563703235366b312e5075624b657912230a21039ce47b2a813d13876131a9c3be77e8c4afa49e948744abbee11f939e2a420f4612040a020801186612130a0d0a057561746f6d1204353030301080897a1a1174686574612d746573746e65742d30303120e0cd2a
      responses:
        '200':
          description: Successful operation
          content:
            application/json; charset=utf-8:
              schema:
                type: object
                description: Decoded transaction
                example:
                  authInfo:
                    signerInfos:
                      - publicKey:
                          typeUrl: /cosmos.crypto.secp256k1.PubKey
                          value:
                            '0': 10
                            '1': 33
                            '2': 3
                            '3': 156
                            '4': 228
                            '5': 123
                            '6': 42
                            '7': 129
                            '8': 61
                            '9': 19
                            '10': 135
                            '11': 97
                            '12': 49
                            '13': 169
                            '14': 195
                            '15': 190
                            '16': 119
                            '17': 232
                            '18': 196
                            '19': 175
                            '20': 164
                            '21': 158
                            '22': 148
                            '23': 135
                            '24': 68
                            '25': 171
                            '26': 190
                            '27': 225
                            '28': 31
                            '29': 147
                            '30': 158
                            '31': 42
                            '32': 66
                            '33': 15
                            '34': 70
                        modeInfo:
                          single:
                            mode: 1
                        sequence:
                          low: 102
                          high: 0
                          unsigned: true
                    fee:
                      amount:
                        - denom: uosmo
                          amount: '5000'
                      gasLimit:
                        low: 2000000
                        high: 0
                        unsigned: true
                      payer: ''
                      granter: ''
                  body:
                    messages:
                      - typeUrl: /cosmos.staking.v1beta1.MsgDelegate
                        value:
                          '0': 10
                          '1': 45
                          '2': 99
                          '3': 111
                          '4': 115
                          '5': 109
                          '6': 111
                          '7': 115
                          '8': 49
                          '9': 57
                          '10': 99
                          '11': 57
                          '12': 102
                          '13': 100
                          '14': 104
                          '15': 52
                          '16': 56
                          '17': 56
                          '18': 118
                          '19': 113
                          '20': 106
                          '21': 99
                          '22': 108
                          '23': 108
                          '24': 116
                          '25': 119
                          '26': 112
                          '27': 54
                          '28': 56
                          '29': 106
                          '30': 109
                          '31': 53
                          '32': 48
                          '33': 121
                          '34': 100
                          '35': 119
                          '36': 121
                          '37': 104
                          '38': 51
                          '39': 54
                          '40': 106
                          '41': 113
                          '42': 101
                          '43': 97
                          '44': 116
                          '45': 101
                          '46': 118
                          '47': 18
                          '48': 52
                          '49': 99
                          '50': 111
                          '51': 115
                          '52': 109
                          '53': 111
                          '54': 115
                          '55': 118
                          '56': 97
                          '57': 108
                          '58': 111
                          '59': 112
                          '60': 101
                          '61': 114
                          '62': 49
                          '63': 54
                          '64': 121
                          '65': 115
                          '66': 48
                          '67': 101
                          '68': 103
                          '69': 57
                          '70': 51
                          '71': 53
                          '72': 109
                          '73': 107
                          '74': 113
                          '75': 112
                          '76': 107
                          '77': 121
                          '78': 100
                          '79': 107
                          '80': 103
                          '81': 102
                          '82': 99
                          '83': 106
                          '84': 57
                          '85': 97
                          '86': 103
                          '87': 101
                          '88': 50
                          '89': 97
                          '90': 117
                          '91': 56
                          '92': 108
                          '93': 57
                          '94': 54
                          '95': 110
                          '96': 97
                          '97': 101
                          '98': 114
                          '99': 101
                          '100': 57
                          '101': 26
                          '102': 16
                          '103': 10
                          '104': 5
                          '105': 117
                          '106': 97
                          '107': 116
                          '108': 111
                          '109': 109
                          '110': 18
                          '111': 7
                          '112': 49
                          '113': 48
                          '114': 48
                          '115': 48
                          '116': 48
                          '117': 48
                          '118': 48
                    memo: ''
                    timeoutHeight:
                      low: 0
                      high: 0
                      unsigned: true
                    extensionOptions: []
                    nonCriticalExtensionOptions: []
                  signatures:
                    - '0': 116
                      '1': 104
                      '2': 101
                      '3': 116
                      '4': 97
                      '5': 45
                      '6': 116
                      '7': 101
                      '8': 115
                      '9': 116
                      '10': 110
                      '11': 101
                      '12': 116
                      '13': 45
                      '14': 48
                      '15': 48
                      '16': 49
        '400':
          description: Invalid parameters
        '401':
          description: Unauthorized
        '500':
          description: Internal server error
  /trx/network-stats:
    get:
      tags:
        - Tron (TRX)
      summary: Network Stats
      description: Get some network statistics on Tron staking
      operationId: getTrxNetworkStats
      responses:
        '200':
          description: Successful operation
          content:
            application/json; charset=utf-8:
              schema:
                type: object
                required:
                  - data
                properties:
                  data:
                    $ref: '#/components/schemas/TRXNetworkStats'
        '401':
          description: Unauthorized
        '500':
          description: Internal server error
  /trx/accounts:
    get:
      tags:
        - Tron (TRX)
      summary: Accounts
      description: Get TRX accounts
      operationId: getTrxAccounts
      parameters:
        - $ref: '#/components/parameters/TRXWalletsParam'
      responses:
        '200':
          description: Successful operation
          content:
            application/json; charset=utf-8:
              schema:
                type: object
                required:
                  - data
                properties:
                  data:
                    type: array
                    items:
                      $ref: '#/components/schemas/TRXAccount'
        '400':
          description: Invalid parameters
        '401':
          description: Unauthorized
        '500':
          description: Internal server error
  /trx/stakes:
    get:
      tags:
        - Tron (TRX)
      summary: Stakes
      description: Get TRX stakes
      operationId: getTrxStakes
      parameters:
        - $ref: '#/components/parameters/TRXWalletsParam'
        - $ref: '#/components/parameters/AccountsParam'
      responses:
        '200':
          description: Successful operation
          content:
            application/json; charset=utf-8:
              schema:
                type: object
                required:
                  - data
                properties:
                  data:
                    type: array
                    items:
                      $ref: '#/components/schemas/TRXStake'
        '400':
          description: Invalid parameters
        '401':
          description: Unauthorized
        '500':
          description: Internal server error
  /trx/transaction/stake:
    post:
      tags:
        - Tron (TRX)
      summary: Stake transaction
      description: Craft a stake transaction to obtain bandwidth or energy, and obtain TRON Power.
      operationId: postTrxStakeTx
      requestBody:
        description: Transaction to craft
        required: true
        content:
          application/json; charset=utf-8:
            schema:
              $ref: '#/components/schemas/TRXCraftStakeTxPayload'
      responses:
        '200':
          description: Successful operation
          content:
            application/json; charset=utf-8:
              schema:
                type: object
                required:
                  - data
                properties:
                  data:
                    $ref: '#/components/schemas/TRXUnsignedTx'
        '400':
          description: Invalid parameters
        '401':
          description: Unauthorized
        '500':
          description: Internal server error
  /trx/transaction/unstake:
    post:
      tags:
        - Tron (TRX)
      summary: Unstake transaction
      description: Craft an unstake transaction to unstake TRX, releases bandwidth or energy, and voting rights.
      operationId: postTrxUnstakeTx
      requestBody:
        description: Transaction to craft
        required: true
        content:
          application/json; charset=utf-8:
            schema:
              $ref: '#/components/schemas/TRXCraftUnstakeTxPayload'
      responses:
        '200':
          description: Successful operation
          content:
            application/json; charset=utf-8:
              schema:
                type: object
                required:
                  - data
                properties:
                  data:
                    $ref: '#/components/schemas/TRXUnsignedTx'
        '400':
          description: Invalid parameters
        '401':
          description: Unauthorized
        '500':
          description: Internal server error
  /trx/transaction/cancel-unstake:
    post:
      tags:
        - Tron (TRX)
      summary: Unstake transaction
      description: Craft an cancel unstake transaction to Cancel unstakings, all unstaked funds still in the waiting period will be re-staked, or withdrawn if the passed the lockup period.
      operationId: postTrxCancelUnstakeTx
      requestBody:
        description: Transaction to craft
        required: true
        content:
          application/json; charset=utf-8:
            schema:
              $ref: '#/components/schemas/TRXCraftCancelUnstakeTxPayload'
      responses:
        '200':
          description: Successful operation
          content:
            application/json; charset=utf-8:
              schema:
                type: object
                required:
                  - data
                properties:
                  data:
                    $ref: '#/components/schemas/TRXUnsignedTx'
        '400':
          description: Invalid parameters
        '401':
          description: Unauthorized
        '500':
          description: Internal server error
  /trx/transaction/withdraw-unstaked:
    post:
      tags:
        - Tron (TRX)
      summary: Withdraw unstaked transaction
      description: Craft a withdraw unstaked transaction.
      operationId: postTrxWithdrawUnstakedTx
      requestBody:
        description: Transaction to craft
        required: true
        content:
          application/json; charset=utf-8:
            schema:
              $ref: '#/components/schemas/TRXCraftWithdrawUnstakedTxPayload'
      responses:
        '200':
          description: Successful operation
          content:
            application/json; charset=utf-8:
              schema:
                type: object
                required:
                  - data
                properties:
                  data:
                    $ref: '#/components/schemas/TRXUnsignedTx'
        '400':
          description: Invalid parameters
        '401':
          description: Unauthorized
        '500':
          description: Internal server error
  /trx/transaction/vote:
    post:
      tags:
        - Tron (TRX)
      summary: Vote transaction
      description: Craft a vote transaction.
      operationId: postTrxVoteTx
      requestBody:
        description: Transaction to craft
        required: true
        content:
          application/json; charset=utf-8:
            schema:
              $ref: '#/components/schemas/TRXCraftVoteTxPayload'
      responses:
        '200':
          description: Successful operation
          content:
            application/json; charset=utf-8:
              schema:
                type: object
                required:
                  - data
                properties:
                  data:
                    $ref: '#/components/schemas/TRXUnsignedTx'
        '400':
          description: Invalid parameters
        '401':
          description: Unauthorized
        '500':
          description: Internal server error
  /trx/transaction/withdraw-rewards:
    post:
      tags:
        - Tron (TRX)
      summary: Withdraw rewards transaction
      description: Craft a withdraw rewards transaction.
      operationId: postTrxWithdrawRewardsTx
      requestBody:
        description: Transaction to craft
        required: true
        content:
          application/json; charset=utf-8:
            schema:
              $ref: '#/components/schemas/TRXCraftWithdrawRewardsTxPayload'
      responses:
        '200':
          description: Successful operation
          content:
            application/json; charset=utf-8:
              schema:
                type: object
                required:
                  - data
                properties:
                  data:
                    $ref: '#/components/schemas/TRXUnsignedTx'
        '400':
          description: Invalid parameters
        '401':
          description: Unauthorized
        '500':
          description: Internal server error
  /trx/transaction/prepare:
    post:
      tags:
        - Tron (TRX)
      summary: Prepare transaction
      description: Prepare a transaction for broadcast by adding a signature to it.
      operationId: postTrxPrepareTx
      requestBody:
        description: Transaction to prepare
        required: true
        content:
          application/json; charset=utf-8:
            schema:
              $ref: '#/components/schemas/TRXPrepareTxPayload'
      responses:
        '200':
          description: Successful operation
          content:
            application/json; charset=utf-8:
              schema:
                type: object
                required:
                  - data
                properties:
                  data:
                    $ref: '#/components/schemas/TRXPreparedTx'
        '400':
          description: Invalid parameters
        '401':
          description: Unauthorized
        '500':
          description: Internal server error
  /trx/transaction/broadcast:
    post:
      tags:
        - Tron (TRX)
      summary: Broadcast transaction
      description: Broadcast a signed transaction to the blockchain.
      operationId: postTrxBroadcastTx
      requestBody:
        description: Transaction to broadcast
        required: true
        content:
          application/json; charset=utf-8:
            schema:
              $ref: '#/components/schemas/TRXBroadcastTxPayload'
      responses:
        '200':
          description: Successful operation
          content:
            application/json; charset=utf-8:
              schema:
                type: object
                required:
                  - data
                properties:
                  data:
                    $ref: '#/components/schemas/TRXBroadcastedTx'
        '400':
          description: Invalid parameters
        '401':
          description: Unauthorized
        '500':
          description: Internal server error
  /positions/:
    get:
      tags:
        - Positions
      summary: List all positions
      operationId: listPositions
      parameters:
        - $ref: '#/components/parameters/POSITIONWalletParam'
        - $ref: '#/components/parameters/POSITIONChainIDParam'
      responses:
        '200':
          description: A list of positions
          content:
            application/json:
              schema:
                type: object
                required:
                  - data
                properties:
                  data:
                    type: object
                    required:
                      - summary
                      - positions
                    properties:
                      summary:
                        $ref: '#/components/schemas/Summary'
                      positions:
                        type: array
                        items:
                          oneOf:
                            - $ref: '#/components/schemas/ETHPosition'
                            - $ref: '#/components/schemas/ERC20Position'
                            - $ref: '#/components/schemas/ProductPosition'
        '400':
          description: Invalid parameters
        '401':
          description: Unauthorized
        '500':
          description: Internal server error
components:
  securitySchemes:
    bearerAuth:
      type: http
      scheme: bearer
  parameters:
    AccountsParam:
      name: accounts
      in: query
      description: Comma-separated list of Kiln accounts identifiers
      required: false
      style: form
      explode: false
      schema:
        type: array
        items:
          type: string
          example: b7177fd2-fbb3-479f-aa92-db9fb16e229f
          format: uuid
    PaginationPageParam:
      name: current_page
      in: query
      description: Current page to look-up entries. If not specified, pagination is disabled
      required: false
      style: form
      schema:
        type: integer
        minimum: 1
        example: 1
        description: Current page to look-up entries
    PaginationPageSizeParam:
      name: page_size
      in: query
      description: Number of entries to list per page. Only used when `current_page` is specified
      required: false
      style: form
      schema:
        type: integer
        minimum: 1
        maximum: 100
        example: 1
        default: 25
        description: Number of entries to list per page
    FilterStatesParam:
      name: filter_states
      in: query
      description: Comma-separated list of states to filter on (unknown, unstaked, deposit_in_progress, pending_initialized, pending_queued, active_ongoing, active_exiting, active_slashed, exited_unslashed, exited_slashed, withdrawal_possible, withdrawal_done). Not available with the `scope` parameter
      required: false
      style: form
      schema:
        type: array
        items:
          type: string
          example: deposit_in_progress,pending_initialized
          enum:
            - unknown
            - unstaked
            - deposit_in_progress
            - pending_initialized
            - pending_queued
            - active_ongoing
            - active_exiting
            - active_slashed
            - exited_unslashed
            - exited_slashed
            - withdrawal_possible
            - withdrawal_done
    StartDateParam:
      name: start_date
      in: query
      description: Get data from this date (YYYY-MM-DD)
      required: false
      schema:
        type: string
        format: date
        example: '2023-01-10'
    EndDateParam:
      name: end_date
      in: query
      description: Get data to this date (YYYY-MM-DD)
      required: false
      schema:
        type: string
        format: date
        example: '2023-01-20'
    IncludeUSDParam:
      name: include_usd
      in: query
      description: Include rewards and balance in USD in response. <br/> If a `format` parameter exists it will only work with `format=daily`
      required: false
      schema:
        type: boolean
        example: '1'
    StartBlockParam:
      name: start_block
      in: query
      description: Get rewards from this block
      required: false
      schema:
        type: number
        example: 15739267
    EndBlockParam:
      name: end_block
      in: query
      description: Get rewards to this block
      required: false
      schema:
        type: number
        example: 16126416
    AccountIdParam:
      name: id
      in: path
      description: Account id
      required: true
      schema:
        type: string
        format: uuid
        example: 92f5bfd4-ea38-4824-84f7-686eddff5539
    RefreshParam:
      name: refresh
      in: query
      description: Set to 1 for real-time data
      required: false
      schema:
        type: boolean
        example: '1'
    OrganizationIdParam:
      name: id
      in: path
      description: Organization id
      required: true
      schema:
        type: string
        format: uuid
        example: 92f5bfd4-ea38-4824-84f7-686eddff5539
    ETHValidatorsParam:
      name: validators
      in: query
      description: Comma-separated list of validators addresses
      required: false
      style: form
      explode: false
      schema:
        type: array
        items:
          type: string
          example: '0x95373bcf8e2c64e1c373a6e534c002f210adbcc84c5abda3b6306677e171430ae50781a51c9f579a47622e334dba2412'
    ETHEigenLayerOperatorParam:
      name: operator
      in: query
      description: operator address
      required: true
      style: form
      explode: false
      schema:
        type: string
        example: '0xA4e245C3a1Cb2F0512a71B9CD908dCa2F1641781'
    ETHEigenLayerRequiredWalletParam:
      name: wallet
      in: query
      description: wallet address
      style: form
      required: true
      explode: false
      schema:
        type: string
        example: '0x991c468AbcE2b4DD627a6210C145373EbABdd186'
    ETHEigenLayerWalletParam:
      name: wallet
      in: query
      description: wallet address
      style: form
      explode: false
      schema:
        type: string
        example: '0x991c468AbcE2b4DD627a6210C145373EbABdd186'
    ETHEigenLayerEigenPodParam:
      name: eigenpod
      in: query
      description: EigenPod address
      style: form
      explode: false
      schema:
        type: string
        example: '0xAcc1fb458a1317E886dB376Fc8141540537E68fE'
    ETHScopeParam:
      name: scope
      in: query
      description: Scope of validators to fetch (all network, all kiln keys)
      required: false
      style: form
      explode: false
      schema:
        type: string
        example: network
        enum:
          - kiln
          - network
    ETHWalletsParam:
      name: wallets
      in: query
      description: Comma-separated list of wallets addresses
      required: false
      style: form
      explode: false
      schema:
        type: array
        items:
          type: string
          example: '0xe1f4acc0affB36a805474e3b6ab786738C6900A2'
    ETHProxiesParam:
      name: proxies
      in: query
      description: |-
        Comma-separated list of proxy-contract addresses.
        The definition of a proxy is a smart contract that was involved in the deposit transaction and emitted a log.
      required: false
      style: form
      explode: false
      schema:
        type: array
        items:
          type: string
          example: '0xe1f4acc0affB36a805474e3b6ab786738C6900A2'
    ETHWithdrawalCredentialsParam:
      name: withdrawal_credentials
      in: query
      description: Comma-separated list of withdrawal credentials.
      required: false
      style: form
      explode: false
      schema:
        type: array
        items:
          type: string
          example: 00f50428677c60f997aadeab24aabf7fceaef491c96a52b463ae91f95611cf71
    ETHIncludeEigenLayerParam:
      name: include_eigenlayer
      in: query
      description: Include EigenLayer reporting data
      required: false
      style: form
      explode: false
      schema:
        type: boolean
        example: true
    ETHValidatorIndexesParam:
      name: validator_indexes
      in: query
      description: Comma-separated list of validators' consensus layer indexes
      required: false
      style: form
      explode: false
      schema:
        type: array
        items:
          type: integer
          example: 1
    DefiVaultsParam:
      name: vaults
      in: query
      description: 'Comma-separated list of vault addresses prefixed by chain identifier: `eth`, `arb`, `bsc`, `matic`, `op`'
      required: true
      style: form
      explode: false
      schema:
        type: array
        items:
          type: string
          example: eth_0x9ab5f9101a3c1b868e2c422e294cc2ee685551d5
    DefiWalletParam:
      name: wallets
      in: query
      description: Comma-separated list of wallet addresses
      required: false
      style: form
      explode: false
      schema:
        type: array
        items:
          type: string
          example: '0x356c33675674691ad6b8ac92ecfb91960c5d2c30'
    ETHOnChainIntegrationParam:
      name: integration
      in: query
      description: The address of the pooling integration
      schema:
        type: string
        example: '0x65da6aecfa84b77a25a7e83e65cd3c6bda12186c'
    ETHOnChainOperationIDs:
      name: ids
      in: query
      description: Comma-separated list of operation IDs
      required: false
      schema:
        type: array
        items:
          type: string
          example: 15458, 15459
    XTZWalletsParam:
      name: wallets
      in: query
      description: Comma-separated list of wallets addresses
      required: false
      style: form
      explode: false
      schema:
        type: array
        items:
          type: string
          example: tz1VZ4iC4wzTR7iK2Q7PoQGVDAojuY42fDxD
    XTZValidatorsParam:
      name: validators
      in: query
      description: Comma-separated list of baker addresses
      required: false
      style: form
      explode: false
      schema:
        type: array
        items:
          type: string
          example: tz3btDQsDkqq2G7eBdrrLqetaAfLVw6BnPez
    XTZStartCycleParam:
      name: start_cycle
      in: query
      description: The cycle from which we want to fetch rewards. Must be used with `format=cycle`
      required: false
      schema:
        type: number
        example: 542
    XTZEndCycleParam:
      name: end_cycle
      in: query
      description: The cycle until which we want to fetch rewards. Must be used with `format=cycle`
      required: false
      schema:
        type: number
        example: 542
    XTZRewardsFormatParam:
      name: format
      in: query
      description: The format of the response. Defaults to `daily`
      required: false
      schema:
        type: string
        enum:
          - daily
          - cycle
    SOLWalletsParam:
      name: wallets
      in: query
      description: Comma-separated list of wallets addresses
      required: false
      style: form
      explode: false
      schema:
        type: array
        items:
          type: string
          example: EHrKMrVsNNqBjYuKbuzf5rJZcu89dg5cwdRduMdSE557
    SOLStakeAccountsParam:
      name: stake_accounts
      in: query
      description: Comma-separated list of stake addresses
      required: false
      style: form
      explode: false
      schema:
        type: array
        items:
          type: string
          example: 5XUx8ZHPWSKdwfkPWHSTKco3okpHV7zEPccsQAxQzc9f
    SOLValidatorsParam:
      name: validators
      in: query
      description: Comma-separated list of validator addresses
      required: false
      style: form
      explode: false
      schema:
        type: array
        items:
          type: string
          example: 6hNweZvzTudTuprZrAXb1A9grKvVG6xgjyvdJUqAMk78
    SOLStartEpochParam:
      name: start_epoch
      in: query
      description: The epoch from which we want to fetch rewards. Must be used with `format=epoch`
      required: false
      schema:
        type: number
        example: 542
    SOLEndEpochParam:
      name: end_epoch
      in: query
      description: The epoch until which we want to fetch rewards. Must be used with `format=epoch`
      required: false
      schema:
        type: number
        example: 542
    SOLRewardsFormatParam:
      name: format
      in: query
      description: The format of the response. Defaults to `daily`
      required: false
      schema:
        type: string
        enum:
          - daily
          - epoch
    ATOMValidatorsParam:
      name: validators
      in: query
      description: |
        Comma-separated list of validators addresses, these addresses
        are matched with the corresponding delegator addresses. To
        fetch a specific stake, pass your wallet address and the
        validator address as parameters.
      required: false
      style: form
      explode: false
      schema:
        type: array
        items:
          type: string
          example: cosmosvaloper1uxlf7mvr8nep3gm7udf2u9remms2jyjqvwdul2
    ATOMDelegatorsParam:
      name: delegators
      in: query
      description: |
        Comma-separated list of delegator addresses, these addresses
        are matched with the corresponding validator addresses. To
        fetch a specific stake, pass your wallet address and the
        validator address as parameters.
      required: false
      style: form
      explode: false
      schema:
        type: array
        items:
          type: string
          example: cosmos1mfdn23y2ydnp6j3l3f8rw6r2gzazrmprgxn5xl
    ATOMAuthzFlagParam:
      name: authz
      in: query
      description: whether or not the operation returned will include authz operations, defaults to false
      required: false
      style: form
      explode: false
      schema:
        type: boolean
        default: false
    ATOMPrecisionParam:
      name: precision
      in: query
      description: Precision to use when formatting amounts
      required: false
      style: form
      explode: false
      schema:
        type: string
        enum:
          - chain
          - micro
          - atto
    CROValidatorsParam:
      name: validators
      in: query
      description: |
        Comma-separated list of validators addresses, these addresses
        are matched with the corresponding delegator addresses. To
        fetch a specific stake, pass your wallet address and the
        validator address as parameters.
      required: false
      style: form
      explode: false
      schema:
        type: array
        items:
          type: string
          example: crocncl10skwvezaqkngyw9uyskzsqe2cu8jc2ysrrndry
    CRODelegatorsParam:
      name: delegators
      in: query
      description: |
        Comma-separated list of delegator addresses, these addresses
        are matched with the corresponding validator addresses. To
        fetch a specific stake, pass your wallet address and the
        validator address as parameters.
      required: false
      style: form
      explode: false
      schema:
        type: array
        items:
          type: string
          example: cro1egww25see7x6pg2lp2mhmnd5s6smzlfmdlwm0h
    CROAuthzFlagParam:
      name: authz
      in: query
      description: whether or not the operation returned will include authz operations, defaults to false
      required: false
      style: form
      explode: false
      schema:
        type: boolean
        default: false
    CROPrecisionParam:
      name: precision
      in: query
      description: Precision to use when formatting amounts
      required: false
      style: form
      explode: false
      schema:
        type: string
        enum:
          - chain
          - micro
          - atto
    OMValidatorsParam:
      name: validators
      in: query
      description: |
        Comma-separated list of validators addresses, these addresses
        are matched with the corresponding delegator addresses. To
        fetch a specific stake, pass your wallet address and the
        validator address as parameters.
      required: false
      style: form
      explode: false
      schema:
        type: array
        items:
          type: string
          example: mantravaloper1qum83utf8833n4f857w98dxc5w8qlnq9eeew4g
    OMDelegatorsParam:
      name: delegators
      in: query
      description: |
        Comma-separated list of delegator addresses, these addresses
        are matched with the corresponding validator addresses. To
        fetch a specific stake, pass your wallet address and the
        validator address as parameters.
      required: false
      style: form
      explode: false
      schema:
        type: array
        items:
          type: string
          example: mantra156h4wqz5p0xuj48cn0cv2sg8q9p2y3nycg3h3a
    OMAuthzFlagParam:
      name: authz
      in: query
      description: whether or not the operation returned will include authz operations, defaults to false
      required: false
      style: form
      explode: false
      schema:
        type: boolean
        default: false
    OMPrecisionParam:
      name: precision
      in: query
      description: Precision to use when formatting amounts
      required: false
      style: form
      explode: false
      schema:
        type: string
        enum:
          - chain
          - micro
          - atto
    ADAStakeAddressesParam:
      name: stake_addresses
      in: query
      schema:
        type: string
        example: stake1upv7j2865m2283cgruttmg8g4l24xy6xzzjmzrq3d8urqvqla4ngk
        description: Comma separated list of stake addresses
    ADAWalletsParam:
      name: wallets
      in: query
      schema:
        type: string
        example: addr1qqumsdyju8ee4tvee7kyzd6jenkl9jvgdjtzqlf729wqd66eay504fk550rss8ckhksw3t742vf5vy99kyxpz60cxqcqdeu78t
        description: Comma separated list of wallet addresses
    ADAPoolIDsParam:
      name: pool_ids
      in: query
      schema:
        type: string
        example: pool10rdglgh4pzvkf936p2m669qzarr9dusrhmmz9nultm3uvq4eh5k
        description: Comma separated list of pool ids. If used with `wallets` or `stake_addresses`, it will return the intersection of the results
    ADARewardsFormatParam:
      name: format
      in: query
      description: The format of the response. Defaults to `daily`
      required: false
      schema:
        type: string
        enum:
          - daily
          - epoch
    ADAStartEpochParam:
      name: start_epoch
      in: query
      description: The epoch from which we want to fetch rewards. Must be used with `format=epoch`
      required: false
      schema:
        type: number
        example: 46
    ADAEndEpochParam:
      name: end_epoch
      in: query
      description: The epoch until which we want to fetch rewards. Must be used with `format=epoch`
      required: false
      schema:
        type: number
        example: 48
    ADAPaginationPageParam:
      name: current_page
      in: query
      description: Current page to look-up entries. Defaults to 1. If the number of entries returned is lesser than `page_size`, it means it's the last page and there are no more entries.
      required: false
      style: form
      schema:
        type: integer
        minimum: 1
        example: 1
        description: Current page to look-up entries
    ADAPaginationPageSizeParam:
      name: page_size
      in: query
      description: Number of entries to list per page. Defaults to `100`. specified
      required: false
      style: form
      schema:
        type: integer
        minimum: 1
        maximum: 100
        example: 1
        default: 100
        description: Number of entries to list per page
    BBNWalletsParam:
      name: wallets
      in: query
      schema:
        type: string
        example: bc1q6gd2c5te296j3uh3tpmfppk9p65scu7m53kx93
        description: Comma separated list of wallet addresses
    BBNTxIDsParam:
      name: tx_ids
      in: query
      schema:
        type: string
        example: fc5e606725329c590945ac585f5907d911012a424879cabe46993fc7cc0b7117
        description: Comma separated list of transaction ids
    MATICWalletsParam:
      name: wallets
      in: query
      description: Comma-separated list of wallets addresses
      required: false
      style: form
      explode: false
      schema:
        type: array
        items:
          type: string
          example: '0xe1f4acc0affB36a805474e3b6ab786738C6900A2'
    MATICValidatorIndexesParam:
      name: validator_indexes
      in: query
      description: Comma-separated list of validators' indexes
      required: false
      style: form
      explode: false
      schema:
        type: array
        items:
          type: integer
          minimum: 1
    POLWalletsParam:
      name: wallets
      in: query
      description: Comma-separated list of wallets addresses
      required: false
      style: form
      explode: false
      schema:
        type: array
        items:
          type: string
          example: '0xe1f4acc0affB36a805474e3b6ab786738C6900A2'
    POLValidatorIndexesParam:
      name: validator_indexes
      in: query
      description: Comma-separated list of validators' indexes
      required: false
      style: form
      explode: false
      schema:
        type: array
        items:
          type: integer
          minimum: 1
    NEARWalletsParam:
      name: wallets
      in: query
      description: Comma-separated list of NEAR account ID
      required: false
      style: form
      explode: false
      schema:
        type: array
        items:
          type: string
          example: account_1.testnet,account_2.testnet
    NEARStakeAccountsParam:
      name: stake_accounts
      in: query
      description: Comma-separated list of Kiln internal stake account ID
      required: false
      style: form
      explode: false
      schema:
        type: array
        items:
          type: string
          example: validator.testnet_account_1.testnet,validator.testnet_accoun2.testnet
    NEARValidatorsParam:
      name: validators
      in: query
      description: Comma-separated list of NEAR validator ID
      required: false
      style: form
      explode: false
      schema:
        type: array
        items:
          type: string
          example: validator.testnet_1,validator.testnet_2
    NEARStartEpochParam:
      name: start_epoch
      in: query
      description: The epoch from which we want to fetch rewards. Must be used with `format=epoch`
      required: false
      schema:
        type: number
        example: 542
    NEAREndEpochParam:
      name: end_epoch
      in: query
      description: The epoch until which we want to fetch rewards. Must be used with `format=epoch`
      required: false
      schema:
        type: number
        example: 542
    NEARRewardsFormatParam:
      name: format
      in: query
      description: The format of the response. Defaults to `daily`
      required: false
      schema:
        type: string
        enum:
          - daily
          - epoch
    OSMOValidatorsParam:
      name: validators
      in: query
      description: |
        Comma-separated list of validators addresses, these addresses
        are matched with the corresponding delegator addresses. To
        fetch a specific stake, pass your wallet address and the
        validator address as parameters.
      required: false
      style: form
      explode: false
      schema:
        type: array
        items:
          type: string
          example: osmovaloper146mj09yzu3mvz7pmy4dvs4z9wr2mst7rq8p8gy
    OSMODelegatorsParam:
      name: delegators
      in: query
      description: |
        Comma-separated list of delegator addresses, these addresses
        are matched with the corresponding validator addresses. To
        fetch a specific stake, pass your wallet address and the
        validator address as parameters.
      required: false
      style: form
      explode: false
      schema:
        type: array
        items:
          type: string
          example: osmo1lnc548nmxqukrvd9czw4tq5vn6kapndg2hzhr3
    OSMOAuthzFlagParam:
      name: authz
      in: query
      description: whether or not the operation returned will include authz operations, defaults to false
      required: false
      style: form
      explode: false
      schema:
        type: boolean
        default: false
    OSMOPrecisionParam:
      name: precision
      in: query
      description: Precision to use when formatting amounts
      required: false
      style: form
      explode: false
      schema:
        type: string
        enum:
          - chain
          - micro
          - atto
    EGLDWalletsParam:
      name: wallets
      in: query
      description: Comma-separated list of wallets addresses
      required: false
      style: form
      explode: false
      schema:
        type: array
        items:
          type: string
          example: erd12mu6jt25v8cqvknug5yxqul8cgmnxf9t3kh7sa2ycphm29kqrlts552srv
    EGLDValidatorsParam:
      name: validators
      in: query
      description: Comma-separated list of validator contract addresses
      required: false
      style: form
      explode: false
      schema:
        type: array
        items:
          type: string
          example: erd1qqqqqqqqqqqqqqqpqqqqqqqqqqqqqqqqqqqqqqqqqqqqqrhlllls062tu4
    DOTAddressesParam:
      name: addresses
      in: query
      schema:
        type: string
        example: 1nXBtBPt3PV35m7Dfgp32xXgrC9tm1Pw7Hk7MDuGAejvB7J
        description: Comma separated list of stake addresses
    DOTValidatorsParam:
      name: validators
      in: query
      schema:
        type: string
        example: 1497QNdycmxqMi3VJDxZDhaJh4s9tytr5RFWyrLcNse2xqPD
        description: Comma separated list of validators addresses
    DOTPaginationPageParam:
      name: current_page
      in: query
      description: Current page to look-up entries. Defaults to 1. If the number of entries returned is lesser than `page_size`, it means it's the last page and there are no more entries.
      required: false
      style: form
      schema:
        type: integer
        minimum: 1
        example: 1
        description: Current page to look-up entries
    DOTPaginationPageSizeParam:
      name: page_size
      in: query
      description: Number of entries to list per page. Defaults to `100`. specified
      required: false
      style: form
      schema:
        type: integer
        minimum: 1
        maximum: 100
        example: 1
        default: 100
        description: Number of entries to list per page
    DOTPoolIDsParam:
      name: pool_ids
      in: query
      schema:
        type: integer
        example: 118
        description: Comma separated list of pool ids. If used with `addresses`, it will return the intersection of the results
    DOTRewardsFormatParam:
      name: format
      in: query
      description: The format of the response. Defaults to `daily`
      required: false
      schema:
        type: string
        enum:
          - daily
          - era
    KSMAddressesParam:
      name: addresses
      in: query
      schema:
        type: string
        example: 1nXBtBPt3PV35m7Dfgp32xXgrC9tm1Pw7Hk7MDuGAejvB7J
        description: Comma separated list of stake addresses
    KSMValidatorsParam:
      name: validators
      in: query
      schema:
        type: string
        example: 1497QNdycmxqMi3VJDxZDhaJh4s9tytr5RFWyrLcNse2xqPD
        description: Comma separated list of validators addresses
    KSMPaginationPageParam:
      name: current_page
      in: query
      description: Current page to look-up entries. Defaults to 1. If the number of entries returned is lesser than `page_size`, it means it's the last page and there are no more entries.
      required: false
      style: form
      schema:
        type: integer
        minimum: 1
        example: 1
        description: Current page to look-up entries
    KSMPaginationPageSizeParam:
      name: page_size
      in: query
      description: Number of entries to list per page. Defaults to `100`. specified
      required: false
      style: form
      schema:
        type: integer
        minimum: 1
        maximum: 100
        example: 1
        default: 100
        description: Number of entries to list per page
    KSMPoolIDsParam:
      name: pool_ids
      in: query
      schema:
        type: integer
        example: 118
        description: Comma separated list of pool ids. If used with `addresses`, it will return the intersection of the results
    KSMRewardsFormatParam:
      name: format
      in: query
      description: The format of the response. Defaults to `daily`
      required: false
      schema:
        type: string
        enum:
          - daily
          - era
    DYDXValidatorsParam:
      name: validators
      in: query
      description: |
        Comma-separated list of validators addresses, these addresses
        are matched with the corresponding delegator addresses. To
        fetch a specific stake, pass your wallet address and the
        validator address as parameters.
      required: false
      style: form
      explode: false
      schema:
        type: array
        items:
          type: string
          example: dydxvaloper1djqecw6nn5tydxq0shan7srv8j65clsfmnxcfu
    DYDXDelegatorsParam:
      name: delegators
      in: query
      description: |
        Comma-separated list of delegator addresses, these addresses
        are matched with the corresponding validator addresses. To
        fetch a specific stake, pass your wallet address and the
        validator address as parameters.
      required: false
      style: form
      explode: false
      schema:
        type: array
        items:
          type: string
          example: dydx1djqecw6nn5tydxq0shan7srv8j65clsf7vypl6
    DYDXAuthzFlagParam:
      name: authz
      in: query
      description: whether or not the operation returned will include authz operations, defaults to false
      required: false
      style: form
      explode: false
      schema:
        type: boolean
        default: false
    DYDXPrecisionParam:
      name: precision
      in: query
      description: Precision to use when formatting amounts
      required: false
      style: form
      explode: false
      schema:
        type: string
        enum:
          - chain
          - micro
          - atto
    TIAValidatorsParam:
      name: validators
      in: query
      description: |
        Comma-separated list of validators addresses, these addresses
        are matched with the corresponding delegator addresses. To
        fetch a specific stake, pass your wallet address and the
        validator address as parameters.
      required: false
      style: form
      explode: false
      schema:
        type: array
        items:
          type: string
          example: celestiavaloper1djqecw6nn5tydxq0shan7srv8j65clsfmnxcfu
    TIADelegatorsParam:
      name: delegators
      in: query
      description: |
        Comma-separated list of delegator addresses, these addresses
        are matched with the corresponding validator addresses. To
        fetch a specific stake, pass your wallet address and the
        validator address as parameters.
      required: false
      style: form
      explode: false
      schema:
        type: array
        items:
          type: string
          example: celestia1djqecw6nn5tydxq0shan7srv8j65clsf7vypl6
    TIAAuthzFlagParam:
      name: authz
      in: query
      description: whether or not the operation returned will include authz operations, defaults to false
      required: false
      style: form
      explode: false
      schema:
        type: boolean
        default: false
    TIAPrecisionParam:
      name: precision
      in: query
      description: Precision to use when formatting amounts
      required: false
      style: form
      explode: false
      schema:
        type: string
        enum:
          - chain
          - micro
          - atto
    ZETAValidatorsParam:
      name: validators
      in: query
      description: |
        Comma-separated list of validators addresses, these addresses
        are matched with the corresponding delegator addresses. To
        fetch a specific stake, pass your wallet address and the
        validator address as parameters.
      required: false
      style: form
      explode: false
      schema:
        type: array
        items:
          type: string
          example: zetavaloper1u9xeaqdjz3kky2ymdhdsn0ra5uy9tc3ep3yfhe
    ZETADelegatorsParam:
      name: delegators
      in: query
      description: |
        Comma-separated list of delegator addresses, these addresses
        are matched with the corresponding validator addresses. To
        fetch a specific stake, pass your wallet address and the
        validator address as parameters.
      required: false
      style: form
      explode: false
      schema:
        type: array
        items:
          type: string
          example: zeta1u9xeaqdjz3kky2ymdhdsn0ra5uy9tc3e93u460
    ZETAAuthzFlagParam:
      name: authz
      in: query
      description: whether or not the operation returned will include authz operations, defaults to false
      required: false
      style: form
      explode: false
      schema:
        type: boolean
        default: false
    ZETAPrecisionParam:
      name: precision
      in: query
      description: Precision to use when formatting amounts
      required: false
      style: form
      explode: false
      schema:
        type: string
        enum:
          - chain
          - micro
          - atto
    KAVAValidatorsParam:
      name: validators
      in: query
      description: |
        Comma-separated list of validators addresses, these addresses
        are matched with the corresponding delegator addresses. To
        fetch a specific stake, pass your wallet address and the
        validator address as parameters.
      required: false
      style: form
      explode: false
      schema:
        type: array
        items:
          type: string
          example: kavavaloper1u9xeaqdjz3kky2ymdhdsn0ra5uy9tc3ep3yfhe
    KAVADelegatorsParam:
      name: delegators
      in: query
      description: |
        Comma-separated list of delegator addresses, these addresses
        are matched with the corresponding validator addresses. To
        fetch a specific stake, pass your wallet address and the
        validator address as parameters.
      required: false
      style: form
      explode: false
      schema:
        type: array
        items:
          type: string
          example: kava1u9xeaqdjz3kky2ymdhdsn0ra5uy9tc3e93u460
    KAVAAuthzFlagParam:
      name: authz
      in: query
      description: whether or not the operation returned will include authz operations, defaults to false
      required: false
      style: form
      explode: false
      schema:
        type: boolean
        default: false
    KAVAPrecisionParam:
      name: precision
      in: query
      description: Precision to use when formatting amounts
      required: false
      style: form
      explode: false
      schema:
        type: string
        enum:
          - chain
          - micro
          - atto
    FETValidatorsParam:
      name: validators
      in: query
      description: |
        Comma-separated list of validators addresses, these addresses
        are matched with the corresponding delegator addresses. To
        fetch a specific stake, pass your wallet address and the
        validator address as parameters.
      required: false
      style: form
      explode: false
      schema:
        type: array
        items:
          type: string
          example: fetchvaloper1djqecw6nn5tydxq0shan7srv8j65clsfmnxcfu
    FETDelegatorsParam:
      name: delegators
      in: query
      description: |
        Comma-separated list of delegator addresses, these addresses
        are matched with the corresponding validator addresses. To
        fetch a specific stake, pass your wallet address and the
        validator address as parameters.
      required: false
      style: form
      explode: false
      schema:
        type: array
        items:
          type: string
          example: fetch1djqecw6nn5tydxq0shan7srv8j65clsf7vypl6
    FETAuthzFlagParam:
      name: authz
      in: query
      description: whether or not the operation returned will include authz operations, defaults to false
      required: false
      style: form
      explode: false
      schema:
        type: boolean
        default: false
    FETPrecisionParam:
      name: precision
      in: query
      description: Precision to use when formatting amounts
      required: false
      style: form
      explode: false
      schema:
        type: string
        enum:
          - chain
          - micro
          - atto
    INJValidatorsParam:
      name: validators
      in: query
      description: |
        Comma-separated list of validators addresses, these addresses
        are matched with the corresponding delegator addresses. To
        fetch a specific stake, pass your wallet address and the
        validator address as parameters.
      required: false
      style: form
      explode: false
      schema:
        type: array
        items:
          type: string
          example: injvaloper1djqecw6nn5tydxq0shan7srv8j65clsfmnxcfu
    INJDelegatorsParam:
      name: delegators
      in: query
      description: |
        Comma-separated list of delegator addresses, these addresses
        are matched with the corresponding validator addresses. To
        fetch a specific stake, pass your wallet address and the
        validator address as parameters.
      required: false
      style: form
      explode: false
      schema:
        type: array
        items:
          type: string
          example: inj1djqecw6nn5tydxq0shan7srv8j65clsf7vypl6
    INJAuthzFlagParam:
      name: authz
      in: query
      description: whether or not the operation returned will include authz operations, defaults to false
      required: false
      style: form
      explode: false
      schema:
        type: boolean
        default: false
    INJPrecisionParam:
      name: precision
      in: query
      description: Precision to use when formatting amounts
      required: false
      style: form
      explode: false
      schema:
        type: string
        enum:
          - chain
          - micro
          - atto
    TONRewardsFormatParam:
      name: format
      in: query
      description: The format of the response. Defaults to `daily`
      required: false
      schema:
        type: string
        enum:
          - daily
          - epoch
    TONNominatorsParam:
      name: nominators
      in: query
      description: Comma-separated list of nominator addresses
      required: false
      style: form
      explode: false
      schema:
        type: array
        items:
          type: string
          example: UQB0DfNVIGQTu0Ir2BevL81KyNTh0wKJTXQzciumAwzhDoOq
    TONPoolsParam:
      name: pools
      in: query
      description: Comma-separated list of pool addresses
      required: false
      style: form
      explode: false
      schema:
        type: array
        items:
          type: string
          example: Ef_zhiLfydITUXevx3NOkBKyjczc565UvqwkWp07os7EwZMa
    TONPoolParam:
      name: pool
      in: query
      description: Pool address
      required: true
      style: form
      explode: false
      schema:
        type: string
        example: Ef_zhiLfydITUXevx3NOkBKyjczc565UvqwkWp07os7EwZMa
    TONTxHashParam:
      name: tx_hash
      in: query
      description: Transaction hash
      required: false
      style: form
      explode: false
      schema:
        type: string
        example: SQ5y4jeRZzU4h/lbyWiLhTrR9A3smK5Vmm/1p9ylDFo=
    TONGetWalletInfoParam:
      name: wallet
      in: query
      description: Wallet address
      required: true
      style: form
      explode: false
      schema:
        type: string
        example: UQAfjn5-4M5H7q_2z4rCjAIGDslZoT0VsZNWaQ9BIaR4w0V9
    TRXWalletsParam:
      name: wallet
      in: query
      schema:
        type: string
        description: Comma separated list of TRX wallet addresses
        example: TAERHY5gyzDRmAaeqqa6C4Fuyc9HLnnHx7
    POSITIONWalletParam:
      name: wallet
      in: query
      description: The wallet address to filter positions by.
      required: true
      style: form
      explode: false
      example: '0x1234567890123456789012345678901234567890'
      schema:
        type: string
    POSITIONChainIDParam:
      name: chain_id
      in: query
      description: The chain IDs to filter positions by.
      example: 1,10,137
      required: false
      style: form
      explode: true
      schema:
        type: string
  schemas:
    Pagination:
      type: object
      description: Pagination information. This feature is enabled when `current_page` is specified
      required:
        - current_page
        - page_size
        - total_pages
        - total_entries
      properties:
        current_page:
          type: integer
          example: 2
          minimum: 1
          description: Current number of the page
        next_page:
          type: integer
          example: 3
          minimum: 2
          description: Number of the next page if there is one
        previous_page:
          type: integer
          example: 1
          minimum: 1
          description: Number of the previous page if there is one
        page_size:
          type: integer
          example: 25
          minimum: 1
          default: 25
          description: Number of entries per page. Can be overriden with the `page_size` parameter
        total_pages:
          type: integer
          example: 17
          minimum: 1
          description: Total number of pages
        total_entries:
          type: integer
          example: 423
          minimum: 0
          description: Total number of entries
    CoreStake:
      type: object
      required:
        - id
        - tags
        - metadata
        - protocol
        - created_at
        - updated_at
      properties:
        id:
          type: string
          format: uuid
          description: Stake id
          example: 92f5bfd4-ea38-4824-84f7-686eddff5539
        tags:
          type: array
          description: List of tags associated with the stake
          items:
            type: string
            example: tag1
        metadata:
          type: object
          description: Stake metadata
        protocol:
          type: string
          enum:
            - ethereum
            - solana
            - near
            - tezos
            - cardano
            - cosmos
            - matic
          description: Protocol name
          example: ethereum
        created_at:
          type: string
          format: date-time
          description: Creation date
          example: '2023-02-06T21:48:11.038Z'
        updated_at:
          type: string
          format: date-time
          description: Last update date
          example: '2023-02-06T21:48:11.038Z'
    AccountsResponse:
      type: array
      items:
        $ref: '#/components/schemas/Account'
    Account:
      type: object
      properties:
        created_at:
          type: string
          format: date-time
          description: Date at which the account was created
          example: '2023-02-06T21:48:11.038Z'
        id:
          type: string
          format: uuid
          description: Account id
          example: 92f5bfd4-ea38-4824-84f7-686eddff5539
        name:
          type: string
          description: Account name
          example: account name
        description:
          type: string
          nullable: true
          description: Account description
          example: account description
    BasePortfolio:
      type: object
      required:
        - token
        - name
        - total_stakes
        - total_active_stakes
        - total_balance
        - total_rewards
        - balance_share_percent
        - rewards_share_percent
      properties:
        token:
          type: string
          description: Token name
        name:
          type: string
          description: Protocol name
          example: Ethereum
        total_stakes:
          type: integer
          description: Total number of stakes for this protocol
          example: 12
        total_active_stakes:
          type: integer
          description: Total number of stakes actively collecting rewards for this protocol
          example: 10
        total_balance:
          type: object
          required:
            - amount_usd
            - amount
          properties:
            amount_usd:
              type: number
              format: float
              description: Total USD balance of stakes for this protocol
              example: 10896.4568
            amount:
              type: number
              format: float
              description: Total balance of stakes in the native protocol token for this protocol
              example: 1896.4563
        total_rewards:
          type: object
          required:
            - amount_usd
            - amount
          properties:
            amount_usd:
              type: number
              format: float
              description: Total USD of rewards earned for this protocol
              example: 10896.4568
            amount:
              type: number
              format: float
              description: Total rewards earned in the native protocol token for this protocol
              example: 1896.4568
        balance_share_percent:
          type: number
          format: float
          description: Protocol share of the total balance
          example: 42.59
          maximum: 100
        rewards_share_percent:
          type: number
          format: float
          description: Protocol share of the total rewards earned
          example: 42.59
          maximum: 100
    DefaultPortfolio:
      allOf:
        - $ref: '#/components/schemas/BasePortfolio'
        - type: object
          required:
            - token
          properties:
            token:
              type: string
              description: Token name
              example: NEAR
              enum:
                - NEAR
                - ATOM
                - POL
                - ADA
                - OSMO
                - XTZ
                - DOT
                - KSM
                - SOL
                - TIA
                - EGLD
                - ZETA
                - INJ
                - FET
                - TON
                - KAVA
                - BTC
                - OM
                - CRO
    DYDXPortfolio:
      allOf:
        - $ref: '#/components/schemas/BasePortfolio'
        - type: object
          required:
            - token
            - total_rewards_usdc
          properties:
            token:
              type: string
              description: Token name
              example: DYDX
              enum:
                - DYDX
            total_rewards_usdc:
              type: object
              required:
                - amount
                - amount_usd
              properties:
                amount:
                  type: number
                  format: float
                  description: Total rewards earned in USDC for this protocol
                  example: 10896.4568
                amount_usd:
                  type: number
                  format: float
                  description: Total USD of USDC rewards earned for this protocol
                  example: 1896.4568
    ETHPortfolio:
      allOf:
        - $ref: '#/components/schemas/BasePortfolio'
        - type: object
          required:
            - token
            - historical_grr
            - activating_stakes
            - exited_stakes
            - exiting_stakes
            - eigenlayer
          properties:
            token:
              type: string
              description: Token name
              example: ETH
              enum:
                - ETH
            historical_grr:
              type: number
              format: float
              description: Historical GRR
              example: 1.9731192967741933
            activating_stakes:
              type: object
              required:
                - amount
                - amount_usd
                - total
              properties:
                amount:
                  type: number
                  description: Total amount of ETH staked in activating stakes
                  example: 0
                amount_usd:
                  type: number
                  description: Total USD balance of ETH staked in activating stakes
                  example: 0
                total:
                  type: integer
                  description: Total number of activating stakes
                  example: 0
            exited_stakes:
              type: object
              required:
                - amount
                - amount_usd
                - total
              properties:
                amount:
                  type: number
                  description: Total amount of ETH staked in exited stakes
                  example: 32
                amount_usd:
                  type: number
                  description: Total USD balance of ETH staked in exited stakes
                  example: 74914.9572243136
                total:
                  type: integer
                  description: Total number of exited stakes
                  example: 1
            exiting_stakes:
              type: object
              required:
                - amount
                - amount_usd
                - total
              properties:
                amount:
                  type: number
                  description: Total amount of ETH staked in exiting stakes
                  example: 0
                amount_usd:
                  type: number
                  description: Total USD balance of ETH staked in exiting stakes
                  example: 0
                total:
                  type: integer
                  description: Total number of exiting stakes
                  example: 0
            eigenlayer:
              type: object
              required:
                - restaked_points
                - total_restaked
                - total_is_restakable
                - total
                - eigenpods
              properties:
                restaked_points:
                  type: number
                  description: Total restaked points
                  example: 1260256.471111111
                total_restaked:
                  type: integer
                  description: Total number of restaked stakes
                  example: 13
                total_is_restakable:
                  type: integer
                  description: Total number of stakes that can be restaked
                  example: 0
                total:
                  type: integer
                  description: Total number of eigenlayer stakes
                  example: 13
                eigenpods:
                  type: array
                  description: List of eigenpods present in the account
                  items:
                    type: string
                    example: '0x7c6ca7243cf8f37a267bf24c42c918a4e3e7d327'
    Portfolio:
      type: object
      required:
        - total_balance_usd
        - total_rewards_usd
        - total_stakes
        - total_active_stakes
        - protocols
        - updated_at
      properties:
        total_balance_usd:
          type: number
          format: float
          description: Total USD balance of all the account's stakes
          example: 182981229.16751668
        total_rewards_usd:
          type: number
          format: float
          description: Total USD of rewards earned from all the account's stakes
          example: 4526.16751668
        total_stakes:
          type: integer
          description: Total number of stakes
          example: 56
        total_active_stakes:
          type: integer
          description: Total number of stakes actively collecting rewards
          example: 52
        protocols:
          type: array
          description: List of protocols staked within the account
          items:
            type: object
            oneOf:
              - $ref: '#/components/schemas/DefaultPortfolio'
              - $ref: '#/components/schemas/DYDXPortfolio'
              - $ref: '#/components/schemas/ETHPortfolio'
        error:
          type: string
          description: Error message if some protocol data could not be retrieved
          example: 'We could not fetch data for the following protocols: TON'
        updated_at:
          type: string
          format: date-time
          description: Date at which the account portfolio was last updated. The portfolio is cached for 24h. However it gets updated every time a stake is added or deleted from the account.
          example: '2023-02-06T21:48:11.038Z'
    AccountPayload:
      type: object
      required:
        - name
        - description
      properties:
        name:
          type: string
          description: Account name
          example: name
          maxLength: 100
          minLength: 1
        description:
          type: string
          description: Account description
          example: description
          maxLength: 500
          minLength: 0
    Deployment:
      required:
        - id
        - product_type
        - name
        - display_name
        - description
        - chain
        - chain_id
        - address
        - status
        - asset_icon
        - protocol_icon
        - product_fee
      properties:
        id:
          type: string
          description: The unique ID of the deployment
          example: 9c4520b7-838c-4feb-aefa-679a498af845
        product_type:
          type: string
          enum:
            - defi
            - dedicated
            - pooling
          description: The type of product that the deployment is for
          example: defi
        name:
          type: string
          description: The name of the deployment
          example: ETH Dedicated Staking
        display_name:
          type: string
          description: The display name of the deployment (used in the UI)
          example: Dedicated Staking
        description:
          type: string
          description: The description of the deployment
          example: A Dedicated Staking deployment that earns ETH rewards
        chain:
          type: string
          enum:
            - eth
            - bsc
            - arb
            - matic
            - base
            - op
          description: The blockchain that the deployment is on
          example: eth
        chain_id:
          type: integer
          enum:
            - 42161
            - 56
            - 1
            - 137
            - 8453
            - 11155111
            - 17000
            - 10
          description: The chain ID of the deployment
          example: 1
        address:
          type: string
          description: The address of the deployment
          example: '0x81Ca2c97f491b13c1EAFeF1ae2cF72DDD1fCBFB6'
        status:
          type: string
          enum:
            - pending
            - active
            - disabled
            - deposit_paused
          description: The status of the deployment
          example: active
        asset_icon:
          type: string
          nullable: true
          description: Custom icon of the asset
          example: https://example.com/icon.png
        protocol_icon:
          type: string
          nullable: true
          description: Custom icon of the protocol
          example: https://example.com/icon.png
        product_fee:
          type: string
          description: The fee of the product (present only for `dedicated` product_type for now)
          example: '0.01'
    ETHOperationDeposit:
      type: object
      required:
        - type
        - time
        - validator_address
        - tx_hash
        - tx_sender
        - tx_gas_used
        - proxies
        - slot
        - block
        - withdrawal_credentials
        - amount
      properties:
        type:
          type: string
          example: deposit
          description: type of the operation
        time:
          type: string
          format: date-time
          description: Time of the operation
          example: '2023-01-14T01:13:59Z'
        validator_address:
          type: string
          description: Validator address of the operation
          example: '0x95373bcf8e2c64e1c373a6e534c002f210adbcc84c5abda3b6306677e171430ae50781a51c9f579a47622e334dba2412'
        validator_index:
          type: integer
          minimum: 1
          description: Index of the public key of the validator
          example: 1
        tx_hash:
          type: string
          description: Hash of the transaction
          example: '0x43244f90814b31dec250de24df5bb023a338790c1d5a39244cf1064cf6d98c94'
        tx_sender:
          type: string
          description: Address of the sender of the transaction
          example: '0x41bf25fc8c52d292bd66d3bcecd8a919ecb9ef88'
        tx_gas_used:
          type: string
          description: Gas used by the transaction in WEI
          example: '2700999916653262'
        tx_effective_gas_price:
          type: string
          description: Effective gas price used for this TX in WEI
          example: '1499997889'
        proxies:
          type: array
          example:
            - '0x1e68238cE926DEC62b3FBC99AB06eB1D85CE0270'
            - '0x43244f90814b31dec250de24df5bb023eB1D85CE'
          description: Ordered list of smart-contracts in the calling chain
          items:
            type: string
            description: Address of the smart-contract called in the deposit chain
            example: '0x1e68238cE926DEC62b3FBC99AB06eB1D85CE0270'
        slot:
          type: integer
          description: Slot of the deposit
          example: 15955054
        block:
          type: integer
          description: Block number containing the transaction
          example: 15955054
        block_base_fee:
          type: string
          description: Base fee used for this block in WEI
          example: '7'
        withdrawal_credentials:
          type: string
          description: Withdrawal credentials of the deposit
          example: 010000000000000000000000e1f4acc0affb36a805474e3b6ab786738c6900a2
        amount:
          type: string
          description: Amount in WEI of the deposit transaction
          example: '32000000000000000000000'
    ETHOperationExecutionReward:
      type: object
      required:
        - type
        - time
        - validator_address
        - validator_index
        - slot
        - block
        - amount
      properties:
        type:
          type: string
          example: execution_reward
        time:
          type: string
          format: date-time
          description: Time of the operation
          example: '2023-01-14T01:13:59Z'
        validator_address:
          type: string
          description: Validator address of the operation
          example: '0x95373bcf8e2c64e1c373a6e534c002f210adbcc84c5abda3b6306677e171430ae50781a51c9f579a47622e334dba2412'
        validator_index:
          type: integer
          minimum: 1
          description: Validator's consensus layer index
          example: '1'
        slot:
          type: integer
          description: Slot of the execution reward
          example: 15955054
        block:
          type: integer
          description: Block number of the reward
          example: 15955054
        fee_recipient:
          type: string
          description: Fee recipient of the reward
          example: '0x1e68238cE926DEC62b3FBC99AB06eB1D85CE0270'
        is_mev_block:
          type: boolean
          description: The block was created through the MEV (Maximum Extractable Value) system
          example: true
        mev_payout_tx_hash:
          type: string
          description: Hash of the MEV payout transaction when applicable. It is provided on a "best effort" basis.
          example: '0x43244f90814b31dec250de24df5bb023a338790c1d5a39244cf1064cf6d98c94'
        amount:
          type: string
          description: Amount in WEI of the reward
          example: '3467036438000000000'
    ETHOperationConsensusWithdrawal:
      type: object
      required:
        - type
        - time
        - validator_address
        - validator_index
        - slot
        - block
        - fee_recipient
        - amount
      properties:
        type:
          type: string
          example: consensus_withdrawal
        time:
          type: string
          format: date-time
          description: Time of the operation
          example: '2023-01-14T01:13:59Z'
        validator_address:
          type: string
          description: Validator address of the operation
          example: '0x95373bcf8e2c64e1c373a6e534c002f210adbcc84c5abda3b6306677e171430ae50781a51c9f579a47622e334dba2412'
        validator_index:
          type: integer
          minimum: 1
          description: Validator's consensus layer index
          example: '1'
        slot:
          type: integer
          description: Slot of the withdrawal
          example: 15955054
        block:
          type: integer
          description: Block number of the reward
          example: 15955054
        fee_recipient:
          type: string
          description: Fee recipient of the reward
          example: '0x1e68238cE926DEC62b3FBC99AB06eB1D85CE0270'
        amount:
          type: string
          description: Amount in WEI of the reward
          example: '3467036438000000000'
    ETHOperationKilnExitRequest:
      type: object
      required:
        - type
        - time
        - validator_address
        - validator_index
        - tx_hash
        - tx_gas_used
        - tx_sender
        - slot
        - block
        - emitting_contract
      properties:
        type:
          type: string
          example: kiln_exit_request
          description: type of the operation
        time:
          type: string
          format: date-time
          description: Time of the operation
          example: '2023-01-14T01:13:59Z'
        validator_address:
          type: string
          description: Validator address of the operation
          example: '0x95373bcf8e2c64e1c373a6e534c002f210adbcc84c5abda3b6306677e171430ae50781a51c9f579a47622e334dba2412'
        validator_index:
          type: integer
          minimum: 1
          description: Index of the public key of the validator
          example: 1
        tx_hash:
          type: string
          description: Hash of the transaction
          example: '0x43244f90814b31dec250de24df5bb023a338790c1d5a39244cf1064cf6d98c94'
        tx_gas_used:
          type: string
          description: Gas used by the transaction in WEI
          example: '2700999916653262'
        tx_effective_gas_price:
          type: string
          description: Effective gas price used for this TX in WEI
          example: '1499997889'
        tx_sender:
          type: string
          description: Address of the sender of the transaction
          example: '0x41bf25fc8c52d292bd66d3bcecd8a919ecb9ef88'
        slot:
          type: integer
          description: Slot of the deposit
          example: 15955054
        block:
          type: integer
          description: Block number containing the transaction
          example: 15955054
        block_base_fee:
          type: string
          description: Base fee used for this block in WEI
          example: '7'
        emitting_contract:
          type: string
          description: Address of the contract from which the request originate
          example: '0x41bf25fc8c52d292bd66d3bcecd8a919ecb9ef88'
        caller:
          type: string
          description: Address that called the contract
          example: '0x41bf25fc8c52d292bd66d3bcecd8a919ecb9ef88'
    ETHOperationLidoExitRequest:
      type: object
      required:
        - type
        - time
        - validator_address
        - validator_index
        - tx_hash
        - tx_gas_used
        - tx_sender
        - slot
        - block
        - emitting_contract
      properties:
        type:
          type: string
          example: lido_exit_request
          description: type of the operation
        time:
          type: string
          format: date-time
          description: Time of the operation
          example: '2023-01-14T01:13:59Z'
        validator_address:
          type: string
          description: Validator address of the operation
          example: '0x95373bcf8e2c64e1c373a6e534c002f210adbcc84c5abda3b6306677e171430ae50781a51c9f579a47622e334dba2412'
        validator_index:
          type: integer
          minimum: 1
          description: Index of the public key of the validator
          example: 1
        tx_hash:
          type: string
          description: Hash of the transaction
          example: '0x43244f90814b31dec250de24df5bb023a338790c1d5a39244cf1064cf6d98c94'
        tx_gas_used:
          type: string
          description: Gas used by the transaction in WEI
          example: '2700999916653262'
        tx_effective_gas_price:
          type: string
          description: Effective gas price used for this TX in WEI
          example: '1499997889'
        tx_sender:
          type: string
          description: Address of the sender of the transaction
          example: '0x41bf25fc8c52d292bd66d3bcecd8a919ecb9ef88'
        slot:
          type: integer
          description: Slot of the deposit
          example: 15955054
        block:
          type: integer
          description: Block number containing the transaction
          example: 15955054
        block_base_fee:
          type: string
          description: Base fee used for this block in WEI
          example: '7'
        emitting_contract:
          type: string
          description: Address of the contract from which the request originate
          example: '0x41bf25fc8c52d292bd66d3bcecd8a919ecb9ef88'
    ETHOperationRioExitRequest:
      type: object
      required:
        - type
        - time
        - validator_address
        - validator_index
        - tx_hash
        - tx_gas_used
        - tx_sender
        - slot
        - block
        - emitting_contract
      properties:
        type:
          type: string
          example: rio_exit_request
          description: type of the operation
        time:
          type: string
          format: date-time
          description: Time of the operation
          example: '2023-01-14T01:13:59Z'
        validator_address:
          type: string
          description: Validator address of the operation
          example: '0x95373bcf8e2c64e1c373a6e534c002f210adbcc84c5abda3b6306677e171430ae50781a51c9f579a47622e334dba2412'
        validator_index:
          type: integer
          minimum: 1
          description: Index of the public key of the validator
          example: 1
        tx_hash:
          type: string
          description: Hash of the transaction
          example: '0x43244f90814b31dec250de24df5bb023a338790c1d5a39244cf1064cf6d98c94'
        tx_gas_used:
          type: string
          description: Gas used by the transaction in WEI
          example: '2700999916653262'
        tx_effective_gas_price:
          type: string
          description: Effective gas price used for this TX in WEI
          example: '1499997889'
        tx_sender:
          type: string
          description: Address of the sender of the transaction
          example: '0x41bf25fc8c52d292bd66d3bcecd8a919ecb9ef88'
        slot:
          type: integer
          description: Slot of the deposit
          example: 15955054
        block:
          type: integer
          description: Block number containing the transaction
          example: 15955054
        block_base_fee:
          type: string
          description: Base fee used for this block in WEI
          example: '7'
        emitting_contract:
          type: string
          description: Address of the contract from which the request originate
          example: '0x41bf25fc8c52d292bd66d3bcecd8a919ecb9ef88'
    ETHOperationVoluntaryExit:
      type: object
      required:
        - type
        - time
        - validator_address
        - validator_index
        - slot
        - block
        - index_in_payload
        - message_epoch
        - message_signature
      properties:
        type:
          type: string
          example: voluntary_exit
          description: type of the operation
        time:
          type: string
          format: date-time
          description: Time of the operation
          example: '2023-01-14T01:13:59Z'
        validator_address:
          type: string
          description: Validator address of the operation
          example: '0x95373bcf8e2c64e1c373a6e534c002f210adbcc84c5abda3b6306677e171430ae50781a51c9f579a47622e334dba2412'
        validator_index:
          type: integer
          minimum: 1
          description: Index of the public key of the validator
          example: 1
        slot:
          type: integer
          description: Slot of the deposit
          example: 15955054
        block:
          type: integer
          description: Block number containing the transaction
          example: 15955054
        index_in_payload:
          type: integer
          description: Index in the list of Voluntary Exits in the block's payload
          example: 0
        message_epoch:
          type: integer
          description: Exit epoch set in the message sent to the Beacon Chain
          example: 2000
        message_signature:
          type: string
          description: Signature of the message sent to the Beacon Chain
          example: '0xabc'
    ETHStake:
      type: object
      required:
        - validator_address
        - state
        - is_kiln
        - updated_at
      properties:
        validator_address:
          type: string
          description: Public key of the validator
          example: '0x95373bcf8e2c64e1c373a6e534c002f210adbcc84c5abda3b6306677e171430ae50781a51c9f579a47622e334dba2412'
        validator_index:
          type: integer
          minimum: 1
          description: Validator's consensus layer index
          example: '1'
        state:
          type: string
          description: State of the Ethereum stake
          example: active_ongoing
          enum:
            - unknown
            - unstaked
            - deposit_in_progress
            - pending_initialized
            - pending_queued
            - active_ongoing
            - active_exiting
            - active_slashed
            - exited_unslashed
            - exited_slashed
            - withdrawal_possible
            - withdrawal_done
        activated_at:
          type: string
          description: Date of activation on the Ethereum consensus layer
          format: date-time
          example: '2023-01-14T01:13:59Z'
        activated_epoch:
          type: integer
          description: Epoch of activation on the Ethereum consensus layer
          example: 174049
        delegated_at:
          type: string
          description: Timestamp of the block at which the corresponding staking transaction was executed
          format: date-time
          example: '2023-01-14T01:13:59Z'
        delegated_block:
          description: Block at which the corresponding staking transaction was executed
          type: integer
          example: 16397387
        exited_at:
          type: string
          description: Date of exit on the Ethereum consensus layer
          format: date-time
          example: '2023-01-14T01:13:59Z'
        exited_epoch:
          type: integer
          description: Epoch of exit on the Ethereum consensus layer
          example: 174049
        deposit_tx_sender:
          type: string
          description: Address of the sender of the first deposit transaction
          example: '0xe1f4acc0affB36a805474e3b6ab786738C6900A2'
        execution_fee_recipient:
          type: string
          description: Address of the last recipient of an execution reward
          example: '0xe1f4acc0affB36a805474e3b6ab786738C6900A2'
        withdrawal_credentials:
          type: string
          description: Ethereum withdrawal credentials
          example: 010000000000000000000000e1f4acc0affb36a805474e3b6ab786738c6900a2
        effective_balance:
          type: string
          description: Effective balance in WEI of the stake as seen by the Ethereum consensus layer
          example: '32000000000000000000'
        balance:
          type: string
          description: Current balance in WEI on the Ethereum consensus layer
          example: '32076187808000000000'
        consensus_rewards:
          type: string
          description: Sum of consensus rewards in WEI earned by this stake
          example: '76187808000000000'
        execution_rewards:
          type: string
          description: Sum of execution rewards in WEI earned by this stake
          example: '0'
        rewards:
          type: string
          description: Sum of consensus and execution rewards in WEI earned by this stake
          example: '76187808000000000'
        claimable_execution_rewards:
          type: string
          description: For Kiln On-Chain stakes only, the amount of execution rewards in WEI that can be withdrawn.
          example: '76187808000000000'
        claimable_consensus_rewards:
          type: string
          description: For Kiln On-Chain stakes only, the amount of consensus rewards in WEI that can be withdrawn.
          example: '76187808000000000'
        gross_apy:
          type: number
          description: Gross annual percentage yield
          example: 3.407
        is_kiln:
          type: boolean
          description: Whether this stake is managed by Kiln
          example: true
        updated_at:
          type: string
          description: Last date this data was updated
          format: date-time
          example: '2023-01-14T01:13:59Z'
        eigenlayer:
          type: object
          required:
            - points
            - is_restaked
            - is_restakable
            - is_pending
            - is_withdrawn
            - last_checkpointed_at
          description: EigenLayer data of the stake, present if `include_eigenlayer=true` and if the stake has an EigenPod as withdrawal credentials
          properties:
            is_restaked:
              type: boolean
              description: Whether the stake is restaked
              example: true
            is_restakable:
              type: boolean
              description: Whether the stake can be restaked
              example: true
            is_pending:
              type: boolean
              description: Whether the stake is pending restakability
              example: true
            is_withdrawn:
              type: boolean
              description: Whether the stake is withdrawn from EigenLayer
              example: true
            last_checkpointed_at:
              type: integer
              description: Last timestamp this stake was checkpointed
              example: 16397387
            points:
              deprecated: true
              type: number
              description: Amount of restaked points of the stake
              example: 16287.724444444444
        estimated_next_skimming_slot:
          type: integer
          description: Estimation of the next slot where the validator's CL rewards will be skimmed
          example: 16397387
        estimated_next_skimming_at:
          type: string
          description: Estimation of when the validator's CL rewards will be skimmed
          format: date-time
          example: '2023-01-14T01:13:59Z'
        exit_requested:
          type: boolean
          description: Set if an exit was requested for this stake. This is only applicable to kiln stakes until EIP-7002 (Pectra upgrade).
    PostETHStakesPayload:
      type: object
      required:
        - stakes
        - account_id
      properties:
        stakes:
          type: array
          items:
            type: object
            properties:
              validator:
                type: string
                description: Validator pubkey
                example: '0x95373bcf8e2c64e1c373a6e534c002f210adbcc84c5abda3b6306677e171430ae50781a51c9f579a47622e334dba2412'
        account_id:
          type: string
          description: Kiln Account ID
          example: 92f5bfd4-ea38-4824-84f7-686eddff5539
    ETHReward:
      type: object
      required:
        - date
        - consensus_rewards
        - execution_rewards
        - rewards
        - stake_balance
        - gross_apy
        - cl_apy
        - el_apy
      properties:
        date:
          type: string
          description: Day for this reward entry
          format: date
          example: '2023-01-15'
        consensus_rewards:
          type: string
          description: Accumulated consensus rewards WEI during the day
          example: '2988504000000000'
        execution_rewards:
          type: string
          description: Accumulated execution rewards in WEI during the day (MEV + non-MEV)
          example: '0'
        mev_execution_rewards:
          type: string
          description: Sum of execution rewards in WEI earned by this stake via MEV. Only available when the 'scope' parameter is used.
          example: '0'
        non_mev_execution_rewards:
          type: string
          description: Sum of execution rewards in WEI earned by this stake without MEV. Only available when the 'scope' parameter is used.
          example: '0'
        median_execution_reward:
          type: string
          description: Median execution reward in WEI for the day (MEV + non-MEV). Only available when the 'scope' parameter is used.
          example: '0'
        rewards:
          type: string
          description: Accumulated consensus and execution rewards in WEI during the day
          example: '2988504000000000'
        stake_balance:
          type: string
          description: Sum of effective balances in WEI that contributed to these rewards
          example: '64000000000000000000'
        gross_apy:
          type: number
          description: Gross annual percentage yield
          example: 3.407
        cl_apy:
          type: number
          description: Consensus annual percentage yield
          example: 3.407
        el_apy:
          type: number
          description: Execution annual percentage yield
          example: 0
        active_validator_count:
          type: number
          description: Weighted number of active validators during the day. Only available when the 'scope' parameter is used.
          example: 152636.33
        rewards_usd:
          type: number
          description: Estimated value of rewards generated for that day in USD. The exchange rate is the rate at the end of the day provided by CoinGeckko.
        stake_balance_usd:
          type: number
          description: Estimated value of the staked balance at the beginning of the day in USD. The exchange rate is the rate at the end of the day provided by CoinGeckko.
    ETHNetworkStats:
      type: object
      required:
        - network_gross_apy
        - supply_staked_percent
        - eth_price_usd
        - estimated_entry_time_seconds
        - estimated_exit_time_seconds
        - estimated_withdrawal_time_seconds
        - nb_validators
        - updated_at
      properties:
        network_gross_apy:
          type: number
          description: Gross annual percentage yield
          example: 4.5
        supply_staked_percent:
          type: number
          description: Supply of Ethereum currently staked
          example: 12.4
        eth_price_usd:
          type: number
          description: Price of Ethereum in USD
          example: 2000
        estimated_entry_time_seconds:
          type: number
          description: Estimated queue entry time in seconds from a deposit to an active stake
          example: 3600
        estimated_exit_time_seconds:
          type: number
          description: Estimated queue exit time in seconds from an exit request to an exited stake
          example: 3600
        estimated_withdrawal_time_seconds:
          type: number
          description: Estimated time for a stake to receive Consensus rewards on the execution layer
          example: 3600
        nb_validators:
          type: number
          description: Number of active validators on the network
          example: 100
        updated_at:
          type: string
          description: Last time the data was updated
          format: date-time
          example: '2023-01-14T01:13:59Z'
    ETHKilnStats:
      type: object
      required:
        - gross_apy
        - updated_at
      properties:
        gross_apy:
          type: object
          required:
            - last_1d
            - last_7d
            - last_30d
          properties:
            last_1d:
              type: number
              description: Kiln's average APR from yesterday
            last_7d:
              type: number
              description: Kiln's average APR from the last 7 days
            last_30d:
              type: number
              description: Kiln's average APR from the last 30 days
            updated_at:
              type: string
              description: Last date the data was updated
              format: date
              example: '2023-01-14'
    ETHExitMessage:
      type: object
      required:
        - validator_address
        - gpg_public_key
        - payload
        - updated_at
      properties:
        validator_address:
          type: string
          description: Public key of the validator
          example: '0x95373bcf8e2c64e1c373a6e534c002f210adbcc84c5abda3b6306677e171430ae50781a51c9f579a47622e334dba2412'
        gpg_public_key:
          type: string
          description: GnuPG UID of the public key used to encrypt payload
          example: Hubert Bonisseur de La Bath (hubert) <hubert@kiln.fi>
        payload:
          type: string
          description: GnuPG encrypted consensus message to exit the validator
          example: |
            -----BEGIN PGP MESSAGE-----

            hQEMAw2MqHavoVh9AQf/f5paxAuOB25SlXqKmLea0yHJBXnwuMuByfDZbXOBe4mD
            iXz4ZJakeKGLbeJ/pP3Nwtu9vnIagQKF0YVNmrenkt8bL1jo/B6r34ycGIat/+GX
            1dc3GxyOBxju2q4JMe5chXdR4HXX3uU9QaynD24D5tsFgTxGM2I8JqV6BXEXgbBZ
            MXqtAjBcYd+krE1w135fuEYA6Nb/89QjLPcWXk92aS1K0WC39iAZxPsa7nyuhvRg
            dGXGQX+RrJ8jHAS4a074C3eAB3wCecvDk9d+FoUI3kaczUd4Ew7vUY0FX55oO60N
            qZxA5VwSHTfoH4fNPINeKr4Dx1mVLNcNM3z5qWcA6NKaAQak+arCnAYhLFCg/ydh
            zEcEWW1ebI4Ab3aweR17jme2I+XoWEwIBtUX7op6K7RUb3x9cBdGy4PDw6syBQJ3
            LExv8qZ43F9u0hD8UizpYQZESduT3x+To1/UQ3qBILuq2yszWaXP/kav1+fafLNb
            yEuHE2EoB27vDv6hSpwlDrXesGoMCc5NlAZBLnWiUcwzu2X19ASWnBSAmQ==
            =9AeP
            -----END PGP MESSAGE-----
        updated_at:
          type: string
          description: When the exit message was generated
          format: date-time
          example: '2023-01-14T01:13:59Z'
    ETHEigenLayerMetadata:
      type: object
      required:
        - name
        - website
        - description
        - logo
        - twitter
        - updated_at
      properties:
        name:
          type: string
          description: Name of the operator
          example: Kiln
        website:
          type: string
          description: Website of the operator
          example: https://kiln.fi
        description:
          type: string
          description: Description of the operator
          example: Enterprise-grade staking made easy
        logo:
          type: string
          description: URL of the operator's logo
          example: https://raw.githubusercontent.com/kilnfi/public/main/icon.png
        twitter:
          type: string
          description: Twitter handle of the operator
          example: https://twitter.com/Kiln_finance
        updated_at:
          type: integer
          description: Last time the metadata was fetched
          example: 1711479048
    ETHEigenLayerAvsReward:
      type: object
      required:
        - token_address
        - token_symbol
        - token_decimals
        - claimable_amount
      properties:
        token_address:
          type: string
          description: Address of the token
          example: '0xc02aaa39b223fe8d0a0e5c4f27ead9083c756cc2'
        token_symbol:
          type: string
          description: Symbol of the token
          example: EIGEN
        token_decimals:
          type: integer
          description: Decimals of the token
          example: 18
        claimable_amount:
          type: string
          description: Amount of claimable rewards
          example: '423768272961631825'
    ETHEigenLayerSummary:
      type: object
      required:
        - eigenpod
        - owner
        - delegated_to
        - eigenpod_queuable_restaked_balance
        - eigenpod_redelegatable_balance
        - eigenpod_available_balance
        - eigenpod_pending_balance
        - eigenpod_withdrawable_balance
        - beaconchain_restaked_balance
        - beaconchain_pending_balance
        - beaconchain_restakable_balance
      properties:
        eigenpod:
          type: string
          description: Address of the EigenPod
          example: '0x991c468AbcE2b4DD627a6210C145373EbABdd186'
        owner:
          type: string
          description: Address of the owner of the EigenPod
          example: '0x7fF0B7D8b99E4cD685355A786B6ad5287B6552C1'
        delegated_to:
          nullable: true
          type: string
          description: Address of the operator the owner is delegated to
          example: '0xA4e245C3a1Cb2F0512a71B9CD908dCa2F1641781'
        eigenpod_queuable_restaked_balance:
          type: string
          description: The EigenPod's `withdrawableRestakedExecutionLayerGwei` minus the sum of undelegations that are already or will be withdrawable for ETH
          example: '233079323000000000'
        eigenpod_redelegatable_balance:
          type: string
          description: The sum of undelegations that are claimable but cannot be withdrawn for ETH
          example: '233079323000000000'
        eigenpod_available_balance:
          type: string
          description: The EigenPod's balance minus the `withdrawableRestakedExecutionLayerGwei`
          example: '233079323000000000'
        eigenpod_pending_balance:
          type: string
          description: |
            The minimum between:
              - The sum of undelegations that are not yet claimable and are withdrawable for ETH.
              - The EigenPod's balance minus the sum of undelegations that are withdrawable for ETH
          example: '233079323000000000'
        eigenpod_withdrawable_balance:
          type: string
          description: The sum of undelegations that are withdrawable for ETH
          example: '233079323000000000'
        beaconchain_restaked_balance:
          type: string
          description: The sum of active validators that are restaked in the EigenPod
          example: '64000000000000000000'
        beaconchain_pending_balance:
          type: string
          description: The sum of validators that are not restaked in the eigenpod and that are not `active_ongoing`
          example: '32000000000000000000'
        beaconchain_restakable_balance:
          type: string
          description: The sum of validators that are not restaked in the eigenpod and that are `active_ongoing`
          example: '32000000000000000000'
    ETHEigenLayerOperator:
      type: object
      required:
        - operator
        - avs
      properties:
        operator:
          type: object
          required:
            - address
            - metadata
            - shares_breakdown
          properties:
            address:
              type: string
              description: Address of the operator
              example: '0xa4e245c3a1cb2f0512a71b9cd908dca2f1641781'
            metadata:
              description: Metadata of the operator
              $ref: '#/components/schemas/ETHEigenLayerMetadata'
            shares_breakdown:
              description: Breakdown of the shares of the operator
              type: array
              items:
                type: object
                required:
                  - strategy
                  - token
                  - shares
                properties:
                  strategy:
                    type: string
                    description: Address of the strategy
                    example: '0x31b6f59e1627cefc9fa174ad03859fc337666af7'
                  token:
                    type: string
                    description: Address of the token
                    example: '0xb4f5fc289a778b80392b86fa70a7111e5be0f859'
                  shares:
                    type: string
                    description: Amount of shares
                    example: '10000000000000000'
        avs:
          type: array
          items:
            type: object
            required:
              - address
              - metadata
            properties:
              address:
                type: string
                description: Address of the AVS
                example: '0xa7b2e7830c51728832d33421670dbbe30299fd92'
              metadata:
                description: Metadata of the AVS
                $ref: '#/components/schemas/ETHEigenLayerMetadata'
    ETHEigenLayerLiquidDeposit:
      type: object
      required:
        - id
        - staker
        - strategy
        - token
        - shares
        - block_number
        - timestamp
        - tx_hash
      properties:
        id:
          type: string
          description: Unique hash of the deposit
          example: '0x00000abacf28adf70937550a99b01a745bf49a58893fb1a2383973f1c9e0862ea1000000'
        staker:
          type: string
          description: Address that made the deposit
          example: '0x7ff0b7d8b99e4cd685355a786b6ad5287b6552c1'
        strategy:
          type: string
          description: Address of the strategy used for the deposit
          example: '0x7d704507b76571a51d9cae8addabbfd0ba0e63d3'
        token:
          type: string
          description: Address of the token deposited
          example: '0x3f1c547b21f65e10480de3ad8e19faac46c95034'
        shares:
          type: string
          description: Amount of shares deposited
          example: '100035705916232161'
        block_number:
          type: integer
          description: Block number of the deposit
          example: 1260927
        timestamp:
          type: integer
          description: Timestamp of the deposit
          example: 1711990200
        tx_hash:
          type: string
          description: Hash of the transaction of the deposit
          example: '0xb46702e30e723fad1e03a95baa5183f4d05e497429f6e89476d2383ddafe3224'
    ETHEigenLayerNativePoints:
      type: object
      required:
        - total
        - breakdown
      properties:
        total:
          type: number
          description: Total amount of native restaked points
          example: 1321313.12313
        breakdown:
          type: array
          description: Breakdown of native restaked points per validator
          items:
            type: object
            required:
              - validator_address
              - points
            properties:
              validator_address:
                type: string
                description: Validator address
                example: '0x800390da57b384873178a7db4e0b80bc1ed6528510713bcef75f46d339a7bd4957f54159c375d7dc811e52122ad9b604'
              points:
                type: number
                description: Amount of native restaked points
                example: 16234.9066666
    ETHEigenLayerLiquidPoints:
      type: object
      required:
        - total
        - breakdown
      properties:
        total:
          type: number
          description: Total amount of liquid restaked points
          example: 1321313.12313
        breakdown:
          type: array
          description: Breakdown of liquid restaked points per strategy
          items:
            type: object
            required:
              - strategy
              - token
              - points
            properties:
              strategy:
                type: string
                description: Address of the strategy
                example: '0x7d704507b76571a51d9cae8addabbfd0ba0e63d3'
              token:
                type: string
                description: Address of the token
                example: '0x3f1c547b21f65e10480de3ad8e19faac46c95034'
              points:
                type: number
                description: Amount of liquid restaked points
                example: 45.2870433486
    ETHEigenLayerLiquidWithdrawal:
      type: object
      required:
        - id
        - withdrawer
        - delegated_to
        - staker
        - nonce
        - tokens
        - block_number
        - tx_hash
        - timestamp
        - claimable
        - claimable_at_block
        - claimed
        - claimed_tx_hash
      properties:
        id:
          type: string
          description: Unique hash of the withdrawal values
          example: '0x116d1dbc99ec69f11fecbf409e0e7a204df2bbd6df606138092b2f4748dc254c00000000'
        withdrawer:
          type: string
          description: Address of the withdrawer
          example: '0x991c468abce2b4dd627a6210c145373ebabdd186'
        staker:
          type: string
          description: Address of the staker
          example: '0x991c468abce2b4dd627a6210c145373ebabdd186'
        delegated_to:
          type: string
          description: Address of the current delegation
          example: '0xa4e245c3a1cb2f0512a71b9cd908dca2f1641781'
        nonce:
          type: integer
          description: Nonce of the withdrawal
          example: 4
        tokens:
          type: array
          description: List of tokens withdrawn
          items:
            type: object
            required:
              - strategy
              - token
              - shares
            properties:
              strategy:
                type: string
                description: Address of the strategy used for the withdrawal
                example: '0x7d704507b76571a51d9cae8addabbfd0ba0e63d3'
              token:
                type: string
                description: Address of the token withdrawn
                example: '0x3f1c547b21f65e10480de3ad8e19faac46c95034'
              shares:
                type: string
                description: Amount of shares withdrawn
                example: '1951305012863276'
        block_number:
          type: integer
          description: Block number of the withdrawal
          example: 1260939
        timestamp:
          type: integer
          description: Timestamp of the withdrawal
          example: 1711990356
        tx_hash:
          type: string
          description: Transaction hash of the withdrawal
          example: '0xb4677739bc1fb3402c63111be2b593aa9b8e1db6b99f68114f8b177c082bb151'
        claimable:
          type: boolean
          description: Whether the withdrawal can be claimed
          example: true
        claimable_at_block:
          type: integer
          description: Block number at which the withdrawal can be claimed
          example: 1260949
        claimed:
          type: boolean
          description: Whether the withdrawal has been claimed
          example: true
        claimed_tx_hash:
          type: string
          nullable: true
          description: Transaction hash of when it was claimed
          example: '0x7702378acb84937775e575a91b679bf911beb1202a7105cbfdf1c4071ab70f98'
    ETHEigenLayerNativeUndelegation:
      type: object
      required:
        - id
        - shares
        - staker
        - delegated_to
        - withdrawer
        - nonce
        - block_number
        - timestamp
        - tx_hash
        - claimable
        - claimable_at_block
        - claimed
        - claimed_tx_hash
        - withdrawable_as_eth
      properties:
        id:
          type: string
          description: Unique hash of the withdrawal values
          example: '0x116d1dbc99ec69f11fecbf409e0e7a204df2bbd6df606138092b2f4748dc254c00000000'
        shares:
          type: string
          description: Amount of native ETH withdrawn
          example: '1017210384000000000'
        staker:
          type: string
          description: Address of the staker
          example: '0x991c468abce2b4dd627a6210c145373ebabdd186'
        delegated_to:
          type: string
          description: Address of the current delegation
          example: '0xa4e245c3a1cb2f0512a71b9cd908dca2f1641781'
        withdrawer:
          type: string
          description: Address of the withdrawer
          example: '0x991c468abce2b4dd627a6210c145373ebabdd186'
        nonce:
          type: string
          description: Nonce of the withdrawal
          example: '4'
        block_number:
          type: integer
          description: Block number of the withdrawal
          example: 1301849
        timestamp:
          type: integer
          description: Timestamp of the withdrawal
          example: 1712523564
        tx_hash:
          type: string
          description: Hash of the transaction of the withdrawal
          example: '0x3780bb9a46d0d9a3279f744cf3a9700d58d99a662f891659f0b3428c0bb69030'
        claimable:
          type: boolean
          description: Whether the withdrawal can be claimed
          example: true
        claimable_at_block:
          type: integer
          description: Block number at which the withdrawal can be claimed
          example: 19200000
        claimed:
          type: boolean
          description: Whether the withdrawal has been claimed
          example: false
        claimed_tx_hash:
          type: string
          nullable: true
          description: Hash of the transaction of the claim
          example: '0x6b6823670af880e4394d9602a8dd86e95a88cd9ec2440903715537d7bd3e94a5'
        withdrawable_as_eth:
          type: boolean
          description: Whether the withdrawal can be claimed as token when calling `completeQueuedWithdrawals` by passing the parameter `receiveAsTokens=true`
          example: true
    ETHSignedTx:
      type: object
      required:
        - signed_tx_serialized
      properties:
        signed_tx_serialized:
          type: string
          description: Signed serialized transaction
          example: '0x20a40259b763d549dfa1c082776a036dd8dabbe8b5e32ee721be017512dc'
    ETHBroadcastTxPayload:
      type: object
      required:
        - tx_serialized
      properties:
        tx_serialized:
          type: string
          description: Signed serialized transaction
          example: '0x20a40259b763d549dfa1c082776a036dd8dabbe8b5e32ee721be017512dc'
    ETHBroadcastedTx:
      type: object
      required:
        - tx_hash
      properties:
        tx_hash:
          type: string
          description: Hash of the transaction
          example: '0x43244f90814b31dec250de24df5bb023a338790c1d5a39244cf1064cf6d98c94'
    ETHPostKeysPayload:
      type: object
      required:
        - account_id
        - number
        - withdrawal_address
      properties:
        account_id:
          type: string
          example: b7177fd2-fbb3-479f-aa92-db9fb16e229f
          format: uuid
          description: Kiln Account ID to stake into.
        withdrawal_address:
          type: string
          example: '0xe1f4acc0affB36a805474e3b6ab786738C6900A2'
          description: |
            Ethereum withdrawal address used for the withdrawals credentials of the validators.
            This is the address that will receive consensus rewards.
            BLS format is not supported.
            This address is used as the execution-layer fee-recipient unless `fee_recipient_address` is specified.
        fee_recipient_address:
          type: string
          example: '0xe1f4acc0affB36a805474e3b6ab786738C6900A2'
          description: |
            Ethereum fee-recipient address for execution rewards.
            Uses the `withdrawal_address` both for consensus and execution rewards if not specified.
        number:
          type: number
          minimum: 1
          maximum: 150
          example: 1
          description: Number of validator keys to generate. You can generate up to 150 keys at once.
        format:
          type: string
          default: batch_deposit
          enum:
            - cli_deposit
            - batch_deposit
          example: cli_deposit
          description: Response format. Use `"cli_deposit"` for more information about each key.
    ETHPostKeysOnChainPayload:
      type: object
      required:
        - account_id
        - number
        - fee_recipient_contract_address
        - staking_contract_address
      properties:
        account_id:
          type: string
          example: b7177fd2-fbb3-479f-aa92-db9fb16e229f
          format: uuid
          description: Kiln Account ID to stake into.
        number:
          type: number
          minimum: 1
          maximum: 150
          example: 1
          description: Number of validator keys to generate. You can generate up to 150 keys at once.
        fee_recipient_contract_address:
          type: string
          example: '0xe1f4acc0affB36a805474e3b6ab786738C6900A2'
          description: |
            Kiln V1 Smart-contract that will handle the dispatch of fees.
        staking_contract_address:
          type: string
          example: '0xe1f4acc0affB36a805474e3b6ab786738C6900A2'
          description: |
            Kiln V1 Smart-contract used to stake generated keys.
    ETHPostKeysVSuitePayload:
      type: object
      required:
        - account_id
        - number
      properties:
        account_id:
          type: string
          example: b7177fd2-fbb3-479f-aa92-db9fb16e229f
          format: uuid
          description: Kiln Account ID to stake into.
        number:
          type: number
          minimum: 1
          maximum: 150
          example: 1
          description: Number of validator keys to generate. You can generate up to 150 keys at once.
        factory_contract_address:
          type: string
          example: '0xe1f4acc0affB36a805474e3b6ab786738C6900A2'
          description: |
            Smart-Contract address on the Ethereum execution layer of the Kiln vSuite Factory.
    ETHPostKeysCliResponse:
      type: array
      items:
        type: object
        required:
          - format
          - pubkey
          - withdrawal_credentials
          - amount
          - signature
          - deposit_message_root
          - deposit_data_root
          - fork_version
          - network_name
          - deposit_cli_version
        properties:
          format:
            type: string
            enum:
              - cli_deposit
            example: cli_deposit
            description: Format of the key
          pubkey:
            type: string
            example: 8f36e2f4e921b1ed5ce9c94f21e1f26a748ac4e0c57f0d8973e7d576a2f8953b87dd86300de718238de23b1fecb19db5
            description: Public key of the validator
          withdrawal_credentials:
            type: string
            example: 010000000000000000000000e1f4acc0affb36a805474e3b6ab786738c6900a2
            description: Withdrawals credentials of the validator
          amount:
            type: number
            example: 32000000000
            description: Amount in GWEI that needs to be deposited to activate the validator
          signature:
            type: string
            example: b7947eabf631d4772c4014a9fec2ecac2c15fc5175ad83023bbdfc9e6618cb8e78829231477c060bc9339482058ff195141f2aeb801c0329a1a4afebd7e76ce0ba1d9d88f8820d052836a79d59aea673db9eb5009db4a4f6e04fb7ffbdbdd604
            description: BLS signature for the deposit data structure required to stake on the Ethereum chain
          deposit_message_root:
            type: string
            example: 65db6ae73c6465311a7acf2cd8a2863eececf09901872550639f0d8f6c1876f5
            description: Root hash ensuring the deposit message integrity
          deposit_data_root:
            type: string
            example: 9b74cccf3a3c501374179be4bb6f505c4b40da41c205a101db3342a8df0af2dd
            description: Root hash ensuring the deposit data integrity
          fork_version:
            type: string
            example: '00000000'
            description: Identifier for the fork version
          network_name:
            type: string
            example: mainnet
            description: Ethereum network for the generated validation key(s)
          deposit_cli_version:
            type: string
            example: 2.2.0
            description: Version of the deposit-cli tool used to generate the validation key
    ETHPostKeysBatchResponse:
      type: object
      required:
        - format
        - pubkeys
        - withdrawal_credentials
        - signatures
        - deposit_data_roots
      properties:
        format:
          type: string
          enum:
            - batch_deposit
          example: batch_deposit
          description: Format of the key
        pubkeys:
          type: array
          description: Public keys of the validators
          items:
            type: string
            example: 8f36e2f4e921b1ed5ce9c94f21e1f26a748ac4e0c57f0d8973e7d576a2f8953b87dd86300de718238de23b1fecb19db5
            description: Public key of a validator
        withdrawal_credentials:
          type: array
          description: Withdrawals credentials of the validators
          items:
            type: string
            example: 010000000000000000000000e1f4acc0affb36a805474e3b6ab786738c6900a2
            description: Withdrawals credentials of a validator
        signatures:
          type: array
          description: BLS signatures for the deposit data structure required to stake on the Ethereum chain
          items:
            type: string
            example: b7947eabf631d4772c4014a9fec2ecac2c15fc5175ad83023bbdfc9e6618cb8e78829231477c060bc9339482058ff195141f2aeb801c0329a1a4afebd7e76ce0ba1d9d88f8820d052836a79d59aea673db9eb5009db4a4f6e04fb7ffbdbdd604
            description: BLS signature for the deposit data structure required to stake on the Ethereum chain
        deposit_data_roots:
          type: array
          description: Root hashes ensuring the deposit data integrity
          items:
            type: string
            example: 37e329240dd23a4bcd86cd62b97fdf0873b565876f29678e1edbf5514fe344d6
            description: Root hashes ensuring the deposit data integrity
    ETHCraftStakeTxPayload:
      type: object
      required:
        - account_id
        - wallet
        - amount_wei
      properties:
        account_id:
          type: string
          example: b7177fd2-fbb3-479f-aa92-db9fb16e229f
          format: uuid
          description: Kiln Account ID to stake into
        wallet:
          type: string
          example: '0xe1f4acc0affB36a805474e3b6ab786738C6900A2'
          description: Wallet to stake from and be used as a withdrawal credentials in the deposit. Losing access to this wallet will result in losing the stake.
        amount_wei:
          type: string
          example: '32000000000000000000'
          description: Amount to stake in WEI (must be a multiple of "32000000000000000000")
    ETHCraftRequestExitTxPayload:
      type: object
      required:
        - wallet
        - validators
      properties:
        wallet:
          type: string
          example: '0xe1f4acc0affB36a805474e3b6ab786738C6900A2'
          description: Wallet to request-exit from, it must be the owner of the stake OR of the EigenPod which owns this stake.
        validators:
          type: array
          example:
            - '0x8015a0ef9bf2cf742b5dc34c117ecd0191f27a8748a40cdfa27dbbbe6d6a52066d0743e8a9b7f5c7c2e9fa6db4943a70'
          description: Public keys of the validators to exit
          items:
            type: string
            example: '0x8015a0ef9bf2cf742b5dc34c117ecd0191f27a8748a40cdfa27dbbbe6d6a52066d0743e8a9b7f5c7c2e9fa6db4943a70'
            description: Public key of a validator
    ETHPrepareTxPayload:
      type: object
      required:
        - unsigned_tx_serialized
        - r
        - s
        - v
      properties:
        unsigned_tx_serialized:
          type: string
          description: Unsigned serialized transaction
          example: '0x20a40259b763d549dfa1c082776a036dd8dabbe8b5e32ee721be017512dc'
        r:
          type: string
          description: r part of the ECDSA signature in hex
          example: de28e9efee4c8de422a3c64bfaaee11a32f7cf12bdd3f00dcce41a79fe776c65
        s:
          type: string
          description: s part of the ECDSA signature in hex
          example: 3f233eb69495fa4741ad28ef0ba40612bacaf08331fd76041c371f5a2ecc2ab5
        v:
          type: number
          description: v part of the ECDSA signature (0 or 1)
          example: 0
    ETHTxStatus:
      type: object
      properties:
        status:
          type: string
          enum:
            - success
            - error
            - pending_confirmation
          description: Transaction status
          example: success
        receipt:
          type: object
          description: Transaction receipt. Object shape can be found [here](https://github.com/web3/web3.js/blob/c5072a35996eb232e2742e92b612c07ba7af98ab/packages/web3-types/src/eth_types.ts#L299)
          example:
            blockHash: '0x54a0603e3f39e5d358623c8cd86a628a2999c993c1bdd6e547c45632784bd1d7'
            blockNumber: 8608123
            contractAddress: null
            cumulativeGasUsed: 8180146
            effectiveGasPrice: 27391741855
            from: '0x9ce658155a6f05fe4aef83b7fa8f431d5e8ccb55'
            gasUsed: 70098
            logs:
              - address: '0xff50ed3d0ec03aC01D4C79aAd74928BFF48a7b2b'
                blockHash: '0x54a0603e3f39e5d358623c8cd86a628a2999c993c1bdd6e547c45632784bd1d7'
                blockNumber: 8608123
                data: '0x00000000000000000000000000000000000000000000000000000000000000a00000000000000000000000000000000000000000000000000000000000000100000000000000000000000000000000000000000000000000000000000000014000000000000000000000000000000000000000000000000000000000000001800000000000000000000000000000000000000000000000000000000000000200000000000000000000000000000000000000000000000000000000000000003093b5ae8053213154d099ed7fc99f571a0c8124601f8a59540335c7c35e0b40aad7b033f84af365185c04812acab257460000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000200100000000000000000000009ce658155a6f05fe4aef83b7fa8f431d5e8ccb550000000000000000000000000000000000000000000000000000000000000008004059730700000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000609395a07d5e7eb073725049ecba8144d850b7a1a58f603fd1fc12049d32c98db47e3d81608074bca20ccdcc94f7f4767d0d6b852edf4f6231532f33242e64d0617ac93465bc4cdabe9cebf0abe6d169830fcf375b28c0641487e5f86df2875a970000000000000000000000000000000000000000000000000000000000000008ecce030000000000000000000000000000000000000000000000000000000000'
                logIndex: 150
                removed: false
                topics:
                  - '0x649bbc62d0e31342afea4e5cd82d4049e7e1ee912fc0889aa790803be39038c5'
                transactionHash: '0x25f259a770539a4be99f972620b74219d67cd990d245bcc8d8ad5cddeaa37375'
                transactionIndex: 33
                id: log_4115d183
              - address: '0x5FaDfdb7eFffd3B4AA03f0F29d9200Cf5F191F31'
                blockHash: '0x54a0603e3f39e5d358623c8cd86a628a2999c993c1bdd6e547c45632784bd1d7'
                blockNumber: 8608123
                data: '0x000000000000000000000000000000000000000000000000000000000000004000000000000000000000000000000000000000000000000000000000000000a0000000000000000000000000000000000000000000000000000000000000003093b5ae8053213154d099ed7fc99f571a0c8124601f8a59540335c7c35e0b40aad7b033f84af365185c04812acab257460000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000200100000000000000000000009ce658155a6f05fe4aef83b7fa8f431d5e8ccb55'
                logIndex: 151
                removed: false
                topics:
                  - '0x737feedde71ce80c08f73125e4350b001be2dfb6a00fb455086c2b0a514cdfac'
                transactionHash: '0x25f259a770539a4be99f972620b74219d67cd990d245bcc8d8ad5cddeaa37375'
                transactionIndex: 33
                id: log_b4bb5ff7
            logsBloom: '0x
            status: true
            to: '0x5fadfdb7efffd3b4aa03f0f29d9200cf5f191f31'
            transactionHash: '0x25f259a770539a4be99f972620b74219d67cd990d245bcc8d8ad5cddeaa37375'
            transactionIndex: 33
            type: '0x2'
    ETHUnsignedTx:
      type: object
      required:
        - unsigned_tx_hash
        - unsigned_tx_serialized
        - to
        - contract_call_data
        - amount_wei
        - nonce
        - gas_limit
        - max_priority_fee_per_gas_wei
        - max_fee_per_gas_wei
        - chain_id
      properties:
        unsigned_tx_hash:
          type: string
          description: Hash of the unsigned transaction
          example: '0x43244f90814b31dec250de24df5bb023a338790c1d5a39244cf1064cf6d98c94'
        unsigned_tx_serialized:
          type: string
          description: Unsigned serialized transaction
          example: '0x20a40259b763d549dfa1c082776a036dd8dabbe8b5e32ee721be017512dc'
        to:
          type: string
          description: Contract address of the transaction recipient
          example: '0x0d4a11d5eeaac28ec3f61d100daf4d40471f1852'
        contract_call_data:
          type: string
          description: Hex encoded contract data to be sent with the transaction
          example: '0xca0bfcce0000000000000000000000000000000000000000000000000000000000000080000000000000000000000000000000000000000000000000000000000000012000000000000000000000000000000000000000000000000000000000000001a000000000000000000000000000000000000000000000000000000000000002600000000000000000000000000000000000000000000000000000000000000001000000000000000000000000000000000000000000000000000000000000002000000000000000000000000000000000000000000000000000000000000000309696c02ec4dbb99f714e26ff1acdf6b258d36dcbad7b8b549553bc99b94ea639cd247f31683564995afd48568c1b6edd00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000100000000000000000000000000000000000000000000000000000000000000200000000000000000000000000000000000000000000000000000000000000020010000000000000000000000bc86717bad3f8ccf86d2882a6bc351c94580a994000000000000000000000000000000000000000000000000000000000000000100000000000000000000000000000000000000000000000000000000000000200000000000000000000000000000000000000000000000000000000000000060a3869da2ed5cc558f016d59fc5ceb0cac28e58743836aa3cf146221f1ef0b959e3cc5c589e05e171f1473596aadf36411767ad92edaae421ba0291bd7568267b3faabc3ab6ed9ddfc048ea6640370977f16f4f626a0e567a11ba25acdc520bb000000000000000000000000000000000000000000000000000000000000000012dd65914dda46639df6344701de54ac3ebe34a4b230262d3017fcd6c29954452'
        amount_wei:
          type: string
          description: Amount of ETH to send in wei
          example: '32000000000000000000'
        nonce:
          type: integer
          description: Nonce of the transaction
          example: 1
        gas_limit:
          type: integer
          description: Gas limit of the transaction in gas units. We provide a default value of two times the estimated gas limit
          example: 140244
        max_priority_fee_per_gas_wei:
          type: string
          description: Max priority fee per gas in wei. This is basically the miner fee. We provide a default value of 2 gwei so transactions are mined faster.
          example: '2000000000'
        max_fee_per_gas_wei:
          type: string
          description: Max fee per gas in wei. This is the maxium amount of gas that you are willing to pay for the transaction.
          example: '383687469748'
        chain_id:
          type: integer
          description: Chain ID of the network
          example: 1
    DefiStake:
      required:
        - owner
        - current_balance
        - total_rewards
        - current_rewards
        - total_deposited_amount
        - total_withdrawn_amount
        - vault
        - chain
        - updated_at_block
      properties:
        owner:
          type: string
          description: Address of the stake owner
          example: '0x356c33675674691ad6b8ac92ecfb91960c5d2c30'
        current_balance:
          type: string
          description: Current balance in the lowest unit of the token (ie asset_amount * 10**decimal)
          example: '1880000'
        total_rewards:
          type: string
          description: Total rewards in the lowest unit of the token (ie asset_amount * 10**decimal)
          example: '100000'
        current_rewards:
          type: string
          description: Current rewards represent the rewards since the last complete withdraw (last time a position went back to 0 in current_balance and a new deposit was performed) in the lowest unit of the token (ie asset_amount * 10**decimal)
          example: '100000'
        total_deposited_amount:
          type: string
          description: Total deposited amount in the lowest unit of the token (ie asset_amount * 10**decimal)
          example: '1980000'
        total_withdrawn_amount:
          type: string
          description: Total withdrawn amount in the lowest unit of the token (ie asset_amount * 10**decimal)
          example: '100000'
        vault:
          type: string
          description: Vault address
          example: '0x9aB5F9101a3C1B868e2c422E294cc2ee685551D5'
        chain:
          type: string
          description: Chain name
          example: eth
        updated_at_block:
          type: integer
          description: Last updated block number
          example: 220379047
    DefiOperation:
      required:
        - type
        - owner
        - assets
        - shares
        - sender
        - timestamp
        - tx_hash
        - vault
        - chain
      properties:
        type:
          type: string
          enum:
            - withdrawal
            - deposit
          description: Operation type
          example: withdrawal
        owner:
          type: string
          description: Address of the stake owner
          example: '0x356c33675674691ad6b8ac92ecfb91960c5d2c30'
        assets:
          type: string
          description: Asset amount in the lowest unit of the token (ie asset_amount * 10**decimal)
          example: '100000'
        shares:
          type: string
          description: Shares amount in the lowest unit of the token share (ie asset_amount * 10**decimal)
          example: '100000'
        sender:
          type: string
          description: Sender address
          example: '0x356c33675674691ad6b8ac92ecfb91960c5d2c30'
        timestamp:
          type: string
          description: Operation timestamp (RFC3339 format)
          example: '2024-05-22T11:59:01+00:00'
        tx_hash:
          type: string
          description: Transaction hash
          example: '0xca1e9f9a9ed7b632dbb71e9d22730d1541df010e915d65af91d1ca102600c965'
        vault:
          type: string
          description: Vault address
          example: '0x9aB5F9101a3C1B868e2c422E294cc2ee685551D5'
        chain:
          type: string
          description: Chain name
          example: eth
    DefiNetworkStats:
      required:
        - asset
        - asset_icon
        - asset_symbol
        - asset_decimals
        - asset_price_usd
        - share_symbol
        - tvl
        - protocol
        - protocol_display_name
        - protocol_icon
        - protocol_tvl
        - protocol_supply_limit
        - grr
        - nrr
        - vault
        - chain
        - chain_id
        - updated_at_block
      properties:
        asset:
          type: string
          description: Vault asset address
          example: '0x94a9d9ac8a22534e3faca9f4e7f2e2cf85d5e4c8'
        asset_icon:
          type: string
          description: Vault asset icon
          example: https://public.kiln.fi/icons/assets/usdc.svg
        asset_symbol:
          type: string
          description: Vault asset symbol
          example: skUSDC
        asset_decimals:
          type: integer
          description: Asset decimals
          example: 6
        asset_price_usd:
          type: number
          description: Vault asset price in USD (From Coingecko)
          example: 1
        share_symbol:
          type: string
          description: Vault share symbol
          example: skcUSDC
        tvl:
          type: string
          description: Total value locked in the vault in the lowest unit of the token (ie asset_amount * 10**decimal)
          example: '1980000'
        protocol:
          type: string
          enum:
            - aave_v3
            - venus
            - compound_v3
            - morpho
            - sdai
          description: Protocol name
          example: aave_v3
        protocol_display_name:
          type: string
          description: Protocol display name
          example: Aave V3
        protocol_icon:
          type: string
          description: Protocol icon
          example: https://public.kiln.fi/icons/defi-protocols/aave.svg
        protocol_tvl:
          type: string
          description: Total value locked in the protocol in the lowest unit of the token (ie asset_amount * 10**decimal)
          example: '1980000'
        protocol_supply_limit:
          type: string
          description: Protocol supply limit in the lowest unit of the token (ie asset_amount * 10**decimal)
          example: '1980000'
        grr:
          type: number
          description: Gross reward rate of the vault
          example: 14.9287953383104
        nrr:
          type: number
          description: Net reward rate of the vault
          example: 11.9430363
        vault:
          type: string
          description: Vault address
          example: '0x9aB5F9101a3C1B868e2c422E294cc2ee685551D5'
        chain:
          type: string
          enum:
            - eth
            - bsc
            - arb
            - matic
            - base
            - op
          description: Chain name
          example: eth
        chain_id:
          type: integer
          enum:
            - 42161
            - 56
            - 1
            - 137
            - 8453
            - 11155111
            - 17000
            - 10
          description: Chain identifier
          example: 1
        updated_at_block:
          type: integer
          description: Last updated block number
          example: 220379047
    ETHOnchainV2Stake:
      type: object
      properties:
        owner:
          type: string
          description: Address of the owner of the stake (wallet)
          example: '0x41bf25fc8c52d292bd66d3bcecd8a919ecb9ef88'
        integration:
          type: string
          description: Name of the pooling integration
          example: Pooled Staked ETH
        integration_address:
          type: string
          description: Address of the pooling integration
          example: '0x5db5235b5c7e247488784986e58019fffd98fda4'
        balance:
          type: string
          description: Balance of the stake in WEI
          example: '300000000'
        shares_balance:
          type: string
          description: Balance of the stake in the integration's ERC20 token
          example: '300000000'
        rewards:
          type: string
          description: Rewards of the stake in WEI
          example: '300000000'
        nrr:
          type: number
          description: Net Reward Rate of the stake (one month)
          example: 3.407
        grr:
          type: number
          description: Gross Reward Rate of the stake (one month)
          example: 3.9
        one_year:
          $ref: '#/components/schemas/NRR_GRR'
        six_months:
          $ref: '#/components/schemas/NRR_GRR'
        three_months:
          $ref: '#/components/schemas/NRR_GRR'
        one_month:
          $ref: '#/components/schemas/NRR_GRR'
        one_week:
          $ref: '#/components/schemas/NRR_GRR'
        structure:
          type: array
          description: Structure of the stake
          items:
            type: object
            properties:
              pool:
                type: string
                description: Name of the vPool
                example: Kiln
              pool_address:
                type: string
                description: Address of the vPool
                example: '0x00a0be1bbc0c99898df7e6524bf16e893c1e3bb9'
              share:
                type: number
                description: Share of the stake in the vPool
                example: 0.5
        delegated_block:
          type: integer
          description: Block at which the stake was delegated
          example: 123
        delegated_at:
          type: string
          description: Timestamp at which the stake was delegated
          format: date-time
          example: '2023-01-14T01:13:59Z'
        updated_at:
          type: string
          description: Last date this data was updated
          format: date-time
          example: '2023-01-14T01:13:59Z'
    ETHOnchainV2Operation:
      oneOf:
        - $ref: '#/components/schemas/ETHOnChainV2ExitOperation'
        - $ref: '#/components/schemas/ETHOnChainV2ClaimOperation'
        - $ref: '#/components/schemas/ETHOnChainV2DepositOperation'
      type: object
      properties:
        id:
          type: string
          description: ID for the operation
          example: '10970'
        owner:
          type: string
          description: Owner (wallet) of the operation
          example: '0x41bf25fc8c52d292bd66d3bcecd8a919ecb9ef88'
        time:
          type: string
          description: Timestamp of the operation
          example: '2023-09-11T12:54:36.000Z'
        block:
          type: integer
          description: Block number of the operation
          example: '9676129'
        tx_hash:
          type: string
          description: Hash of the transaction associated with the operation
          example: '0xce804f083605289e5a1e1d197876067e1d59474e3dbf7faf65f44e7f3db72722'
    ETHOnChainV2ExitOperation:
      type: object
      properties:
        type:
          type: string
          enum:
            - exit
        ticket_id:
          type: string
          description: ID of the exit ticket
          example: '6125082604576892342340792916294922100547'
        ticket_status:
          description: Status of the exit ticket
          $ref: '#/components/schemas/EthOnChainV2ExitTicketStatus'
          example: unfulfillable
        size:
          description: Size of the exit ticket in WEI
          type: string
          example: '49982523094294339'
        size_shares:
          description: Size of the exit ticket in shares
          type: string
          example: '50157843875857851'
        claimable:
          description: Claimable amount of the exit ticket in WEI
          type: string
          example: '0'
        claimable_shares:
          description: Claimable amount of the exit ticket in shares
          type: string
          example: '0'
        cask_ids:
          description: IDs of the casks associated with the exit ticket
          type: array
          items:
            type: string
          example:
            - '43'
    ETHOnChainV2ClaimOperation:
      type: object
      properties:
        type:
          type: string
          enum:
            - claim
        ticket_id:
          type: string
        ticket_status:
          $ref: '#/components/schemas/EthOnChainV2ClaimTicketStatus'
        claimed:
          type: string
        claimed_shares:
          type: string
        remaining:
          type: string
        remaining_shares:
          type: string
        used_cask_ids:
          type: array
          items:
            type: string
    ETHOnChainV2DepositOperation:
      type: object
      properties:
        type:
          type: string
          enum:
            - deposit
        amount:
          type: string
        amount_shares:
          type: string
    EthOnChainV2ExitTicketStatus:
      type: string
      enum:
        - unfulfillable
        - fulfillable
        - partially_fulfillable
    EthOnChainV2ClaimTicketStatus:
      type: string
      enum:
        - fulfilled
        - fulfillable
        - partially_fulfillable
    ETHOnchainV2Reward:
      type: object
      properties:
        date:
          type: string
          description: Day for this reward entry
          format: date
          example: '2023-01-15'
        rewards:
          type: string
          description: Accumulated rewards in WEI during the day
          example: '1000'
        balance:
          type: string
          description: Balance in WEI at the end of the day
          example: '1000'
        nrr:
          type: number
          description: Net annual percentage yield
          example: 3.407
        rewards_usd:
          type: number
          description: Estimated value of rewards generated for that day in USD. The exchange rate is the rate at the end of the day provided by CoinGeckko.
          example: 400
        balance_usd:
          type: number
          description: Estimated value of the balance at the end of the day in USD. The exchange rate is the rate at the end of the day provided by CoinGeckko.
          example: 3400
    NRR_GRR:
      type: object
      properties:
        nrr:
          type: number
          description: Net Reward Rate
          example: 3.407
        grr:
          type: number
          description: Gross Reward Rate
          example: 3.9
    ETHOnchainV2NetworkStats:
      type: object
      properties:
        address:
          type: string
          description: Address of the integration
          example: '0x5db5235b5c7e247488784986e58019fffd98fda4'
        name:
          type: string
          description: Name of the integration
          example: Pooled Staked ETH
        symbol:
          type: string
          description: Symbol of the integration
          example: psETH
        fee:
          type: number
          description: Fee of the integration
          example: 10
        total_supply:
          type: string
          description: Total supply of the integration in Shares
          example: '104865118570632775697'
        total_underlying_supply:
          type: string
          description: Total underlying supply of the integration in WEI
          example: '103891951311279705404'
        total_stakers:
          type: integer
          description: Total number of stakers in the integration
          example: 123
        nrr:
          type: number
          description: Net Reward Rate of the integration (one month)
          example: 3.407
        grr:
          type: number
          description: Gross Reward Rate of the integration (one month)
          example: 3.9
        one_year:
          $ref: '#/components/schemas/NRR_GRR'
        six_months:
          $ref: '#/components/schemas/NRR_GRR'
        three_months:
          $ref: '#/components/schemas/NRR_GRR'
        one_month:
          $ref: '#/components/schemas/NRR_GRR'
        one_week:
          $ref: '#/components/schemas/NRR_GRR'
        pools:
          type: array
          items:
            type: object
            properties:
              address:
                type: string
                description: Address of the vPool
                example: '0x00a0be1bbc0c99898df7e6524bf16e893c1e3bb9'
              name:
                type: string
                description: Name of the vPool
                example: Kiln
              ratio:
                type: number
                description: Ratio of the vPool, if 100% then the vPool is the only one
                example: 100
              commission:
                type: number
                description: Commission of the vPool
                example: 10
              total_deposited:
                type: string
                description: Total deposited in the vPool in WEI
                example: '104865118570632775697'
              factory_address:
                type: string
                description: Address of the vFactory
                example: '0xc63d9f0040d35f328274312fc8771a986fc4ba86'
              operator_address:
                type: string
                description: Address of the operator
                example: '0xf9ef220543aaf0f4dc999382741883ce776064fb'
    ETHOnchainV2ExitTicket:
      type: object
      required:
        - owner
        - state
        - retrievable_amount
        - exiting_amount
        - exit_queue_address
        - integration_address
        - ticket_id
        - cask_id
        - estimated_claimable_at
      properties:
        owner:
          type: string
          description: Address of the owner of the exit ticket
          example: '0x991c468abce2b4dd627a6210c145373ebabdd186'
        state:
          type: string
          description: State of the exit ticket
          enum:
            - fulfillable
            - unfulfillable
            - partially_fulfillable
        retrievable_amount:
          type: string
          description: Amount of the exit ticket that can be retrieved
          example: '9999999999999998'
        exiting_amount:
          type: string
          description: Amount of the exit ticket that is still exiting
          example: '0'
        exit_queue_address:
          type: string
          nullable: true
          description: Address of the exit queue
          example: '0x8979117a69dfa7f4d4e3c7b59197ff03f4a2ceaf'
        integration_address:
          type: string
          description: Address of the integration from which the exit ticket was created
          example: '0xf448e20f8a69aeb88a7dfb837e6afab5e7bcf80e'
        ticket_id:
          type: string
          description: ID of the exit ticket
          example: '63632802614215492667651061498899397423000'
        cask_id:
          type: string
          description: ID of the cask associated with the exit ticket, will be `null` if the ticket's state is `unfulfillable`
          nullable: true
          example: '89'
        estimated_claimable_at:
          type: integer
          description: Estimated unix timestamp at which the exit ticket will be `fulfillable`. If the ticket's state is `fulfillable` the field will be `null`
          nullable: true
          example: 1725530777795
    XTZStake:
      type: object
      required:
        - stake_address
        - baker_address
        - state
        - stake_type
        - delegated_at
        - delegated_cycle
        - delegated_block
        - balance
        - staked_balance
        - wallet_balance
        - rewards
        - staked_rewards
        - gross_apy
        - updated_at
      properties:
        stake_address:
          type: string
          description: Wallet address of the delegator
          example: tz1VZ4iC4wzTR7iK2Q7PoQGVDAojuY42fDxD
        baker_address:
          type: string
          description: Address of the baker
          example: tz2FCNBrERXtaTtNX6iimR1UJ5JSDxvdHM93
        state:
          type: string
          description: State of the Tezos stake
          example: active
          enum:
            - activating
            - active
            - inactive
        stake_type:
          type: string
          description: Type of Tezos stake, delegation or stake
          example: stake
          enum:
            - stake
            - delegation
        activated_at:
          type: string
          description: Date at which the stake started earning rewards
          format: date-time
          example: '2023-01-14T01:13:59Z'
        activated_cycle:
          type: integer
          description: Cycle at which the stake started earning rewards
          example: 542
        delegated_at:
          type: string
          description: Cycle in which the delegation transaction was made
          format: date-time
          example: '2023-01-14T01:13:59Z'
        delegated_cycle:
          type: integer
          description: Date at which the staking transaction was made, corresponds to the block it was part of.
          example: 542
        delegated_block:
          description: Block at which the corresponding staking transaction was executed
          type: string
          example: '16397387'
        undelegated_at:
          type: string
          description: Block time at which the undelegation transaction was made
          format: date-time
          example: '2023-01-14T01:13:59Z'
        undelegated_cycle:
          type: integer
          description: Cycle in which the unstaking transaction was made, corresponds to the block it was part of.
          example: 542
        balance:
          type: string
          description: Current active delegated balance earning rewards in mutez
          example: '32076187808000000000'
        staked_balance:
          type: string
          description: Current staked balance in mutez
          example: '32076187808000000000'
        wallet_balance:
          type: string
          description: Wallet balance in mutez, this is a daily snapshot done every night.
          example: '32076187808000000000'
        rewards:
          type: string
          description: Sum of delegation rewards in mutez earned by this stake since delegation
          example: '76187808000000000'
        staked_rewards:
          type: string
          description: Sum of staking rewards in mutez earned by this stake since delegation (staking refers to Adaptive Issuance)
          example: '1500000000'
        gross_apy:
          type: number
          description: Gross annual percentage yield
          example: 3.407
        updated_at:
          type: string
          description: Last date this data was updated
          format: date-time
          example: '2023-01-14T01:13:59Z'
    XTZRewardByDay:
      type: object
      required:
        - date
        - rewards
        - staked_rewards
        - staked_balance
        - active_balance
        - gross_apy
      properties:
        date:
          type: string
          description: Day for this reward entry
          format: date
          example: '2023-01-15'
        rewards:
          type: string
          description: Delegation rewards earned for that day in mutez
          example: '27098488'
        active_balance:
          type: string
          description: Wallet balance for that day in mutez
          example: '420000000000'
        staked_rewards:
          type: string
          description: Staking rewards earned for that day in mutez (staking refers to Adaptive Issuance)
          example: '1765200'
        staked_balance:
          type: string
          description: Staking balance for that day in mutez (staking refers to Adaptive Issuance)
          example: '1500000000'
        gross_apy:
          type: number
          description: Gross annual percentage yield
          example: 3.42
        rewards_usd:
          type: number
          description: Estimated value of rewards generated for that day in USD. The exchange rate is the rate at the end of the day provided by CoinGeckko.
        active_balance_usd:
          type: number
          description: Estimated value of the active balance at the beginning of the day in USD. The exchange rate is the rate at the end of the day provided by CoinGeckko.
        staked_balance_usd:
          type: number
          description: Estimated value of the staked balance at the beginning of the day in USD. The exchange rate is the rate at the end of the day provided by CoinGeckko.
    XTZRewardByCycle:
      type: object
      required:
        - cycle
        - cycle_begins_at
        - rewards
        - staked_rewards
        - staked_balance
        - active_balance
        - gross_apy
      properties:
        cycle:
          type: integer
          description: The cycle number
          example: 271
        cycle_begins_at:
          type: string
          format: date-time
          description: The date at which the cycle began
          example: '2022-09-01T08:44:00Z'
        rewards:
          type: string
          description: Delegation rewards for that cycle in mutez
          example: '27098488'
        active_balance:
          type: string
          description: Wallet balance for that cycle in mutez
          example: '34329999165'
        staked_rewards:
          type: string
          description: Staking rewards earned for that day in mutez (staking refers to Adaptive Issuance)
          example: '1765200'
        staked_balance:
          type: string
          description: Staking balance for that day in mutez (staking refers to Adaptive Issuance)
          example: '1500000000'
        gross_apy:
          type: number
          description: Gross annual percentage yield
          example: 36.053
    XTZNetworkStats:
      type: object
      required:
        - xtz_price_usd
        - nb_validators
        - network_gross_apy
        - supply_staked_percent
        - inflation_rate
        - updated_at
      properties:
        xtz_price_usd:
          type: number
          description: XTZ price in USD
          example: 3.5
        nb_validators:
          type: integer
          description: Number of active bakers
          example: 402
        network_gross_apy:
          type: number
          description: Gross annual percentage yield
          example: 4.5
        supply_staked_percent:
          type: number
          description: Supply percentage of Tezos currently staked
          example: 12.4
        inflation_rate:
          type: number
          description: XTZ inflation rate
          example: 5.5
        updated_at:
          type: string
          description: Last date this data was updated
          format: date-time
          example: '2023-01-14T01:13:59Z'
    XTZOperationDelegate:
      type: object
      required:
        - type
        - date
        - staker_address
        - baker_address
        - operation
        - operation_gas_used
        - baker_fee
        - block
        - amount
      properties:
        type:
          type: string
          description: Type of the operation
          example: delegate
        date:
          type: string
          description: When did the operation occur in an RFC3339 format
          format: date-time
          example: '2023-01-14T01:13:59Z'
        staker_address:
          type: string
          description: The wallet address for the stake
          example: tz1QQZKGt3ouyd7x8JUDwcvRyxzsmD7CFbMd
        baker_address:
          type: string
          description: The baker address to which the wallet is staked
          example: tz3btDQsDkqq2G7eBdrrLqetaAfLVw6BnPez
        operation:
          type: string
          description: The operation hash
          example: opLq44uJLP7f3V3zCVDCDgXayV3CQLGqihdoAYtMnXLW4f1q2fb
        operation_gas_used:
          type: string
          description: The operation gas used if any
          example: '10'
        baker_fee:
          type: string
          description: The operation baker fee if applicable
          example: '42'
        block:
          type: integer
          description: The block number in which the operation was included
          example: 1342
        amount:
          type: string
          description: The delegated amount
          example: '420000'
    XTZOperationUndelegate:
      type: object
      required:
        - type
        - date
        - staker_address
        - baker_address
        - operation
        - operation_gas_used
        - baker_fee
        - block
      properties:
        type:
          type: string
          description: Type of the operation
          example: undelegate
        date:
          type: string
          description: When did the operation occur in an RFC3339 format
          format: date-time
          example: '2023-01-14T01:13:59Z'
        staker_address:
          type: string
          description: The wallet address for the stake
          example: tz1QQZKGt3ouyd7x8JUDwcvRyxzsmD7CFbMd
        baker_address:
          type: string
          description: The baker address to which the wallet is staked
          example: tz3btDQsDkqq2G7eBdrrLqetaAfLVw6BnPez
        operation:
          type: string
          description: The operation hash
          example: opLq44uJLP7f3V3zCVDCDgXayV3CQLGqihdoAYtMnXLW4f1q2fb
        operation_gas_used:
          type: string
          description: The operation gas used if any
          example: '10'
        baker_fee:
          type: string
          description: The operation baker fee if applicable
          example: '42'
        block:
          type: integer
          description: The block number in which the operation was included
          example: 1342
    XTZOperationActivation:
      type: object
      required:
        - type
        - date
        - staker_address
        - baker_address
        - cycle
      properties:
        type:
          type: string
          description: Type of the operation
          example: activation
        date:
          type: string
          description: When did the operation occur in an RFC3339 format
          format: date-time
          example: '2023-01-14T01:13:59Z'
        staker_address:
          type: string
          description: The wallet address for the stake
          example: tz1QQZKGt3ouyd7x8JUDwcvRyxzsmD7CFbMd
        baker_address:
          type: string
          description: The baker address to which the wallet is staked
          example: tz3btDQsDkqq2G7eBdrrLqetaAfLVw6BnPez
        cycle:
          type: integer
          description: The cycle at which the stake was active and started earning
          example: 585
    XTZOperationPayment:
      type: object
      required:
        - type
        - date
        - staker_address
        - baker_address
        - sender_address
        - operation
        - operation_gas_used
        - baker_fee
        - block
        - amount
      properties:
        type:
          type: string
          description: Type of the operation
          example: payment
        date:
          type: string
          description: When did the operation occur in an RFC3339 format
          format: date-time
          example: '2023-01-14T01:13:59Z'
        staker_address:
          type: string
          description: The wallet address for the stake
          example: tz1QQZKGt3ouyd7x8JUDwcvRyxzsmD7CFbMd
        baker_address:
          type: string
          description: The baker address to which the wallet is staked
          example: tz3btDQsDkqq2G7eBdrrLqetaAfLVw6BnPez
        sender_address:
          type: string
          description: The address that executed the payment
          example: tz3btDQsDkqq2G7eBdrrLqetaAfLVw6BnPez
        operation:
          type: string
          description: The operation hash
          example: opLq44uJLP7f3V3zCVDCDgXayV3CQLGqihdoAYtMnXLW4f1q2fb
        operation_gas_used:
          type: string
          description: The operation gas used if any
          example: '10'
        baker_fee:
          type: string
          description: The operation baker fee if applicable
          example: '42'
        block:
          type: integer
          description: The block number in which the operation was included
          example: 1342
        amount:
          type: string
          description: The reward amount that was paid out
          example: '4200'
    XTZOperationStake:
      type: object
      required:
        - type
        - date
        - staker_address
        - baker_address
        - operation
        - operation_gas_used
        - baker_fee
        - block
        - amount
      properties:
        type:
          type: string
          description: Type of the operation
          example: stake
        date:
          type: string
          description: When did the operation occur in an RFC3339 format
          format: date-time
          example: '2023-01-14T01:13:59Z'
        staker_address:
          type: string
          description: The wallet address for the stake
          example: tz1QQZKGt3ouyd7x8JUDwcvRyxzsmD7CFbMd
        baker_address:
          type: string
          description: The baker address to which the wallet is staked
          example: tz3btDQsDkqq2G7eBdrrLqetaAfLVw6BnPez
        operation:
          type: string
          description: The operation hash
          example: opLq44uJLP7f3V3zCVDCDgXayV3CQLGqihdoAYtMnXLW4f1q2fb
        operation_gas_used:
          type: string
          description: The operation gas used if any
          example: '10'
        baker_fee:
          type: string
          description: The operation baker fee if applicable
          example: '42'
        block:
          type: integer
          description: The block number in which the operation was included
          example: 1342
        amount:
          type: string
          description: The reward amount that was paid out
          example: '4200'
    XTZOperationUnstake:
      type: object
      required:
        - type
        - date
        - staker_address
        - baker_address
        - operation
        - operation_gas_used
        - baker_fee
        - block
        - amount
      properties:
        type:
          type: string
          description: Type of the operation
          example: unstake
        date:
          type: string
          description: When did the operation occur in an RFC3339 format
          format: date-time
          example: '2023-01-14T01:13:59Z'
        staker_address:
          type: string
          description: The wallet address for the stake
          example: tz1QQZKGt3ouyd7x8JUDwcvRyxzsmD7CFbMd
        baker_address:
          type: string
          description: The baker address to which the wallet is staked
          example: tz3btDQsDkqq2G7eBdrrLqetaAfLVw6BnPez
        operation:
          type: string
          description: The operation hash
          example: opLq44uJLP7f3V3zCVDCDgXayV3CQLGqihdoAYtMnXLW4f1q2fb
        operation_gas_used:
          type: string
          description: The operation gas used if anyfalse
          example: '10'
        baker_fee:
          type: string
          description: The operation baker fee if applicable
          example: '42'
        block:
          type: integer
          description: The block number in which the operation was included
          example: 1342
        amount:
          type: string
          description: The reward amount that was paid out
          example: '4200'
    XTZOperationFinalize:
      type: object
      required:
        - type
        - date
        - staker_address
        - baker_address
        - operation
        - operation_gas_used
        - baker_fee
        - block
        - amount
      properties:
        type:
          type: string
          description: Type of the operation
          example: finalize
        date:
          type: string
          description: When did the operation occur in an RFC3339 format
          format: date-time
          example: '2023-01-14T01:13:59Z'
        staker_address:
          type: string
          description: The wallet address for the stake
          example: tz1QQZKGt3ouyd7x8JUDwcvRyxzsmD7CFbMd
        baker_address:
          type: string
          description: The baker address to which the wallet is staked
          example: tz3btDQsDkqq2G7eBdrrLqetaAfLVw6BnPez
        operation:
          type: string
          description: The operation hash
          example: opLq44uJLP7f3V3zCVDCDgXayV3CQLGqihdoAYtMnXLW4f1q2fb
        operation_gas_used:
          type: string
          description: The operation gas used if any
          example: '10'
        baker_fee:
          type: string
          description: The operation baker fee if applicable
          example: '42'
        block:
          type: integer
          description: The block number in which the operation was included
          example: 1342
        amount:
          type: string
          description: The reward amount that was paid out
          example: '4200'
    XTZCraftDelegateTxPayload:
      type: object
      required:
        - account_id
        - wallet
        - baker_address
      properties:
        account_id:
          type: string
          example: b7177fd2-fbb3-479f-aa92-db9fb16e229f
          format: uuid
          description: Kiln Account ID to stake into
        wallet:
          type: string
          example: tz1QQZKGt3ouyd7x8JUDwcvRyxzsmD7CFbMd
          description: Wallet signing the transaction
        baker_address:
          type: string
          example: tz3btDQsDkqq2G7eBdrrLqetaAfLVw6BnPez
          description: Baker address to delegate to
    XTZCraftUndelegateTxPayload:
      type: object
      required:
        - wallet
      properties:
        wallet:
          type: string
          example: tz1QQZKGt3ouyd7x8JUDwcvRyxzsmD7CFbMd
          description: Wallet signing the transaction
    XTZCraftStakeTxPayload:
      type: object
      required:
        - account_id
        - wallet
        - amount_mutez
      properties:
        account_id:
          type: string
          example: b7177fd2-fbb3-479f-aa92-db9fb16e229f
          format: uuid
          description: Kiln Account ID to stake into
        wallet:
          type: string
          example: tz1QQZKGt3ouyd7x8JUDwcvRyxzsmD7CFbMd
          description: Wallet signing the transaction
        amount_mutez:
          type: string
          example: '1000000'
          description: Amount to stake in mutez (1 XTZ = 1000000 mutez)
    XTZCraftUnstakeTxPayload:
      type: object
      required:
        - wallet
        - amount_mutez
      properties:
        wallet:
          type: string
          example: tz1QQZKGt3ouyd7x8JUDwcvRyxzsmD7CFbMd
          description: Wallet signing the transaction
        amount_mutez:
          type: string
          example: '1000000'
          description: Amount to stake in mutez (1 XTZ = 1000000 mutez)
    XTZPrepareTxPayload:
      type: object
      required:
        - unsigned_tx_serialized
        - signature
      properties:
        unsigned_tx_serialized:
          type: string
          description: Unsigned serialized transaction
          example: '0x20a40259b763d549dfa1c082776a036dd8dabbe8b5e32ee721be017512dc'
        signature:
          type: string
          description: Transaction signature in hex
          example: de28e9efee4c8de422a3c64bfaaee11a32f7cf12bdd3f00dcce41a79fe776c65
    XTZUnsignedTx:
      type: object
      required:
        - unsigned_tx_hash
        - unsigned_tx_serialized
        - unsigned_tx
      properties:
        unsigned_tx_hash:
          type: string
          description: Hash of the unsigned transaction
          example: 7383fbcd64c1d95c92b5ebee44a569f15e557a773b6d733ab7bb4e3ce98de812
        unsigned_tx_serialized:
          type: string
          description: Unsigned serialized transaction
          example: aef6da4e377364f07c2aa460d7148a8971dab767417b541fa473b2d8e038974f6e00566eaa0198f3df9230489abd1a64f5ef9b98b270940ac4cb9807f44e00ff00344c5e59a1de5370e1cee5d2fcf706a649bba15b
        unsigned_tx:
          type: object
          description: Transaction object. Object shape can be found [here](https://github.com/ecadlabs/taquito/blob/master/packages/taquito-local-forging/src/interface.ts#L3)
          example:
            branch: BM3LZcG2SNz2DCWVGAAvT3gd8Vc17dS649CG6o9PhwJjmpUTptA
            contents:
              - kind: delegation
                source: tz1TX3Nh6h6js1VxXCuQ7rAF7LoGpd81FSw3
                fee: '1300'
                counter: '15082948'
                gas_limit: '10100'
                storage_limit: '0'
                delegate: tz1QQZKGt3ouyd7x8JUDwcvRyxzsmD7CFbMd
    XTZSignedTx:
      type: object
      required:
        - signed_tx_serialized
      properties:
        signed_tx_serialized:
          type: string
          description: Signed serialized transaction
          example: '0x20a40259b763d549dfa1c082776a036dd8dabbe8b5e32ee721be017512dc'
    XTZBroadcastTxPayload:
      type: object
      required:
        - tx_serialized
      properties:
        tx_serialized:
          type: string
          description: Signed serialized transaction
          example: '0x20a40259b763d549dfa1c082776a036dd8dabbe8b5e32ee721be017512dc'
    XTZBroadcastedTx:
      type: object
      required:
        - tx_hash
      properties:
        tx_hash:
          type: string
          description: Hash of the transaction
          example: oo3UAUpr685s3F7Fmc2ry8KHo4vdWGKo7LeimesAg56NBd6sDjs
    XTZTxStatus:
      type: object
      properties:
        status:
          type: string
          enum:
            - applied
            - failed
            - skipped
            - backtracked
          description: Transaction status
          example: applied
        receipt:
          type: object
          description: Transaction receipt. Object shape can be found [here](https://github.com/ecadlabs/taquito/blob/master/packages/taquito-rpc/src/types.ts#L1206)
          example:
            protocol: PtMumbai2TmsJHNGRkD8v8YDbtao7BLUC3wjASn1inAKLFCjaH1
            chain_id: NetXnHfVqm9iesp
            hash: op2Gu3xpBifNmj1dD88gwFdXuN4HT7EiqPcaERPCdyf48nYwZa9
            branch: BMUmBJ3CSxDdzEUUYuS47DNHDv8ayxyMh12zSWZ7hKzYtv8Ny7S
            contents:
              - kind: transaction
                source: tz3TMbNR6YcMmRvXpssLi7wNr7RrBKsgruYU
                fee: '10277'
                counter: '15413092'
                gas_limit: '100000'
                storage_limit: '30'
                amount: '0'
                destination: KT1VbeN9etQe5c2b6EAFfCZVaSTpiieHj5u1
                parameters:
                  entrypoint: tick
                  value:
                    string: tzBTC/EURL
                metadata:
                  balance_updates:
                    - kind: contract
                      contract: tz3TMbNR6YcMmRvXpssLi7wNr7RrBKsgruYU
                      change: '-10277'
                      origin: block
                    - kind: accumulator
                      category: block fees
                      change: '10277'
                      origin: block
                  operation_result:
                    status: applied
                    storage:
                      prim: Pair
                      args:
                        - - prim: Pair
                            args:
                              - prim: Pair
                                args:
                                  - bytes: 0000b9ba1078c3324ee4e0162c28cbda4765c6518d21
                                  - prim: Pair
                                    args:
                                      - - prim: Elt
                                          args:
                                            - string: tzBTC/EURL
                                            - int: '2078'
                                        - prim: Elt
                                          args:
                                            - string: tzBTC/USDT
                                            - int: '2079'
                                      - int: '288949'
                              - prim: Pair
                                args:
                                  - int: '600'
                                  - int: '10000'
                          - prim: Pair
                            args:
                              - bytes: 0000b28066369a8ed09ba9d3d47f19598440266013f0
                              - int: '63'
                          - int: '10'
                          - int: '288950'
                        - prim: Pair
                          args:
                            - prim: Pair
                              args:
                                - prim: Pair
                                  args:
                                    - int: '288951'
                                    - int: '1'
                                - prim: Pair
                                  args:
                                    - int: '288952'
                                    - - prim: Elt
                                        args:
                                          - string: tzBTC/EURL
                                          - - - prim: Pair
                                                args:
                                                  - - int: '0'
                                                    - string: tzBTC
                                                    - prim: Some
                                                      args:
                                                        - bytes: 019f8e6d69a501e050b36807de00fdc3f694dda39000
                                                    - int: '8'
                                                    - prim: Some
                                                      args:
                                                        - string: FA1.2 token
                                                  - int: '1'
                                              - int: '0'
                                              - string: EURL
                                              - prim: Some
                                                args:
                                                  - bytes: 01dcb37511b08da5f8d794b690c7ad6a03206af75200
                                              - int: '6'
                                              - prim: Some
                                                args:
                                                  - string: FA2 token
                                            - bytes: 01334d567a3617a22597eb783a65b04630e97c7fd600
                                            - string: BTC-EUR
                                            - int: '6'
                                            - prim: 'False'
                                      - prim: Elt
                                        args:
                                          - string: tzBTC/USDT
                                          - - - prim: Pair
                                                args:
                                                  - - int: '0'
                                                    - string: tzBTC
                                                    - prim: Some
                                                      args:
                                                        - bytes: 019f8e6d69a501e050b36807de00fdc3f694dda39000
                                                    - int: '8'
                                                    - prim: Some
                                                      args:
                                                        - string: FA1.2 token
                                                  - int: '1'
                                              - int: '0'
                                              - string: USDT
                                              - prim: Some
                                                args:
                                                  - bytes: 015dfb31bce51b9f71200fab36654d50cd877ef39500
                                              - int: '6'
                                              - prim: Some
                                                args:
                                                  - string: FA2 token
                                            - bytes: 01334d567a3617a22597eb783a65b04630e97c7fd600
                                            - string: BTC-USDT
                                            - int: '6'
                                            - prim: 'False'
                            - - prim: Elt
                                args:
                                  - string: EURL
                                  - - int: '0'
                                    - string: EURL
                                    - prim: Some
                                      args:
                                        - bytes: 01dcb37511b08da5f8d794b690c7ad6a03206af75200
                                    - int: '6'
                                    - prim: Some
                                      args:
                                        - string: FA2 token
                              - prim: Elt
                                args:
                                  - string: USDT
                                  - - int: '0'
                                    - string: USDT
                                    - prim: Some
                                      args:
                                        - bytes: 015dfb31bce51b9f71200fab36654d50cd877ef39500
                                    - int: '6'
                                    - prim: Some
                                      args:
                                        - string: FA2 token
                              - prim: Elt
                                args:
                                  - string: tzBTC
                                  - - int: '0'
                                    - string: tzBTC
                                    - prim: Some
                                      args:
                                        - bytes: 019f8e6d69a501e050b36807de00fdc3f694dda39000
                                    - int: '8'
                                    - prim: Some
                                      args:
                                        - string: FA1.2 token
                    balance_updates:
                      - kind: contract
                        contract: tz3TMbNR6YcMmRvXpssLi7wNr7RrBKsgruYU
                        change: '-2500'
                        origin: block
                      - kind: burned
                        category: storage fees
                        change: '2500'
                        origin: block
                    consumed_milligas: '6668844'
                    storage_size: '1231820'
                    paid_storage_size_diff: '10'
                    lazy_storage_diff:
                      - kind: big_map
                        id: '288952'
                        diff:
                          action: update
                          updates: []
                      - kind: big_map
                        id: '288951'
                        diff:
                          action: update
                          updates:
                            - key_hash: exprv54v2iFYQ5fHRM2GLzRgZKHpf3suvC9jyke2F3TcFwDxExPRjB
                              key:
                                string: tzBTC/EURL
                              value:
                                prim: Pair
                                args:
                                  - - prim: Pair
                                      args:
                                        - - int: '0'
                                          - string: tzBTC
                                          - prim: Some
                                            args:
                                              - bytes: 019f8e6d69a501e050b36807de00fdc3f694dda39000
                                          - int: '8'
                                          - prim: Some
                                            args:
                                              - string: FA1.2 token
                                        - int: '1'
                                    - int: '0'
                                    - string: EURL
                                    - prim: Some
                                      args:
                                        - bytes: 01dcb37511b08da5f8d794b690c7ad6a03206af75200
                                    - int: '6'
                                    - prim: Some
                                      args:
                                        - string: FA2 token
                                  - prim: Pair
                                    args:
                                      - prim: Pair
                                        args:
                                          - int: '2664904905100'
                                          - int: '10000000000'
                                      - int: '1683299700'
                      - kind: big_map
                        id: '288950'
                        diff:
                          action: update
                          updates: []
                      - kind: big_map
                        id: '288949'
                        diff:
                          action: update
                          updates:
                            - key_hash: exprtX5LinYF4NkttwZC7Y6eqfXT38Dxq1KBV1ctmQAfzsGb1G3nap
                              key:
                                int: '2078'
                              value:
                                - int: '2078'
                                - prim: Left
                                  args:
                                    - prim: Right
                                      args:
                                        - prim: Pair
                                          args:
                                            - int: '1683299741'
                                            - int: '1683299141'
                                - - int: '0'
                                  - int: '0'
                                  - int: '0'
                                  - int: '0'
                                  - int: '0'
                                  - int: '0'
                                  - int: '0'
                                  - int: '0'
                                - - int: '0'
                                  - string: tzBTC
                                  - prim: Some
                                    args:
                                      - bytes: 019f8e6d69a501e050b36807de00fdc3f694dda39000
                                  - int: '8'
                                  - prim: Some
                                    args:
                                      - string: FA1.2 token
                                - int: '0'
                                - string: EURL
                                - prim: Some
                                  args:
                                    - bytes: 01dcb37511b08da5f8d794b690c7ad6a03206af75200
                                - int: '6'
                                - prim: Some
                                  args:
                                    - string: FA2 token
            signature: sigaYuApxhkynr4VUasNY6GsSstUvVrcoS84VHtXv6V5e5Fmoqg17oEEsf5Vpahjrx1EFuPhnm4BnPwrxVyXrqh71uhG5Tf7
    SOLStake:
      type: object
      required:
        - stake_account
        - withdraw_pubkey
        - balance
        - rewards
        - activated_epoch
        - activated_at
        - state
        - net_apy
        - vote_account
        - updated_at
      properties:
        stake_account:
          type: string
          description: Delegated stake account
          example: 3sfokk2DFsd88ujd8sfa9slsdf99kjnFJksdf
        vote_account:
          type: string
          description: Vote account to which this stake was re-delegated.
          example: 6hNweZvzTudTuprZrAXb1A9grKvVG6xgjyvdJUqAMk78
        withdraw_pubkey:
          type: string
          description: Withdraw pubkey
          example: 4wdr76KJTFgH68YtGddmnF45WdD8LMv9eLsdf
        state:
          type: string
          description: Stake state
          example: active
          enum:
            - active
            - inactive
            - activating
            - deactivating
            - withdrawn
        activated_at:
          type: string
          description: Date at which this stake was activated
          format: date-time
          example: '2023-01-14T01:13:59Z'
        activated_epoch:
          type: integer
          description: Epoch at which this stake was activated
          example: 150
        deactivated_at:
          type: string
          description: Date at which this stake was deactivated
          format: date-time
          example: '2023-01-14T01:13:59Z'
        deactivated_epoch:
          type: integer
          description: Epoch at which this stake was deactivated
          example: 150
        balance:
          type: string
          description: Current balance in Lamport
          example: '1000000000'
        rewards:
          type: string
          description: Sum of rewards rewards in Lamport earned by this stake
          example: '1000000000'
        net_apy:
          type: number
          description: Net annual percentage yield
          example: 3.407
        updated_at:
          type: string
          description: Last date this data was updated
          format: date-time
          example: '2023-01-14T01:13:59Z'
    SOLRewardByDay:
      type: object
      required:
        - date
        - rewards
        - gross_mev_rewards
        - mev_commission
        - active_balance
        - net_apy
      properties:
        date:
          type: string
          description: Day for this reward entry
          format: date
          example: '2023-01-15'
        rewards:
          type: string
          description: Accumulated rewards in Lamport during the day
          example: '1000'
        gross_mev_rewards:
          type: string
          description: Sum of Jito's MEV rewards in Lamport earned by this stake.
          example: '100000000'
        mev_commission:
          type: string
          description: Commission amount in Lamport for MEV rewards
          example: '10000000'
        active_balance:
          type: string
          description: Active balance in Lamport after rewards computing
          example: '1000'
        net_apy:
          type: number
          description: Net annual percentage yield
          example: 3.407
        rewards_usd:
          type: number
          description: Estimated value of rewards generated for that day in USD. The exchange rate is the rate at the end of the day provided by CoinGeckko.
        active_balance_usd:
          type: number
          description: Estimated value of the staked balance at the beginning of the day in USD. The exchange rate is the rate at the end of the day provided by CoinGeckko.
    SOLRewardByEpoch:
      type: object
      required:
        - epoch
        - epoch_ts
        - rewards
        - gross_mev_rewards
        - mev_commission
        - active_balance
        - net_apy
      properties:
        epoch:
          type: integer
          description: Epoch for this reward entry
          example: 120
        epoch_ts:
          type: string
          description: Epoch timestamp for this reward entry
          format: date-time
          example: '2023-01-14T01:13:59Z'
        rewards:
          type: string
          description: Accumulated rewards in Lamport during the day
          example: '1000'
        gross_mev_rewards:
          type: string
          description: Sum of Jito's MEV rewards in Lamport earned by this stake.
          example: '100000000'
        mev_commission:
          type: string
          description: Commission amount in Lamport for MEV rewards
          example: '10000000'
        active_balance:
          type: string
          description: Active balance in Lamport after rewards computing
          example: '1000'
        net_apy:
          type: number
          description: Net annual percentage yield
          example: 3.407
    SOLOperationCreateAccountWithSeed:
      type: object
      properties:
        type:
          type: string
          description: Operation type
          example: create_account_with_seed
        time:
          type: string
          description: Date of the operation
          format: date-time
          example: '2023-01-14T01:13:59Z'
        tx_hash:
          type: string
          description: Transaction hash
          example: 2cHnbnyJnP6vffL3iR2pN8va6fxXWEdnYAr9nwM7d3VowDXSxw3B541DR294fHgomK81SQdSHdskhKUCWUKQPHie
        tx_fee:
          type: string
          description: Fee charged to the associated transaction in Lamport
          example: '1000'
        tx_memo:
          type: string
          description: Memo associated with the transaction
          nullable: true
          example: kiln_memo
        block:
          type: integer
          description: Block number of the operation
          example: 1000
        stake_account:
          type: string
          description: Created stake account
          example: 3sfokk2DFsd88ujd8sfa9slsdf99kjnFJksdf
        amount:
          type: string
          description: Amount delegated to the new stake account in Lamport
          example: '1000'
        stake_authority:
          type: string
          description: Stake authority
          example: 4wdr76KJTFgH68YtGddmnF45WdD8LMv9eLsdf
    SOLOperationCreateAccount:
      type: object
      properties:
        type:
          type: string
          description: Operation type
          example: create_account
        time:
          type: string
          description: Date of the operation
          format: date-time
          example: '2023-01-14T01:13:59Z'
        tx_hash:
          type: string
          description: Transaction hash
          example: 8nPu2cHnbnyJnP6vffL3iR2pN8va6fxXWEdnYAr9nwM7d3VowDXSxw3B541DR294fHgomK81SQdSHdskhKUCWUKQPHie8b7ty2Ni99QoSpZudCBoWXk6d
        tx_fee:
          type: string
          description: Fee charged to the associated transaction in Lamport
          example: '1000'
        tx_memo:
          type: string
          description: Memo associated with the transaction
          nullable: true
          example: kiln_memo
        block:
          type: integer
          description: Block number of the operation
          example: 1000
        stake_account:
          type: string
          description: Created stake account
          example: 3sfokk2DFsd88ujd8sfa9slsdf99kjnFJksdf
        amount:
          type: string
          description: Amount delegated to the new stake account in Lamport
          example: '1000'
        stake_authority:
          type: string
          description: Stake authority
          example: 4wdr76KJTFgH68YtGddmnF45WdD8LMv9eLsdf
    SOLOperationDelegate:
      type: object
      properties:
        type:
          type: string
          description: Operation type
          example: delegate
        time:
          type: string
          description: Date of the operation
          format: date-time
          example: '2023-01-14T01:13:59Z'
        tx_hash:
          type: string
          description: Transaction hash
          example: 2cHnbnyJnP6vffL3iR2pN8va6fxXWEdnYAr9nwM7d3VowDXSxw3B541DR294fHgomK81SQdSHdskhKUCWUKQPHie
        tx_fee:
          type: string
          description: Fee charged to the associated transaction in Lamport
          example: '1000'
        tx_memo:
          type: string
          description: Memo associated with the transaction
          nullable: true
          example: kiln_memo
        block:
          type: integer
          description: Block number of the operation
          example: 1000
        stake_account:
          type: string
          description: Delegated stake account
          example: 3sfokk2DFsd88ujd8sfa9slsdf99kjnFJksdf
        vote_account:
          type: string
          description: Vote account to which this stake was re-delegated.
          example: 6hNweZvzTudTuprZrAXb1A9grKvVG6xgjyvdJUqAMk78
        stake_authority:
          type: string
          description: Stake authority
          example: 4wdr76KJTFgH68YtGddmnF45WdD8LMv9eLsdf
    SOLOperationDeactivate:
      type: object
      properties:
        type:
          type: string
          description: Operation type
          example: deactivate
        time:
          type: string
          description: Date of the operation
          format: date-time
          example: '2023-01-14T01:13:59Z'
        tx_hash:
          type: string
          description: Transaction hash
          example: 2cHnbnyJnP6vffL3iR2pN8va6fxXWEdnYAr9nwM7d3VowDXSxw3B541DR294fHgomK81SQdSHdskhKUCWUKQPHie
        tx_fee:
          type: string
          description: Fee charged to the associated transaction in Lamport
          example: '1000'
        tx_memo:
          type: string
          description: Memo associated with the transaction
          nullable: true
          example: kiln_memo
        block:
          type: integer
          description: Block number of the operation
          example: 1000
        stake_account:
          type: string
          description: Deactivated stake account
          example: 3sfokk2DFsd88ujd8sfa9slsdf99kjnFJksdf
        stake_authority:
          type: string
          description: Stake authority
          example: 4wdr76KJTFgH68YtGddmnF45WdD8LMv9eLsdf
    SOLOperationRedelegate:
      type: object
      properties:
        type:
          type: string
          description: Operation type
          example: redelegate
        time:
          type: string
          description: Date of the operation
          format: date-time
          example: '2023-01-14T01:13:59Z'
        tx_hash:
          type: string
          description: Transaction hash
          example: 8nPu8b7ty2Ni99QoSpZudCBoWXk6d
        tx_fee:
          type: string
          description: Fee charged to the associated transaction in Lamport
          example: '1000'
        tx_memo:
          type: string
          description: Memo associated with the transaction
          nullable: true
          example: kiln_memo
        block:
          type: integer
          description: Block number of the operation
          example: 1000
        stake_account:
          type: string
          description: Source of the re-delegation
          example: 3sfokk2DFsd88ujd8sfa9slsdf99kjnFJksdf
        new_stake_account:
          type: string
          description: Destination of the re-delegation
          example: 3sfokk2DFsd88ujd8sfa9slsdf99kjnFJksdf
        vote_account:
          type: string
          description: Vote account to which this stake was re-delegated.
          example: 6hNweZvzTudTuprZrAXb1A9grKvVG6xgjyvdJUqAMk78
        stake_authority:
          type: string
          description: Stake authority
          example: 4wdr76KJTFgH68YtGddmnF45WdD8LMv9eLsdf
    SOLOperationSplit:
      type: object
      properties:
        type:
          type: string
          description: Operation type
          example: split
        time:
          type: string
          description: Date of the operation
          format: date-time
          example: '2023-01-14T01:13:59Z'
        tx_hash:
          type: string
          description: Transaction hash
          example: 2cHnbnyJnP6vffL3iR2pN8va6fxXWEdnYAr9nwM7d3VowDXSxw3B541DR294fHgomK81SQdSHdskhKUCWUKQPHie
        tx_fee:
          type: string
          description: Fee charged to the associated transaction in Lamport
          example: '1000'
        tx_memo:
          type: string
          description: Memo associated with the transaction
          nullable: true
          example: kiln_memo
        block:
          type: integer
          description: Block number of the operation
          example: 1000
        stake_account:
          type: string
          description: Stake account split
          nullable: true
          example: 3sfokk2DFsd88ujd8sfa9slsdf99kjnFJksdf
        new_stake_account:
          type: string
          description: New stake account which received the split-off amount.
          example: 3sfokk2DFsd88ujd8sfa9slsdf99kjnFJksdf
        amount:
          type: string
          description: Amount of SOL in Lamport
          example: '1000000000'
        stake_authority:
          type: string
          description: Stake authority
          example: 4wdr76KJTFgH68YtGddmnF45WdD8LMv9eLsdf
    SOLOperationWithdraw:
      type: object
      properties:
        type:
          type: string
          description: Operation type
          example: withdraw
        time:
          type: string
          description: Date of the operation
          format: date-time
          example: '2023-01-14T01:13:59Z'
        tx_hash:
          type: string
          description: Transaction hash
          example: 2cHnbnyJnP6vffL3iR2pN8va6fxXWEdnYAr9nwM7d3VowDXSxw3B541DR294fHgomK81SQdSHdskhKUCWUKQPHie
        tx_fee:
          type: string
          description: Fee charged to the associated transaction in Lamport
          example: '1000'
        tx_memo:
          type: string
          description: Memo associated with the transaction
          nullable: true
          example: kiln_memo
        block:
          type: integer
          description: Block number of the operation
          example: 1000
        stake_account:
          type: string
          description: Source stake account for the merge and drained.
          example: 3sfokk2DFsd88ujd8sfa9slsdf99kjnFJksdf
        destination_account:
          type: string
          description: Recipient account
          example: 4qdoP4oJgKjVtHTE9t9kV1jKdF41uHQ5Q5e1G5VjRLCk
        amount:
          type: string
          description: Portion of the stake account balance withdrawn
          example: '1000000000'
        stake_authority:
          type: string
          description: Withdraw authority
          example: 4wdr76KJTFgH68YtGddmnF45WdD8LMv9eLsdf
    SOLOperationMerge:
      type: object
      properties:
        type:
          type: string
          description: Operation type
          example: merge
        time:
          type: string
          description: Date of the operation
          format: date-time
          example: '2023-01-14T01:13:59Z'
        tx_hash:
          type: string
          description: Transaction hash
          example: 8nPu8b7ty2Ni99QoSpZudCBoWXk6d
        tx_fee:
          type: string
          description: Fee charged to the associated transaction in Lamport
          example: '1000'
        tx_memo:
          type: string
          description: Memo associated with the transaction
          nullable: true
          example: kiln_memo
        block:
          type: integer
          description: Block number of the operation
          example: 1000
        stake_account:
          type: string
          description: Destination stake account for the merge
          example: 3sfokk2DFsd88ujd8sfa9slsdf99kjnFJksdf
        source_stake_account:
          type: string
          description: Source stake account for the merge and drained.
          example: 3sfokk2DFsd88ujd8sfa9slsdf99kjnFJksdf
        stake_authority:
          type: string
          description: Transaction signer
          example: 4wdr76KJTFgH68YtGddmnF45WdD8LMv9eLsdf
    SOLNetworkStats:
      type: object
      required:
        - sol_price_usd
        - nb_validators
        - network_gross_apy
        - supply_staked_percent
        - inflation_rate
        - updated_at
      properties:
        sol_price_usd:
          type: number
          description: SOL price in USD
          example: 3.5
        nb_validators:
          type: number
          description: Number of active validators
          example: 402
        network_gross_apy:
          type: number
          description: Gross annual percentage yield
          example: 4.5
        supply_staked_percent:
          type: number
          description: Supply of Solana currently staked
          example: 12.4
        inflation_rate:
          type: number
          description: SOL inflation rate
          example: 8.5
        updated_at:
          type: string
          description: Last date this data was updated
          format: date-time
          example: '2023-01-14T01:13:59Z'
    SOLPostStakesPayload:
      type: object
      required:
        - stakes
        - account_id
      properties:
        stakes:
          type: array
          items:
            type: object
            properties:
              stakeAccount:
                type: string
                description: Stake account to be delegated
                nullable: true
                example: 3sfokk2DFsd88ujd8sfa9slsdf99kjnFJksdf
              balance:
                type: number
                description: Balance to delegate in SOL
                example: 1000000
        account_id:
          type: string
          description: Kiln Account ID
          example: 92f5bfd4-ea38-4824-84f7-686eddff5539
    SOLStakeTxPayload:
      type: object
      required:
        - account_id
        - wallet
        - amount_lamports
        - vote_account_address
      properties:
        account_id:
          type: string
          description: Kiln Account ID
          example: d3f1b917-72b1-4982-a4dd-93fce579a708
        wallet:
          type: string
          description: Wallet address
          example: 4icse2mPXNgyxxn11tVM7sTnSqDqwJSEzdnaCQnRzvA9
        amount_lamports:
          type: string
          description: Amount in lamports (minimum value must be 10000001)
          example: '1000000000000000'
        vote_account_address:
          type: string
          description: Vote account address
          example: 5pPRHniefFjkiaArbGX3Y8NUysJmQ9tMZg3FrFGwHzSm
        memo:
          type: string
          description: Custom message to send as a memo in the transaction
          example: custom message
    SOLStakeTx:
      type: object
      required:
        - unsigned_tx_hash
        - unsigned_tx_serialized
        - unsigned_tx
      properties:
        unsigned_tx_hash:
          type: string
          description: Hex encoded transaction data that need to be covered by signatures
          example: 0301080c373c6f8e84c6822a9f87035f65cccf899eef3fcdee61077041a93e1805bab24e1bb5f70b4d3ae65feb6d20587f62ccc8d5e720e99abe3d4415972bbf74a8a88a51f5f3871e65b84cc393458d0f23a413184cf2bb7093ae4e2c99d55b39a575c5f98e3135fcb53e71e6fafcb4da3a3cc36af1c76a1a7e72aa12eae1346d724c6c00000000000000000000000000000000000000000000000000000000000000004792650d1e9a4fe99721617c7d47c8712c14c20a76bf043368c6528c9090531a06a1d8179137542a983437bdfe2a7ab2557f535c8a78722b68a49dc00000000006a1d817a502050b680791e6ce6db88e1e5b7150f61fc6790a4eb4d10000000006a7d51718c774c928566398691d5eb68b5eb8a39b4b6d5c73555b210000000006a7d517192c568ee08a845f73d29788cf035c3145b21ab344d8062ea940000006a7d517192c5c51218cc94c3d4af17f58daee089ba1fd44e3dbd98a0000000006a7d517193584d0feed9bb3431d13206be544281b57b8566cc5375ff4000000f0973e76495f3ffc65798a529de5cba4ec7f47f17669c9fa256923f099a1cda304040303090204040000000402000134000000000080c6a47e8d0300c80000000000000006a1d8179137542a983437bdfe2a7ab2557f535c8a78722b68a49dc0000000000602010a7400000000373c6f8e84c6822a9f87035f65cccf899eef3fcdee61077041a93e1805bab24e373c6f8e84c6822a9f87035f65cccf899eef3fcdee61077041a93e1805bab24e00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000006060105080b07000402000000
        unsigned_tx_serialized:
          type: string
          description: Hex encoded full transaction
          example: 0300000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000063b2b5ef76d483b695bc3b954d9a372ca5f744e00279c8578bc4268d570b701a037fac575ae16bb3ba5702b8d5bd9930953453e2d628368f83a11ab5896d20bbcae0b4a119860afd99da20f3462ba15d8bd1528d73724b83e8cc4cee00787df28a181783c264113ef1870bae5a90987fc5cfcdffaddf23c7dcfd7585c13d10b0301080c373c6f8e84c6822a9f87035f65cccf899eef3fcdee61077041a93e1805bab24e1bb5f70b4d3ae65feb6d20587f62ccc8d5e720e99abe3d4415972bbf74a8a88a51f5f3871e65b84cc393458d0f23a413184cf2bb7093ae4e2c99d55b39a575c5f98e3135fcb53e71e6fafcb4da3a3cc36af1c76a1a7e72aa12eae1346d724c6c00000000000000000000000000000000000000000000000000000000000000004792650d1e9a4fe99721617c7d47c8712c14c20a76bf043368c6528c9090531a06a1d8179137542a983437bdfe2a7ab2557f535c8a78722b68a49dc00000000006a1d817a502050b680791e6ce6db88e1e5b7150f61fc6790a4eb4d10000000006a7d51718c774c928566398691d5eb68b5eb8a39b4b6d5c73555b210000000006a7d517192c568ee08a845f73d29788cf035c3145b21ab344d8062ea940000006a7d517192c5c51218cc94c3d4af17f58daee089ba1fd44e3dbd98a0000000006a7d517193584d0feed9bb3431d13206be544281b57b8566cc5375ff4000000f0973e76495f3ffc65798a529de5cba4ec7f47f17669c9fa256923f099a1cda304040303090204040000000402000134000000000080c6a47e8d0300c80000000000000006a1d8179137542a983437bdfe2a7ab2557f535c8a78722b68a49dc0000000000602010a7400000000373c6f8e84c6822a9f87035f65cccf899eef3fcdee61077041a93e1805bab24e373c6f8e84c6822a9f87035f65cccf899eef3fcdee61077041a93e1805bab24e00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000006060105080b07000402000000
        unsigned_tx:
          type: object
          description: Transaction message containing transaction instructions. Object shape can be found [here](https://github.com/solana-labs/solana-web3.js/blob/master/packages/library-legacy/src/message/legacy.ts#L59)
          example:
            header:
              numRequiredSignatures: 3
              numReadonlySignedAccounts: 1
              numReadonlyUnsignedAccounts: 8
            accountKeys:
              - 4icse2mPXNgyxxn11tVM7sTnSqDqwJSEzdnaCQnRzvA9
              - 2sAwSXUrNW9PfaX6joGy62QAfmhHGnxpM7CYGNF7qdPX
              - 6WwYZH8zdqF7kELtRfo1yAnvD1wvXwTg4m1jBhUCqC68
              - HoAGnvTdp4Qgrq3NWtNQFS6FixasBhLqui23Seq7riSw
              - '11111111111111111111111111111111'
              - 5pPRHniefFjkiaArbGX3Y8NUysJmQ9tMZg3FrFGwHzSm
              - Stake11111111111111111111111111111111111111
              - StakeConfig11111111111111111111111111111111
              - SysvarC1ock11111111111111111111111111111111
              - SysvarRecentB1ockHashes11111111111111111111
              - SysvarRent111111111111111111111111111111111
              - SysvarStakeHistory1111111111111111111111111
            recentBlockhash: HCAcHiKdfbnfZk6rgnrWxeCBxavYxcWWo7JLsQqwDquU
            instructions:
              - programIdIndex: 4
                accounts:
                  - 3
                  - 9
                  - 2
                data: 6vx8P
              - programIdIndex: 4
                accounts:
                  - 0
                  - 1
                data: 11111255HrbrzNKE34jJbWojuhKCCFF5BqruMbtEe7CY3fPCMjUHYn7uEDqFavZELT1boD
              - programIdIndex: 6
                accounts:
                  - 1
                  - 10
                data: 1111BNVhr29wy4CUDfmP3ysWa9GUZMwYaMaAp9JVWCAzhqZ78HhuLB7fgzVCHGpmMQg4sJMrzXVvT3BxhUBDvroCMCJ5sKhVwNWL2phXwqXEH6mKiVgsJwPG3iKFVxiQoPLBXFx7Vv9USNmuAMcTWz6tvYb2w
              - programIdIndex: 6
                accounts:
                  - 1
                  - 5
                  - 8
                  - 11
                  - 7
                  - 0
                data: 3xyZh
            indexToProgramIds: {}
    SOLDeactivateStakeTxPayload:
      type: object
      required:
        - stake_account
        - wallet
      properties:
        stake_account:
          type: string
          description: Stake account address
          example: 3M7sFDMdUxfNNSmKk2ZmDKgKJFzuLvxpuXKDTLRGXpcK
        wallet:
          type: string
          description: Wallet address
          example: 4icse2mPXNgyxxn11tVM7sTnSqDqwJSEzdnaCQnRzvA9
    SOLWithdrawStakeTxPayload:
      type: object
      required:
        - stake_account
        - wallet
      properties:
        stake_account:
          type: string
          description: Stake account address
          example: 3M7sFDMdUxfNNSmKk2ZmDKgKJFzuLvxpuXKDTLRGXpcK
        wallet:
          type: string
          description: Wallet address
          example: 4icse2mPXNgyxxn11tVM7sTnSqDqwJSEzdnaCQnRzvA9
        amount_lamports:
          type: string
          description: Amount in lamports
          example: '1000000000000000'
    SOLMergeStakesTxPayload:
      type: object
      required:
        - stake_account_source
        - stake_account_destination
        - wallet
      properties:
        stake_account_source:
          type: string
          description: Stake account address
          example: HQQkoFXHz1XemQHFhC3mN1CGdfH8Pokw2DfFUmwZCRWb
        stake_account_destination:
          type: string
          description: Stake account address
          example: GyPnKF88P8c3jESicELWLrxAmeF9PoaKzqYGREDuEAMx
        wallet:
          type: string
          description: Wallet address
          example: 4icse2mPXNgyxxn11tVM7sTnSqDqwJSEzdnaCQnRzvA9
    SOLSplitStakeTxPayload:
      type: object
      required:
        - account_id
        - stake_account
        - wallet
        - amount_lamports
      properties:
        account_id:
          type: string
          description: Kiln Account ID
          example: d3f1b917-72b1-4982-a4dd-93fce579a708
        stake_account:
          type: string
          description: Stake account address
          example: GyPnKF88P8c3jESicELWLrxAmeF9PoaKzqYGREDuEAMx
        wallet:
          type: string
          description: Wallet address
          example: 4icse2mPXNgyxxn11tVM7sTnSqDqwJSEzdnaCQnRzvA9
        amount_lamports:
          type: string
          description: Amount in lamports
          example: '200000000'
    SOLPrepareTxPayload:
      type: object
      required:
        - unsigned_tx_serialized
        - signatures
      properties:
        unsigned_tx_serialized:
          type: string
          description: Hex encoded unsigned transaction
          example: 0300000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000005812228c3ecf882e4ea4a608f7cbaa9c1557cefbdad3f781d0b6b562351eaef2a00c04273d6f9adc395d4ce59ed5e4b041221ff6892584943f8dd20b2a3d06ab2e486351d862d49c29a86b53cdc225e5ad717c7511a3fdc7a580a56406276191f1036a9efb951a61ca3922e9d7b59c74383b9c0028dc0e7a0270b71e1226070301080c3b9feaffd8e2dd3a59e1bbfe2b2de5090238b622f638cdf8066ebf946f1cd1652f35f8c8d7a43a970660e177489a647dba6caf2006a788657432e8d8e7107a7451f5f3871e65b84cc393458d0f23a413184cf2bb7093ae4e2c99d55b39a575c5f98e3135fcb53e71e6fafcb4da3a3cc36af1c76a1a7e72aa12eae1346d724c6c0000000000000000000000000000000000000000000000000000000000000000bb92012657eb9b0bbd98e0109c08a1a16514df3f22df949d5d1b9e2f04aaeb6e06a1d8179137542a983437bdfe2a7ab2557f535c8a78722b68a49dc00000000006a1d817a502050b680791e6ce6db88e1e5b7150f61fc6790a4eb4d10000000006a7d51718c774c928566398691d5eb68b5eb8a39b4b6d5c73555b210000000006a7d517192c568ee08a845f73d29788cf035c3145b21ab344d8062ea940000006a7d517192c5c51218cc94c3d4af17f58daee089ba1fd44e3dbd98a0000000006a7d517193584d0feed9bb3431d13206be544281b57b8566cc5375ff4000000b6fa88c0c34a62da18b6287ecbb3a406c9182922f331a5f75b801d7acff8fa8c0404030309020404000000040200013400000000002d310100000000c80000000000000006a1d8179137542a983437bdfe2a7ab2557f535c8a78722b68a49dc0000000000602010a74000000003b9feaffd8e2dd3a59e1bbfe2b2de5090238b622f638cdf8066ebf946f1cd1653b9feaffd8e2dd3a59e1bbfe2b2de5090238b622f638cdf8066ebf946f1cd16500000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000006060105080b07000402000000
        signatures:
          type: array
          description: Hex encoded signatures
          items:
            type: string
            description: Hex encoded signature
            example: 9b43c27a887b4857ec7fb7a58acdfb10c8b9d94a8e0106b5c9dff4224594b43e43bbdb76c52fbe90ec89e951b1166ab972b5c34295ae6a971f16e88c3a5d950b
    SOLPreparedTx:
      type: object
      required:
        - signed_tx_serialized
      properties:
        signed_tx_serialized:
          type: string
          description: Hex encoded signed transaction
          example: 0300000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000063b2b5ef76d483b695bc3b954d9a372ca5f744e00279c8578bc4268d570b701a037fac575ae16bb3ba5702b8d5bd9930953453e2d628368f83a11ab5896d20bbcae0b4a119860afd99da20f3462ba15d8bd1528d73724b83e8cc4cee00787df28a181783c264113ef1870bae5a90987fc5cfcdffaddf23c7dcfd7585c13d10b0301080c373c6f8e84c6822a9f87035f65cccf899eef3fcdee61077041a93e1805bab24e1bb5f70b4d3ae65feb6d20587f62ccc8d5e720e99abe3d4415972bbf74a8a88a51f5f3871e65b84cc393458d0f23a413184cf2bb7093ae4e2c99d55b39a575c5f98e3135fcb53e71e6fafcb4da3a3cc36af1c76a1a7e72aa12eae1346d724c6c00000000000000000000000000000000000000000000000000000000000000004792650d1e9a4fe99721617c7d47c8712c14c20a76bf043368c6528c9090531a06a1d8179137542a983437bdfe2a7ab2557f535c8a78722b68a49dc00000000006a1d817a502050b680791e6ce6db88e1e5b7150f61fc6790a4eb4d10000000006a7d51718c774c928566398691d5eb68b5eb8a39b4b6d5c73555b210000000006a7d517192c568ee08a845f73d29788cf035c3145b21ab344d8062ea940000006a7d517192c5c51218cc94c3d4af17f58daee089ba1fd44e3dbd98a0000000006a7d517193584d0feed9bb3431d13206be544281b57b8566cc5375ff4000000f0973e76495f3ffc65798a529de5cba4ec7f47f17669c9fa256923f099a1cda304040303090204040000000402000134000000000080c6a47e8d0300c80000000000000006a1d8179137542a983437bdfe2a7ab2557f535c8a78722b68a49dc0000000000602010a7400000000373c6f8e84c6822a9f87035f65cccf899eef3fcdee61077041a93e1805bab24e373c6f8e84c6822a9f87035f65cccf899eef3fcdee61077041a93e1805bab24e00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000006060105080b07000402000000
    SOLBroadcastTxPayload:
      type: object
      required:
        - tx_serialized
      properties:
        tx_serialized:
          type: string
          description: Hex encoded signed transaction
          example: 0300000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000063b2b5ef76d483b695bc3b954d9a372ca5f744e00279c8578bc4268d570b701a037fac575ae16bb3ba5702b8d5bd9930953453e2d628368f83a11ab5896d20bbcae0b4a119860afd99da20f3462ba15d8bd1528d73724b83e8cc4cee00787df28a181783c264113ef1870bae5a90987fc5cfcdffaddf23c7dcfd7585c13d10b0301080c373c6f8e84c6822a9f87035f65cccf899eef3fcdee61077041a93e1805bab24e1bb5f70b4d3ae65feb6d20587f62ccc8d5e720e99abe3d4415972bbf74a8a88a51f5f3871e65b84cc393458d0f23a413184cf2bb7093ae4e2c99d55b39a575c5f98e3135fcb53e71e6fafcb4da3a3cc36af1c76a1a7e72aa12eae1346d724c6c00000000000000000000000000000000000000000000000000000000000000004792650d1e9a4fe99721617c7d47c8712c14c20a76bf043368c6528c9090531a06a1d8179137542a983437bdfe2a7ab2557f535c8a78722b68a49dc00000000006a1d817a502050b680791e6ce6db88e1e5b7150f61fc6790a4eb4d10000000006a7d51718c774c928566398691d5eb68b5eb8a39b4b6d5c73555b210000000006a7d517192c568ee08a845f73d29788cf035c3145b21ab344d8062ea940000006a7d517192c5c51218cc94c3d4af17f58daee089ba1fd44e3dbd98a0000000006a7d517193584d0feed9bb3431d13206be544281b57b8566cc5375ff4000000f0973e76495f3ffc65798a529de5cba4ec7f47f17669c9fa256923f099a1cda304040303090204040000000402000134000000000080c6a47e8d0300c80000000000000006a1d8179137542a983437bdfe2a7ab2557f535c8a78722b68a49dc0000000000602010a7400000000373c6f8e84c6822a9f87035f65cccf899eef3fcdee61077041a93e1805bab24e373c6f8e84c6822a9f87035f65cccf899eef3fcdee61077041a93e1805bab24e00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000006060105080b07000402000000
    SOLBroadcastTx:
      type: object
      properties:
        tx_hash:
          type: string
          description: Hash of the transaction
          example: sV6dgQyxByL66t9uTPmffitncWNmnkR8oEC1gQ29jPrKFHm9TkMGvS3TgcQeNz9pSN7913aPXe6MMHFS4xqTafL
    SOLNonceAccount:
      type: object
      required:
        - nonce_account
        - nonce_account_authority
      properties:
        nonce_account:
          type: string
          description: Nonce account address
          example: 3M7sFDMdUxfNNSmKk2ZmDKgKJFzuLvxpuXKDTLRGXpcK
        nonce_account_authority:
          type: string
          description: Nonce account authority address
          example: 6WwYZH8zdqF7kELtRfo1yAnvD1wvXwTg4m1jBhUCqC68
    SOLTxStatus:
      type: object
      properties:
        status:
          type: string
          description: Transaction status
          enum:
            - success
            - error
          example: success
        receipt:
          type: object
          description: Transaction receipt. Object shape can be found [here](https://github.com/solana-labs/solana-web3.js/blob/dfc6d588b4b7c880d74dc727399ee8a84979b480/packages/library-legacy/src/connection.ts#L1071)
          example:
            blockTime: 1676916194
            meta:
              computeUnitsConsumed: 0
              err: null
              fee: 15000
              innerInstructions: []
              loadedAddresses:
                readonly: []
                writable: []
              logMessages:
                - Program 11111111111111111111111111111111 invoke [1]
                - Program 11111111111111111111111111111111 success
                - Program 11111111111111111111111111111111 invoke [1]
                - Program 11111111111111111111111111111111 success
                - Program Stake11111111111111111111111111111111111111 invoke [1]
                - Program Stake11111111111111111111111111111111111111 success
                - Program Stake11111111111111111111111111111111111111 invoke [1]
                - Program Stake11111111111111111111111111111111111111 success
              postBalances:
                - 1587335720
                - 200000000
                - 1979975000
                - 10000000
                - 1
                - 7292994607
                - 1
                - 960480
                - 1169280
                - 42706560
                - 1009200
                - 114979200
              postTokenBalances: []
              preBalances:
                - 1787350720
                - 0
                - 1979975000
                - 10000000
                - 1
                - 7292994607
                - 1
                - 960480
                - 1169280
                - 42706560
                - 1009200
                - 114979200
              preTokenBalances: []
              rewards: []
              status:
                Ok: null
            slot: 197065694
            transaction:
              message:
                header:
                  numReadonlySignedAccounts: 1
                  numReadonlyUnsignedAccounts: 8
                  numRequiredSignatures: 3
                accountKeys:
                  - 4icse2mPXNgyxxn11tVM7sTnSqDqwJSEzdnaCQnRzvA9
                  - 8qcpEjkWRi7LuZL4oQARDNTMVUwLQyakuno2syEMLsBi
                  - 6WwYZH8zdqF7kELtRfo1yAnvD1wvXwTg4m1jBhUCqC68
                  - HoAGnvTdp4Qgrq3NWtNQFS6FixasBhLqui23Seq7riSw
                  - '11111111111111111111111111111111'
                  - FwR3PbjS5iyqzLiLugrBqKSa5EKZ4vK9SKs7eQXtT59f
                  - Stake11111111111111111111111111111111111111
                  - StakeConfig11111111111111111111111111111111
                  - SysvarC1ock11111111111111111111111111111111
                  - SysvarRecentB1ockHashes11111111111111111111
                  - SysvarRent111111111111111111111111111111111
                  - SysvarStakeHistory1111111111111111111111111
                recentBlockhash: 4emvYWMe99WbtKFHmtv5gEUYi9HfVnmQyf5Y7ccCEpWR
                instructions:
                  - accounts:
                      - 3
                      - 9
                      - 2
                    data: 6vx8P
                    programIdIndex: 4
                  - accounts:
                      - 0
                      - 1
                    data: 111112cxUqMWZDxCrGjkHwTWjy7bQNEqgy3xB2LZ8vt9NjVisJzdYK3W8eRceiR2k9CjMy
                    programIdIndex: 4
                  - accounts:
                      - 1
                      - 10
                    data: 1111BNVhr29wy4CUDfmP3ysWa9GUZMwYaMaAp9JVWCAzhqZ78HhuLB7fgzVCHGpmMQg4sJMrzXVvT3BxhUBDvroCMCJ5sKhVwNWL2phXwqXEH6mKiVgsJwPG3iKFVxiQoPLBXFx7Vv9USNmuAMcTWz6tvYb2w
                    programIdIndex: 6
                  - accounts:
                      - 1
                      - 5
                      - 8
                      - 11
                      - 7
                      - 0
                    data: 3xyZh
                    programIdIndex: 6
                indexToProgramIds: {}
              signatures:
                - 569uGMNQR4vVeukdSTmLtrzs5ZSiAFTk3tPTBavJjZ1H7b3be2EB8ZjRcfhTA6gBApien2tbJgKYayDVtRKFRfUu
                - 3hSgNRnKero2XogfU6Dk3jDXrEMmknNaoPbW4dJ6BHCkDUV5J5rr5iRRdaAtoVLvat7QMox7qpanMu6fqUAUvs3w
                - 5djumEdbCJEAPxJk2r9FybpDLnSy4uazGbgP3EmtQrMQMW4edQrhb1nYK3aJtgf5svMtSXSgKoFho4tUxVAbZSUn
    ATOMStake:
      type: object
      required:
        - validator_address
        - delegator_address
        - rewards
        - available_rewards
        - balance
        - state
        - net_apy
        - unbondings
        - permissions
      properties:
        validator_address:
          type: string
          description: Public key of the validator
          example: cosmosvaloper1uxlf7mvr8nep3gm7udf2u9remms2jyjqvwdul2
        delegator_address:
          type: string
          description: Public key of the delegator
          example: cosmos1mfdn23y2ydnp6j3l3f8rw6r2gzazrmprgxn5xl
        delegated_at:
          type: string
          description: Date of first delegation ever for the stake. Unavailable for stakes older than [Theta v7 (12/04/2022)](https://github.com/cosmos/gaia/tree/main/docs/roadmap#cosmos-hub-summary).
          format: date-time
          example: '2023-06-16T03:13:23.058547Z'
        delegated_block:
          type: number
          description: Block of first delegation ever for the stake. Unavailable for stakes older than [Theta v7 (12/04/2022)](https://github.com/cosmos/gaia/tree/main/docs/roadmap#cosmos-hub-summary).
          example: 15739267
        undelegated_at:
          type: string
          description: Date of undelegation for the stake
          format: date-time
          example: '2023-07-14T03:56:13.561156Z'
        undelegated_block:
          type: number
          description: Block of undelegation for the stake
          example: 16126416
        rewards:
          type: string
          description: Total rewards accumulated by this stake since its first ever delegation in uATOM. Includes currently available rewards not yet withdrawn.
          example: '735573808534727891000000'
        available_rewards:
          type: string
          description: Available rewards in uATOM that can be withdrawn from this stake
          example: '36748808534727891000000'
        balance:
          type: string
          description: Staked balance on this stake in uATOM
          example: '6300000000000000000000000'
        net_apy:
          type: number
          description: Net annual percentage yield. Unavailable for stakes older than [Theta v7 (12/04/2022)](https://github.com/cosmos/gaia/tree/main/docs/roadmap#cosmos-hub-summary).
          example: 5.76
        state:
          type: string
          description: State of the ATOM stake
          example: active
          enum:
            - active
            - deactivating
            - inactive
        updated_at:
          type: string
          description: Last date this data was updated
          format: date-time
          example: '2023-01-14T01:13:59Z'
        permissions:
          description: permissions related to the stake currently active, ignored if there is no ongoing grants
          type: array
          items:
            type: object
            properties:
              source:
                type: string
                description: whether the stake is recipient (grantee) or the giver (granter) of the permissions
                example: granter
              creation_height:
                type: number
                description: Block at which the unbonding was created
                example: 15000000
              permission:
                type: string
                description: 'Kind of permission been grantee, can be: "Staking.MsgDelegate", "Staking.MsgUndelegate", "Staking.MsgRedelegate" or "Distribution.MsgWithdrawDelegatorReward"'
                example: Staking.MsgDelegate
              expires_at:
                type: string
                description: Exact time at which the permissions will be revoked
                format: date-time
                example: '2023-01-10T01:12:34Z'
                nullable: true
              allow_list:
                type: array
                items:
                  type: string
                nullable: true
                description: List of address on which the granted permission can be applied (ie validator on which delegation is allowed)
                example:
                  - cosmosvaloper1xyz
                  - cosmosvaloper1abc
              deny_list:
                type: array
                items:
                  type: string
                nullable: true
                description: List of address on which the granted permission cannot be applied (ie validator on which delegation is allowed)
                example:
                  - cosmosvaloper1xyz
                  - cosmosvaloper1abc
        unbondings:
          description: unbondings currently active on the stakes. ignored if no unbondings are returned
          type: array
          items:
            type: object
            required:
              - creation_height
              - completion_time
              - balance
              - initial_balance
            properties:
              creation_height:
                type: number
                description: Block at which the unbonding was created
                example: 15000000
              completion_time:
                type: string
                description: Exact time at which the unbonding will take effect
                format: date-time
                example: '2023-01-10T01:12:34Z'
              balance:
                type: string
                description: Amount currently associated with the unbonding (slashes included)
                example: '129300'
              initial_balance:
                type: string
                description: Amount expected at creation (slashes non-included)
                example: '150300'
    PostATOMStakesPayload:
      type: object
      required:
        - stakes
        - account_id
      properties:
        stakes:
          type: array
          items:
            type: object
            properties:
              stakeId:
                type: string
                description: Stake id {validator_address}_{delegator_address}
                example: cosmosvaloper1uxlf7mvr8nep3gm7udf2u9remms2jyjqvwdul2_cosmos1mfdn23y2ydnp6j3l3f8rw6r2gzazrmprgxn5xl}
        account_id:
          type: string
          description: Kiln Account ID
          example: 92f5bfd4-ea38-4824-84f7-686eddff5539
    ATOMStakeMessage:
      type: object
      properties:
        typeUrl:
          type: string
          description: Type URL of the message
          example: /cosmos.staking.v1beta1.MsgDelegate
        value:
          type: object
          description: Message value
          example:
            delegatorAddress: cosmos1mfdn23y2ydnp6j3l3f8rw6r2gzazrmprgxn5xl
            validatorAddress: cosmosvaloper1uxlf7mvr8nep3gm7udf2u9remms2jyjqvwdul2
            amount:
              denom: uatom
              amount: '1000000'
    ATOMStakeMessageRestake:
      type: object
      properties:
        typeUrl:
          type: string
          description: Type URL of the message
          example: /cosmos.staking.v1beta1.StakeAuthorization
        value:
          type: object
          description: Message value
          example:
            allowList:
              address:
                - cosmosvaloper1uxlf7mvr8nep3gm7udf2u9remms2jyjqvwdul2
            AuthorizationType: 1
    ATOMStakeUnsignedTx:
      type: object
      required:
        - unsigned_tx_serialized
        - unsigned_tx_hash
        - tx_body
        - tx_auth_info
        - pubkey
        - messages
        - fee
        - chain_id
        - account_number
      properties:
        unsigned_tx_serialized:
          type: string
          description: Unsigned serialized transaction
          example: 0adf010adc010a2a2f636f736d6f732e7374616b696e672e763162657461312e4d7367426567696e526564656c656761746512ad010a2d636f736d6f733139633966646834383876716a636c6c74777036386a6d3530796477796833366a7165617465761234636f736d6f7376616c6f70657231307636777664656e65653872396c36776c73706863677572326c746c387a746b6672766a39611a34636f736d6f7376616c6f70657231796d7a336b6a7466397a6b666d6d3273326c7279376568307a6439657a33766335797030306622100a057561746f6d12073433313030303012670a500a460a1f2f636f736d6f732e63727970746f2e736563703235366b312e5075624b657912230a21039ce47b2a813d13876131a9c3be77e8c4afa49e948744abbee11f939e2a420f4612040a020801186d12130a0d0a057561746f6d1204353030301080897a1a1174686574612d746573746e65742d30303120e0cd2a
        unsigned_tx_hash:
          type: string
          description: Hash of the unsigned transaction
          example: b6ce1c8185416ce7d42a8c39566a9a2b6b2361a55c04a1dba3dd7445a0e1e364
        tx_body:
          type: string
          description: Transaction body serialized in hex
          example: 0a9e010a232f636f736d6f732e7374616b696e672e763162657461312e4d736744656c656761746512770a2d636f736d6f733139633966646834383876716a636c6c74777036386a6d3530796477796833366a7165617465761234636f736d6f7376616c6f706572313679733065673933356d6b71706b79646b6766636a39616765326175386c39366e61657265391a100a057561746f6d120731303030303030
        tx_auth_info:
          type: string
          description: Transaction auth info serialized in hex
          example: 0a2c0a2a0a28636f736d6f733139633966646834383876716a636c6c74777036386a6d3530796477796833366a716561746576120a2d636f736d6f733139633966646834383876716a636c6c74777036386a6d3530796477796833366a7165617465761234636f736d6f7376616c6f706572313679733065673933356d6b71706b79646b6766636a39616765326175386c39366e6165726539
        pubkey:
          type: string
          description: Wallet compressed public key, this is different than the wallet address
          example: 039ce47b2a813d13876131a9c3be77e8c4afa49e948744abbee11f939e2a420f46
        fee:
          type: object
          description: Fee included in the transaction. Object shape can be found [here](https://github.com/cosmos/cosmjs/blob/72da7971ee4fd77fec1bfef2ec1ba4f14f8c319d/packages/amino/src/signdoc.ts#L12)
          example:
            amount:
              - denom: uatom
                amount: '5000'
            gas: '200000'
        messages:
          type: array
          description: List of messages included in the transaction. The list contains one message for the staking delegation and one more message for rewards restaking in case specified as a parameter (`restake_rewards=true`).
          items:
            oneOf:
              - $ref: '#/components/schemas/ATOMStakeMessage'
              - $ref: '#/components/schemas/ATOMStakeMessageRestake'
          example:
            - typeUrl: /cosmos.staking.v1beta1.MsgDelegate
              value:
                delegatorAddress: cosmos1mfdn23y2ydnp6j3l3f8rw6r2gzazrmprgxn5xl
                validatorAddress: cosmosvaloper1uxlf7mvr8nep3gm7udf2u9remms2jyjqvwdul2
                amount:
                  denom: uatom
                  amount: '1000000'
            - typeUrl: /cosmos.staking.v1beta1.StakeAuthorization
              allowList:
                address:
                  - cosmosvaloper1uxlf7mvr8nep3gm7udf2u9remms2jyjqvwdul2
              AuthorizationType: 1
        chain_id:
          type: string
          description: Chain ID
          example: cosmoshub-4
        account_number:
          type: number
          description: Account number
          example: 1234
    ATOMUnsignedTx:
      type: object
      required:
        - unsigned_tx_serialized
        - unsigned_tx_hash
        - tx_body
        - tx_auth_info
        - pubkey
        - message
        - fee
        - chain_id
        - account_number
      properties:
        unsigned_tx_serialized:
          type: string
          description: Unsigned serialized transaction
          example: 0adf010adc010a2a2f636f736d6f732e7374616b696e672e763162657461312e4d7367426567696e526564656c656761746512ad010a2d636f736d6f733139633966646834383876716a636c6c74777036386a6d3530796477796833366a7165617465761234636f736d6f7376616c6f70657231307636777664656e65653872396c36776c73706863677572326c746c387a746b6672766a39611a34636f736d6f7376616c6f70657231796d7a336b6a7466397a6b666d6d3273326c7279376568307a6439657a33766335797030306622100a057561746f6d12073433313030303012670a500a460a1f2f636f736d6f732e63727970746f2e736563703235366b312e5075624b657912230a21039ce47b2a813d13876131a9c3be77e8c4afa49e948744abbee11f939e2a420f4612040a020801186d12130a0d0a057561746f6d1204353030301080897a1a1174686574612d746573746e65742d30303120e0cd2a
        unsigned_tx_hash:
          type: string
          description: Hash of the unsigned transaction
          example: b6ce1c8185416ce7d42a8c39566a9a2b6b2361a55c04a1dba3dd7445a0e1e364
        tx_body:
          type: string
          description: Transaction body serialized in hex
          example: 0a9e010a232f636f736d6f732e7374616b696e672e763162657461312e4d736744656c656761746512770a2d636f736d6f733139633966646834383876716a636c6c74777036386a6d3530796477796833366a7165617465761234636f736d6f7376616c6f706572313679733065673933356d6b71706b79646b6766636a39616765326175386c39366e61657265391a100a057561746f6d120731303030303030
        tx_auth_info:
          type: string
          description: Transaction auth info serialized in hex
          example: 0a2c0a2a0a28636f736d6f733139633966646834383876716a636c6c74777036386a6d3530796477796833366a716561746576120a2d636f736d6f733139633966646834383876716a636c6c74777036386a6d3530796477796833366a7165617465761234636f736d6f7376616c6f706572313679733065673933356d6b71706b79646b6766636a39616765326175386c39366e6165726539
        pubkey:
          type: string
          description: Wallet compressed public key, this is different than the wallet address
          example: 039ce47b2a813d13876131a9c3be77e8c4afa49e948744abbee11f939e2a420f46
        message:
          type: object
          description: Message included in the transaction
          example:
            typeUrl: /cosmos.staking.v1beta1.MsgDelegate
            value:
              delegatorAddress: cosmos1mfdn23y2ydnp6j3l3f8rw6r2gzazrmprgxn5xl
              validatorAddress: cosmosvaloper1uxlf7mvr8nep3gm7udf2u9remms2jyjqvwdul2
              amount:
                denom: uatom
                amount: '1000000'
        fee:
          type: object
          description: Fee included in the transaction. Object shape can be found [here](https://github.com/cosmos/cosmjs/blob/72da7971ee4fd77fec1bfef2ec1ba4f14f8c319d/packages/amino/src/signdoc.ts#L12)
          example:
            amount:
              - denom: uatom
                amount: '5000'
            gas: '200000'
        chain_id:
          type: string
          description: Chain ID
          example: cosmoshub-4
        account_number:
          type: number
          description: Account number
          example: 1234
    ATOMSignedTx:
      type: object
      required:
        - signed_tx_serialized
      properties:
        signed_tx_serialized:
          type: string
          description: Serialized signed transaction in hex
          example: 0aa1010a9e010a232f636f736d6f732e7374616b696e672e763162657461312e4d736744656c656761746512770a2d636f736d6f733139633966646834383876716a636c6c74777036386a6d3530796477796833366a7165617465761234636f736d6f7376616c6f706572313679733065673933356d6b71706b79646b6766636a39616765326175386c39366e61657265391a100a057561746f6d12073130303030303012670a500a460a1f2f636f736d6f732e63727970746f2e736563703235366b312e5075624b657912230a21039ce47b2a813d13876131a9c3be77e8c4afa49e948744abbee11f939e2a420f4612040a020801182012130a0d0a057561746f6d12043530303010e0a7121a40191f87a54dceafb6ab9a5f112a13444ca37e49a029e531bb21301fd72e9d390304c763cca5a9760a631dc85705dd6b08b50f5fff7d5de8d73b2cebd1f4c3b6a0
    ATOMTxHash:
      type: object
      required:
        - tx_hash
      properties:
        tx_hash:
          type: string
          description: Hash of the transaction
          example: 2B4F732E12D5D5AF1F907AD03B199167A718EDC6201DE5713143AB80990420CB
    ATOMPrepareTxPayload:
      type: object
      required:
        - pubkey
        - tx_body
        - tx_auth_info
        - signature
      properties:
        pubkey:
          type: string
          description: Wallet public key (compressed or uncompressed), this is different than the wallet address
          example: 039ce47b2a813d13876131a9c3be77e8c4afa49e948744abbee11f939e2a420f46
        tx_body:
          type: string
          description: Transaction body serialized in hex
          example: 0a9e010a232f636f736d6f732e7374616b696e672e763162657461312e4d736744656c656761746512770a2d636f736d6f733139633966646834383876716a636c6c74777036386a6d3530796477796833366a7165617465761234636f736d6f7376616c6f706572313679733065673933356d6b71706b79646b6766636a39616765326175386c39366e61657265391a100a057561746f6d120731303030303030
        tx_auth_info:
          type: string
          description: Transaction auth info serialized in hex
          example: 0a2c0a2a0a28636f736d6f733139633966646834383876716a636c6c74777036386a6d3530796477796833366a716561746576120a2d636f736d6f733139633966646834383876716a636c6c74777036386a6d3530796477796833366a7165617465761234636f736d6f7376616c6f706572313679733065673933356d6b71706b79646b6766636a39616765326175386c39366e6165726539
        signature:
          type: string
          description: Transaction signature serialized in hex
          example: 191f87a54dceafb6ab9a5f112a13444ca37e49a029e531bb21301fd72e9d390304c763cca5a9760a631dc85705dd6b08b50f5fff7d5de8d73b2cebd1f4c3b6a0
    ATOMBroadcastTxPayload:
      type: object
      required:
        - tx_serialized
      properties:
        tx_serialized:
          type: string
          description: Signed transaction serialized in hex
          example: 0aa1010a9e010a232f636f736d6f732e7374616b696e672e763162657461312e4d736744656c656761746512770a2d636f736d6f733139633966646834383876716a636c6c74777036386a6d3530796477796833366a7165617465761234636f736d6f7376616c6f706572313679733065673933356d6b71706b79646b6766636a39616765326175386c39366e61657265391a100a057561746f6d12073130303030303012670a500a460a1f2f636f736d6f732e63727970746f2e736563703235366b312e5075624b657912230a21039ce47b2a813d13876131a9c3be77e8c4afa49e948744abbee11f939e2a420f4612040a020801182012130a0d0a057561746f6d12043530303010e0a7121a40191f87a54dceafb6ab9a5f112a13444ca37e49a029e531bb21301fd72e9d390304c763cca5a9760a631dc85705dd6b08b50f5fff7d5de8d73b2cebd1f4c3b6a0
    ATOMTxStatus:
      type: object
      properties:
        status:
          type: string
          enum:
            - success
            - error
          description: Transaction status
          example: success
        receipt:
          type: object
          description: Transaction receipt. Only present if status is success. Object shape can be found [here](https://github.com/cosmos/cosmjs/blob/e8e65aa0c145616ccb58625c32bffe08b46ff574/packages/stargate/src/stargateclient.ts#L67)
          example:
            height: 16007296
            txIndex: 0
            hash: 2B4F732E12D5D5AF1F907AD03B199167A718EDC6201DE5713143AB80990420CB
            code: 0
            events:
              - type: coin_spent
                attributes:
                  - key: spender
                    value: cosmos19c9fdh488vqjclltwp68jm50ydwyh36jqeatev
                  - key: amount
                    value: 5000uatom
              - type: coin_received
                attributes:
                  - key: receiver
                    value: cosmos17xpfvakm2amg962yls6f84z3kell8c5lserqta
                  - key: amount
                    value: 5000uatom
              - type: transfer
                attributes:
                  - key: recipient
                    value: cosmos17xpfvakm2amg962yls6f84z3kell8c5lserqta
                  - key: sender
                    value: cosmos19c9fdh488vqjclltwp68jm50ydwyh36jqeatev
                  - key: amount
                    value: 5000uatom
              - type: message
                attributes:
                  - key: sender
                    value: cosmos19c9fdh488vqjclltwp68jm50ydwyh36jqeatev
              - type: tx
                attributes:
                  - key: fee
                    value: 5000uatom
                  - key: fee_payer
                    value: cosmos19c9fdh488vqjclltwp68jm50ydwyh36jqeatev
              - type: tx
                attributes:
                  - key: acc_seq
                    value: cosmos19c9fdh488vqjclltwp68jm50ydwyh36jqeatev/33
              - type: tx
                attributes:
                  - key: signature
                    value: GR+HpU3Or7arml8RKhNETKN+SaAp5TG7ITAf1y6dOQMEx2PMpal2CmMdyFcF3WsItQ9f/31d6Nc7LOvR9MO2oA==
              - type: message
                attributes:
                  - key: action
                    value: /cosmos.staking.v1beta1.MsgDelegate
              - type: coin_spent
                attributes:
                  - key: spender
                    value: cosmos1jv65s3grqf6v6jl3dp4t6c9t9rk99cd88lyufl
                  - key: amount
                    value: 5uatom
              - type: coin_received
                attributes:
                  - key: receiver
                    value: cosmos19c9fdh488vqjclltwp68jm50ydwyh36jqeatev
                  - key: amount
                    value: 5uatom
              - type: transfer
                attributes:
                  - key: recipient
                    value: cosmos19c9fdh488vqjclltwp68jm50ydwyh36jqeatev
                  - key: sender
                    value: cosmos1jv65s3grqf6v6jl3dp4t6c9t9rk99cd88lyufl
                  - key: amount
                    value: 5uatom
              - type: message
                attributes:
                  - key: sender
                    value: cosmos1jv65s3grqf6v6jl3dp4t6c9t9rk99cd88lyufl
              - type: withdraw_rewards
                attributes:
                  - key: amount
                    value: 5uatom
                  - key: validator
                    value: cosmosvaloper1uxlf7mvr8nep3gm7udf2u9remms2jyjqvwdul2
              - type: coin_spent
                attributes:
                  - key: spender
                    value: cosmos19c9fdh488vqjclltwp68jm50ydwyh36jqeatev
                  - key: amount
                    value: 100000uatom
              - type: coin_received
                attributes:
                  - key: receiver
                    value: cosmos1fl48vsnmsdzcv85q5d2q4z5ajdha8yu34mf0eh
                  - key: amount
                    value: 100000uatom
              - type: delegate
                attributes:
                  - key: validator
                    value: cosmosvaloper1uxlf7mvr8nep3gm7udf2u9remms2jyjqvwdul2
                  - key: amount
                    value: 100000uatom
                  - key: new_shares
                    value: '100000.000000000000000000'
              - type: message
                attributes:
                  - key: module
                    value: staking
                  - key: sender
                    value: cosmos19c9fdh488vqjclltwp68jm50ydwyh36jqeatev
            rawLog: '[{"events":[{"type":"coin_received","attributes":[{"key":"receiver","value":"cosmos19c9fdh488vqjclltwp68jm50ydwyh36jqeatev"},{"key":"amount","value":"5uatom"},{"key":"receiver","value":"cosmos1fl48vsnmsdzcv85q5d2q4z5ajdha8yu34mf0eh"},{"key":"amount","value":"100000uatom"}]},{"type":"coin_spent","attributes":[{"key":"spender","value":"cosmos1jv65s3grqf6v6jl3dp4t6c9t9rk99cd88lyufl"},{"key":"amount","value":"5uatom"},{"key":"spender","value":"cosmos19c9fdh488vqjclltwp68jm50ydwyh36jqeatev"},{"key":"amount","value":"100000uatom"}]},{"type":"delegate","attributes":[{"key":"validator","value":"cosmosvaloper1uxlf7mvr8nep3gm7udf2u9remms2jyjqvwdul2"},{"key":"amount","value":"100000uatom"},{"key":"new_shares","value":"100000.000000000000000000"}]},{"type":"message","attributes":[{"key":"action","value":"/cosmos.staking.v1beta1.MsgDelegate"},{"key":"sender","value":"cosmos1jv65s3grqf6v6jl3dp4t6c9t9rk99cd88lyufl"},{"key":"module","value":"staking"},{"key":"sender","value":"cosmos19c9fdh488vqjclltwp68jm50ydwyh36jqeatev"}]},{"type":"transfer","attributes":[{"key":"recipient","value":"cosmos19c9fdh488vqjclltwp68jm50ydwyh36jqeatev"},{"key":"sender","value":"cosmos1jv65s3grqf6v6jl3dp4t6c9t9rk99cd88lyufl"},{"key":"amount","value":"5uatom"}]},{"type":"withdraw_rewards","attributes":[{"key":"amount","value":"5uatom"},{"key":"validator","value":"cosmosvaloper1uxlf7mvr8nep3gm7udf2u9remms2jyjqvwdul2"}]}]}]'
            tx:
              '0': 10
              '1': 160
              '2': 1
              '3': 10
              '4': 157
              '5': 1
              '6': 10
              '7': 35
              '8': 47
              '9': 99
              '10': 111
              '11': 115
              '12': 109
              '13': 111
              '14': 115
              '15': 46
              '16': 115
              '17': 116
              '18': 97
              '19': 107
              '20': 105
              '21': 110
              '22': 103
              '23': 46
              '24': 118
              '25': 49
              '26': 98
              '27': 101
              '28': 116
              '29': 97
              '30': 49
              '31': 46
              '32': 77
              '33': 115
              '34': 103
              '35': 68
              '36': 101
              '37': 108
              '38': 101
              '39': 103
              '40': 97
              '41': 116
              '42': 101
              '43': 18
              '44': 118
              '45': 10
              '46': 45
              '47': 99
              '48': 111
              '49': 115
              '50': 109
              '51': 111
              '52': 115
              '53': 49
              '54': 57
              '55': 99
              '56': 57
              '57': 102
              '58': 100
              '59': 104
              '60': 52
              '61': 56
              '62': 56
              '63': 118
              '64': 113
              '65': 106
              '66': 99
              '67': 108
              '68': 108
              '69': 116
              '70': 119
              '71': 112
              '72': 54
              '73': 56
              '74': 106
              '75': 109
              '76': 53
              '77': 48
              '78': 121
              '79': 100
              '80': 119
              '81': 121
              '82': 104
              '83': 51
              '84': 54
              '85': 106
              '86': 113
              '87': 101
              '88': 97
              '89': 116
              '90': 101
              '91': 118
              '92': 18
              '93': 52
              '94': 99
              '95': 111
              '96': 115
              '97': 109
              '98': 111
              '99': 115
              '100': 118
              '101': 97
              '102': 108
              '103': 111
              '104': 112
              '105': 101
              '106': 114
              '107': 49
              '108': 54
              '109': 121
              '110': 115
              '111': 48
              '112': 101
              '113': 103
              '114': 57
              '115': 51
              '116': 53
              '117': 109
              '118': 107
              '119': 113
              '120': 112
              '121': 107
              '122': 121
              '123': 100
              '124': 107
              '125': 103
              '126': 102
              '127': 99
              '128': 106
              '129': 57
              '130': 97
              '131': 103
              '132': 101
              '133': 50
              '134': 97
              '135': 117
              '136': 56
              '137': 108
              '138': 57
              '139': 54
              '140': 110
              '141': 97
              '142': 101
              '143': 114
              '144': 101
              '145': 57
              '146': 26
              '147': 15
              '148': 10
              '149': 5
              '150': 117
              '151': 97
              '152': 116
              '153': 111
              '154': 109
              '155': 18
              '156': 6
              '157': 49
              '158': 48
              '159': 48
              '160': 48
              '161': 48
              '162': 48
              '163': 18
              '164': 103
              '165': 10
              '166': 80
              '167': 10
              '168': 70
              '169': 10
              '170': 31
              '171': 47
              '172': 99
              '173': 111
              '174': 115
              '175': 109
              '176': 111
              '177': 115
              '178': 46
              '179': 99
              '180': 114
              '181': 121
              '182': 112
              '183': 116
              '184': 111
              '185': 46
              '186': 115
              '187': 101
              '188': 99
              '189': 112
              '190': 50
              '191': 53
              '192': 54
              '193': 107
              '194': 49
              '195': 46
              '196': 80
              '197': 117
              '198': 98
              '199': 75
              '200': 101
              '201': 121
              '202': 18
              '203': 35
              '204': 10
              '205': 33
              '206': 3
              '207': 156
              '208': 228
              '209': 123
              '210': 42
              '211': 129
              '212': 61
              '213': 19
              '214': 135
              '215': 97
              '216': 49
              '217': 169
              '218': 195
              '219': 190
              '220': 119
              '221': 232
              '222': 196
              '223': 175
              '224': 164
              '225': 158
              '226': 148
              '227': 135
              '228': 68
              '229': 171
              '230': 190
              '231': 225
              '232': 31
              '233': 147
              '234': 158
              '235': 42
              '236': 66
              '237': 15
              '238': 70
              '239': 18
              '240': 4
              '241': 10
              '242': 2
              '243': 8
              '244': 1
              '245': 24
              '246': 33
              '247': 18
              '248': 19
              '249': 10
              '250': 13
              '251': 10
              '252': 5
              '253': 117
              '254': 97
              '255': 116
              '256': 111
              '257': 109
              '258': 18
              '259': 4
              '260': 53
              '261': 48
              '262': 48
              '263': 48
              '264': 16
              '265': 224
              '266': 167
              '267': 18
              '268': 26
              '269': 64
              '270': 25
              '271': 31
              '272': 135
              '273': 165
              '274': 77
              '275': 206
              '276': 175
              '277': 182
              '278': 171
              '279': 154
              '280': 95
              '281': 17
              '282': 42
              '283': 19
              '284': 68
              '285': 76
              '286': 163
              '287': 126
              '288': 73
              '289': 160
              '290': 41
              '291': 229
              '292': 49
              '293': 187
              '294': 33
              '295': 48
              '296': 31
              '297': 215
              '298': 46
              '299': 157
              '300': 57
              '301': 3
              '302': 4
              '303': 199
              '304': 99
              '305': 204
              '306': 165
              '307': 169
              '308': 118
              '309': 10
              '310': 99
              '311': 29
              '312': 200
              '313': 87
              '314': 5
              '315': 221
              '316': 107
              '317': 8
              '318': 181
              '319': 15
              '320': 95
              '321': 255
              '322': 125
              '323': 93
              '324': 232
              '325': 215
              '326': 59
              '327': 44
              '328': 235
              '329': 209
              '330': 244
              '331': 195
              '332': 182
              '333': 160
            gasUsed: 167798
            gasWanted: 300000
    ATOMCraftUnstakeTxPayload:
      type: object
      required:
        - pubkey
        - validator
      properties:
        pubkey:
          type: string
          example: 039ce47b2a813d13876131a9c3be77e8c4afa49e948744abbee11f939e2a420f46
          description: Wallet public key (compressed or uncompressed), this is different than the wallet address
        validator:
          type: string
          example: cosmosvaloper1uxlf7mvr8nep3gm7udf2u9remms2jyjqvwdul2
          description: Validator address
        amount_uatom:
          type: string
          example: '1000000000000000000000000'
          description: Amount to unstake in uATOM. Omit to unstake all the delegated amount
    ATOMCraftRedelegateTxPayload:
      type: object
      required:
        - account_id
        - pubkey
        - validator_source
        - validator_destination
      properties:
        account_id:
          type: string
          example: b7177fd2-fbb3-479f-aa92-db9fb16e229f
          format: uuid
          description: Kiln Account ID to which the new stake will be linked
        pubkey:
          type: string
          example: 039ce47b2a813d13876131a9c3be77e8c4afa49e948744abbee11f939e2a420f46
          description: Wallet public key (compressed or uncompressed), this is different than the wallet address
        validator_source:
          type: string
          example: cosmosvaloper1uxlf7mvr8nep3gm7udf2u9remms2jyjqvwdul2
          description: Validator source address of current stake
        validator_destination:
          type: string
          example: cosmosvaloper1uxlf7mvr8nep3gm7udf2u9remms2jyjqvwdul2
          description: Validator destination address to which redelegate the stake
        amount_uatom:
          type: string
          example: '1000000000000000000000000'
          description: Amount to redelegate in uATOM
    ATOMCraftStakeTxPayload:
      type: object
      required:
        - account_id
        - pubkey
        - validator
        - amount_uatom
      properties:
        account_id:
          type: string
          example: b7177fd2-fbb3-479f-aa92-db9fb16e229f
          format: uuid
          description: Kiln Account ID to stake into
        pubkey:
          type: string
          example: 039ce47b2a813d13876131a9c3be77e8c4afa49e948744abbee11f939e2a420f46
          description: Wallet public key (compressed or uncompressed), this is different than the wallet address
        validator:
          type: string
          example: cosmosvaloper1uxlf7mvr8nep3gm7udf2u9remms2jyjqvwdul2
          description: Validator address
        amount_uatom:
          type: string
          example: '1000000000000000000000000'
          description: Amount to stake in uatom
        restake_rewards:
          type: boolean
          default: false
          description: If enabled, the rewards will be automatically restaked
        grantee_address:
          type: string
          example: cosmos1u4whe0pwlgt7q7ph37qxalq2wfq4pkcdze5fmd
          description: 'Grantee address, this address is specific to each validator. Kiln grantee addresses are found here: https://github.com/eco-stake/validator-registry/blob/master/Kiln/chains.json https://github.com/eco-stake/validator-registry/blob/master/interop/chains.json'
    ATOMCraftRestakeRewardsTxPayload:
      type: object
      required:
        - pubkey
        - validator_address
        - grantee_address
      properties:
        pubkey:
          type: string
          example: 039ce47b2a813d13876131a9c3be77e8c4afa49e948744abbee11f939e2a420f46
          description: Wallet public key (compressed or uncompressed), this is different than the wallet address
        validator_address:
          type: string
          example: cosmosvaloper1uxlf7mvr8nep3gm7udf2u9remms2jyjqvwdul2
          description: Validator address
        grantee_address:
          type: string
          example: cosmos1u4whe0pwlgt7q7ph37qxalq2wfq4pkcdze5fmd
          description: 'Grantee address, this address is specific to each validator. Kiln grantee addresses are found here: https://github.com/eco-stake/validator-registry/blob/master/Kiln/chains.json https://github.com/eco-stake/validator-registry/blob/master/interop/chains.json'
    ATOMCraftWithdrawRewardsTxPayload:
      type: object
      required:
        - pubkey
        - validator
      properties:
        pubkey:
          type: string
          example: 039ce47b2a813d13876131a9c3be77e8c4afa49e948744abbee11f939e2a420f46
          description: Wallet public key (compressed or uncompressed), this is different than the wallet address
        validator:
          type: string
          example: cosmosvaloper1uxlf7mvr8nep3gm7udf2u9remms2jyjqvwdul2
          description: Validator address
    ATOMReward:
      type: object
      required:
        - date
        - rewards
        - balance
        - net_apy
      properties:
        date:
          type: string
          description: Day for this reward entry
          format: date
          example: '2023-01-15'
        rewards:
          type: string
          description: Accumulated rewards in uATOM during the day
          example: '3575891083876864200000'
        balance:
          type: string
          description: Staked balance in uATOM at the end of the day
          example: '6300000000000000000000000'
        net_apy:
          type: number
          description: Net annual percentage yield
          example: 20.76
        rewards_usd:
          type: number
          description: Estimated value of rewards generated for that day in USD. The exchange rate is the rate at the end of the day provided by CoinGeckko.
        balance_usd:
          type: number
          description: Estimated value of the staked balance at the beginning of the day in USD. The exchange rate is the rate at the end of the day provided by CoinGeckko.
    ATOMOperationDelegate:
      type: object
      properties:
        type:
          type: string
          description: Operation type
          example: staking.MsgDelegate
        time:
          type: string
          description: Date of the operation
          format: date-time
          example: '2023-06-22T15:35:01.892644Z'
        block:
          type: number
          description: Transaction block
          example: 15828207
        tx_hash:
          type: string
          description: Transaction hash
          example: 7DBC7C481A9A28961BDDF5BCDD47217A126EC0497017908453D71FACA9FA3506
        tx_gas_used:
          type: string
          description: Gas used for the whole transaction in uATOM
          example: '186733'
        message_index:
          type: number
          description: Index of the message in the transaction
          example: 0
        validator_address:
          type: string
          description: Validator address
          example: cosmosvaloper1uxlf7mvr8nep3gm7udf2u9remms2jyjqvwdul2
        delegator_address:
          type: string
          description: Delegator address
          example: cosmos1mfdn23y2ydnp6j3l3f8rw6r2gzazrmprgxn5xl
        amount:
          type: string
          description: Amount added to the staked balance in uATOM
          example: '3000000'
        withdraw_rewards:
          type: string
          description: Rewards auto-claimed alongside the operation in uATOM
          example: '10841'
    ATOMOperationUndelegate:
      type: object
      properties:
        type:
          type: string
          description: Operation type
          example: staking.MsgUndelegate
        time:
          type: string
          description: Date of the operation
          format: date-time
          example: '2023-06-22T15:35:01.892644Z'
        block:
          type: number
          description: Transaction block
          example: 15828207
        tx_hash:
          type: string
          description: Transaction hash
          example: 7DBC7C481A9A28961BDDF5BCDD47217A126EC0497017908453D71FACA9FA3506
        tx_gas_used:
          type: string
          description: Gas used for the whole transaction in uATOM
          example: '186733'
        message_index:
          type: number
          description: Index of the message in the transaction
          example: 0
        validator_address:
          type: string
          description: Validator address
          example: cosmosvaloper1uxlf7mvr8nep3gm7udf2u9remms2jyjqvwdul2
        delegator_address:
          type: string
          description: Delegator address
          example: cosmos1mfdn23y2ydnp6j3l3f8rw6r2gzazrmprgxn5xl
        amount:
          type: string
          description: Amount removed from the staked balance in uATOM
          example: '3000000'
        withdraw_rewards:
          type: string
          description: Rewards auto-claimed alongside the operation in uATOM
          example: '10841'
    ATOMOperationRedelegate:
      type: object
      properties:
        type:
          type: string
          description: Operation type
          example: staking.MsgBeginRedelegate
        time:
          type: string
          description: Date of the operation
          format: date-time
          example: '2023-06-22T15:35:01.892644Z'
        block:
          type: number
          description: Transaction block
          example: 15828207
        tx_hash:
          type: string
          description: Transaction hash
          example: 7DBC7C481A9A28961BDDF5BCDD47217A126EC0497017908453D71FACA9FA3506
        tx_gas_used:
          type: string
          description: Gas used for the whole transaction in uATOM
          example: '186733'
        message_index:
          type: number
          description: Index of the message in the transaction
          example: 0
        validator_address:
          type: string
          description: Destination validator address
          example: cosmosvaloper1uxlf7mvr8nep3gm7udf2u9remms2jyjqvwdul2
        validator_address_source:
          type: string
          description: Source validator address
          example: cosmosvaloper1uxlf7mvr8nep3gm7udf2u9remms2jyjqvwdul2
        delegator_address:
          type: string
          description: Delegator address
          example: cosmos1mfdn23y2ydnp6j3l3f8rw6r2gzazrmprgxn5xl
        amount:
          type: string
          description: Amount moved from the source validator staked balance to the destination validator staked balance in uATOM
          example: '3000000'
        withdraw_rewards:
          type: string
          description: Rewards auto-claimed from the destination validator alongside the operation in uATOM
          example: '10841'
        withdraw_rewards_source:
          type: string
          description: Rewards auto-claimed from the source validator alongside the operation in uATOM
          example: '10841'
    ATOMOperationWithdrawRewards:
      type: object
      properties:
        type:
          type: string
          description: Operation type
          example: distr.MsgWithdrawDelegatorReward
        time:
          type: string
          description: Date of the operation
          format: date-time
          example: '2023-06-22T15:35:01.892644Z'
        block:
          type: number
          description: Transaction block
          example: 15828207
        tx_hash:
          type: string
          description: Transaction hash
          example: 7DBC7C481A9A28961BDDF5BCDD47217A126EC0497017908453D71FACA9FA3506
        tx_gas_used:
          type: string
          description: Gas used for the whole transaction in uATOM
          example: '186733'
        message_index:
          type: number
          description: Index of the message in the transaction
          example: 0
        validator_address:
          type: string
          description: Validator address
          example: cosmosvaloper1uxlf7mvr8nep3gm7udf2u9remms2jyjqvwdul2
        delegator_address:
          type: string
          description: Delegator address
          example: cosmos1mfdn23y2ydnp6j3l3f8rw6r2gzazrmprgxn5xl
        withdraw_rewards:
          type: string
          description: Rewards claimed alongside the operation in uATOM
          example: '10841'
    ATOMOperationGrant:
      type: object
      properties:
        type:
          type: string
          description: Operation type
          example: Authz.Grant
        time:
          type: string
          description: Date of the operation
          format: date-time
          example: '2023-06-22T15:35:01.892644Z'
        block:
          type: number
          description: Transaction block
          example: 15828207
        tx_hash:
          type: string
          description: Transaction hash
          example: 7DBC7C481A9A28961BDDF5BCDD47217A126EC0497017908453D71FACA9FA3506
        tx_gas_used:
          type: string
          description: Gas used for the whole transaction in uATOM
          example: '186733'
        message_index:
          type: number
          description: Index of the message in the transaction
          example: 0
        grantee:
          type: string
          description: Recipient of the permissions
          example: cosmos1mfdn23y2ydnp6j3l3f8rw6r2gzazrmprgxn5xl
        granter:
          type: string
          description: Owner of the stake giving the permissions
          example: cosmos1mfdn23y2ydnp6j3l3f8rw6r2gzazrmprgxn5xl
        permission:
          type: string
          description: 'Kind of permission been grantee, can be: "Staking.MsgDelegate", "Staking.MsgUndelegate", "Staking.MsgRedelegate" or "Distribution.MsgWithdrawDelegatorReward"'
          example: Staking.MsgDelegate
        allow_list:
          type: array
          items:
            type: string
          nullable: true
          description: List of address on which the granted permission can be applied (ie validator on which delegation is allowed)
          example:
            - cosmos1mfdn23y2ydnp6j3l3f8rw6r2gzazrmprgxn5xl
            - cosmos1mfdn23y2ydnp6j3l3f8rw6r2gzazrmprgxn5xl
        deny_list:
          type: array
          items:
            type: string
          nullable: true
          description: List of address on which the granted permission cannot be applied (ie validator on which delegation is allowed)
          example:
            - cosmos1mfdn23y2ydnp6j3l3f8rw6r2gzazrmprgxn5xl
            - cosmos1mfdn23y2ydnp6j3l3f8rw6r2gzazrmprgxn5xl
    ATOMOperationExec:
      type: object
      properties:
        type:
          type: string
          description: Operation type
          example: Authz.Exec
        time:
          type: string
          description: Date of the operation
          format: date-time
          example: '2023-06-22T15:35:01.892644Z'
        block:
          type: number
          description: Transaction block
          example: 15828207
        tx_hash:
          type: string
          description: Transaction hash
          example: 7DBC7C481A9A28961BDDF5BCDD47217A126EC0497017908453D71FACA9FA3506
        tx_gas_used:
          type: string
          description: Gas used for the whole transaction in uATOM
          example: '186733'
        message_index:
          type: number
          description: Index of the message in the transaction
          example: 0
        executed_operations:
          type: array
          nullable: true
          items:
            type: object
            properties:
              type:
                type: string
                description: Operation type
                example: staking.Delegate
              validator_address:
                type: string
                description: Destination validator address
                example: cosmosvaloper1uxlf7mvr8nep3gm7udf2u9remms2jyjqvwdul2
              validator_address_source:
                type: string
                description: Source validator address
                example: cosmosvaloper1uxlf7mvr8nep3gm7udf2u9remms2jyjqvwdul2
              delegator_address:
                type: string
                description: Delegator address
                example: cosmos1mfdn23y2ydnp6j3l3f8rw6r2gzazrmprgxn5xl
              amount:
                type: string
                description: Amount moved from the source validator staked balance to the destination validator staked balance in uATOM
                example: '3000000'
              withdraw_rewards:
                type: string
                description: Rewards auto-claimed from the destination validator alongside the operation in uATOM
                example: '10841'
              withdraw_rewards_source:
                type: string
                description: Rewards auto-claimed from the source validator alongside the operation in uATOM
                example: '10841'
    ATOMNetworkStats:
      type: object
      required:
        - atom_price_usd
        - nb_validators
        - network_gross_apy
        - supply_staked_percent
        - inflation_rate
        - updated_at
      properties:
        atom_price_usd:
          type: number
          description: Price of ATOM in USD
          example: 10.53
        nb_validators:
          type: number
          description: Number of validators in the network
          example: 100
        network_gross_apy:
          type: number
          description: Gross annual percentage yield
          example: 4.5
        supply_staked_percent:
          type: number
          description: Supply of ATOM currently staked
          example: 12.4
        inflation_rate:
          type: number
          description: ATOM inflation rate
          example: 3.5
        updated_at:
          type: string
          description: Last date this data was updated
          format: date-time
          example: '2023-01-14T01:13:59Z'
    ATOMTxDecoding:
      type: object
      description: Decoded transaction
      example:
        authInfo:
          signerInfos:
            - publicKey:
                typeUrl: /cosmos.crypto.secp256k1.PubKey
                value:
                  '0': 10
                  '1': 33
                  '2': 3
                  '3': 156
                  '4': 228
                  '5': 123
                  '6': 42
                  '7': 129
                  '8': 61
                  '9': 19
                  '10': 135
                  '11': 97
                  '12': 49
                  '13': 169
                  '14': 195
                  '15': 190
                  '16': 119
                  '17': 232
                  '18': 196
                  '19': 175
                  '20': 164
                  '21': 158
                  '22': 148
                  '23': 135
                  '24': 68
                  '25': 171
                  '26': 190
                  '27': 225
                  '28': 31
                  '29': 147
                  '30': 158
                  '31': 42
                  '32': 66
                  '33': 15
                  '34': 70
              modeInfo:
                single:
                  mode: 1
              sequence:
                low: 102
                high: 0
                unsigned: true
          fee:
            amount:
              - denom: uatom
                amount: '5000'
            gasLimit:
              low: 2000000
              high: 0
              unsigned: true
            payer: ''
            granter: ''
        body:
          messages:
            - typeUrl: /cosmos.staking.v1beta1.MsgDelegate
              value:
                '0': 10
                '1': 45
                '2': 99
                '3': 111
                '4': 115
                '5': 109
                '6': 111
                '7': 115
                '8': 49
                '9': 57
                '10': 99
                '11': 57
                '12': 102
                '13': 100
                '14': 104
                '15': 52
                '16': 56
                '17': 56
                '18': 118
                '19': 113
                '20': 106
                '21': 99
                '22': 108
                '23': 108
                '24': 116
                '25': 119
                '26': 112
                '27': 54
                '28': 56
                '29': 106
                '30': 109
                '31': 53
                '32': 48
                '33': 121
                '34': 100
                '35': 119
                '36': 121
                '37': 104
                '38': 51
                '39': 54
                '40': 106
                '41': 113
                '42': 101
                '43': 97
                '44': 116
                '45': 101
                '46': 118
                '47': 18
                '48': 52
                '49': 99
                '50': 111
                '51': 115
                '52': 109
                '53': 111
                '54': 115
                '55': 118
                '56': 97
                '57': 108
                '58': 111
                '59': 112
                '60': 101
                '61': 114
                '62': 49
                '63': 54
                '64': 121
                '65': 115
                '66': 48
                '67': 101
                '68': 103
                '69': 57
                '70': 51
                '71': 53
                '72': 109
                '73': 107
                '74': 113
                '75': 112
                '76': 107
                '77': 121
                '78': 100
                '79': 107
                '80': 103
                '81': 102
                '82': 99
                '83': 106
                '84': 57
                '85': 97
                '86': 103
                '87': 101
                '88': 50
                '89': 97
                '90': 117
                '91': 56
                '92': 108
                '93': 57
                '94': 54
                '95': 110
                '96': 97
                '97': 101
                '98': 114
                '99': 101
                '100': 57
                '101': 26
                '102': 16
                '103': 10
                '104': 5
                '105': 117
                '106': 97
                '107': 116
                '108': 111
                '109': 109
                '110': 18
                '111': 7
                '112': 49
                '113': 48
                '114': 48
                '115': 48
                '116': 48
                '117': 48
                '118': 48
          memo: ''
          timeoutHeight:
            low: 0
            high: 0
            unsigned: true
          extensionOptions: []
          nonCriticalExtensionOptions: []
        signatures:
          - '0': 116
            '1': 104
            '2': 101
            '3': 116
            '4': 97
            '5': 45
            '6': 116
            '7': 101
            '8': 115
            '9': 116
            '10': 110
            '11': 101
            '12': 116
            '13': 45
            '14': 48
            '15': 48
            '16': 49
    ATOMCraftSendTxPayload:
      type: object
      required:
        - pubkey
        - to
        - amount_uatom
      properties:
        pubkey:
          type: string
          description: Wallet public key (compressed or uncompressed), this is different than the wallet address
          example: 039ce47b2a813d13876131a9c3be77e8c4afa49e948744abbee11f939e2a420f46
        to:
          type: string
          description: Recipient address
          example: cosmos1mfdn23y2ydnp6j3l3f8rw6r2gzazrmprgxn5xl
        amount_uatom:
          type: string
          description: Amount to send in uatom
          example: '1000000000000000000000000'
    CROStake:
      type: object
      required:
        - validator_address
        - delegator_address
        - rewards
        - available_rewards
        - balance
        - state
        - net_apy
        - unbondings
        - permissions
      properties:
        validator_address:
          type: string
          description: Public key of the validator
          example: crocncl10skwvezaqkngyw9uyskzsqe2cu8jc2ysrrndry
        delegator_address:
          type: string
          description: Public key of the delegator
          example: cro1mfdn23y2ydnp6j3l3f8rw6r2gzazrmprgxn5xl
        delegated_at:
          type: string
          description: Date of first delegation ever for the stake. Unavailable for stakes older than [Theta v7 (12/04/2022)](https://github.com/cosmos/gaia/tree/main/docs/roadmap#cosmos-hub-summary).
          format: date-time
          example: '2023-06-16T03:13:23.058547Z'
        delegated_block:
          type: number
          description: Block of first delegation ever for the stake. Unavailable for stakes older than [Theta v7 (12/04/2022)](https://github.com/cosmos/gaia/tree/main/docs/roadmap#cosmos-hub-summary).
          example: 15739267
        undelegated_at:
          type: string
          description: Date of undelegation for the stake
          format: date-time
          example: '2023-07-14T03:56:13.561156Z'
        undelegated_block:
          type: number
          description: Block of undelegation for the stake
          example: 16126416
        rewards:
          type: string
          description: Total rewards accumulated by this stake since its first ever delegation in basecro. Includes currently available rewards not yet withdrawn.
          example: '735573808534727891000000'
        available_rewards:
          type: string
          description: Available rewards in basecro that can be withdrawn from this stake
          example: '36748808534727891000000'
        balance:
          type: string
          description: Staked balance on this stake in basecro
          example: '6300000000000000000000000'
        net_apy:
          type: number
          description: Net annual percentage yield. Unavailable for stakes older than [Theta v7 (12/04/2022)](https://github.com/cosmos/gaia/tree/main/docs/roadmap#cosmos-hub-summary).
          example: 5.76
        state:
          type: string
          description: State of the Cronos stake
          example: active
          enum:
            - active
            - deactivating
            - inactive
        updated_at:
          type: string
          description: Last date this data was updated
          format: date-time
          example: '2023-01-14T01:13:59Z'
        permissions:
          description: permissions related to the stake currently active, ignored if there is no ongoing grants
          type: array
          items:
            type: object
            properties:
              source:
                type: string
                description: whether the stake is recipient (grantee) or the giver (granter) of the permissions
                example: granter
              creation_height:
                type: number
                description: Block at which the unbonding was created
                example: 15000000
              permission:
                type: string
                description: 'Kind of permission been grantee, can be: "Staking.MsgDelegate", "Staking.MsgUndelegate", "Staking.MsgRedelegate" or "Distribution.MsgWithdrawDelegatorReward"'
                example: Staking.MsgDelegate
              expires_at:
                type: string
                description: Exact time at which the permissions will be revoked
                format: date-time
                example: '2023-01-10T01:12:34Z'
                nullable: true
              allow_list:
                type: array
                items:
                  type: string
                nullable: true
                description: List of address on which the granted permission can be applied (ie validator on which delegation is allowed)
                example:
                  - crovaloper1xyz
                  - crovaloper1abc
              deny_list:
                type: array
                items:
                  type: string
                nullable: true
                description: List of address on which the granted permission cannot be applied (ie validator on which delegation is allowed)
                example:
                  - crovaloper1xyz
                  - crovaloper1abc
        unbondings:
          description: unbondings currently active on the stakes. ignored if no unbondings are returned
          type: array
          items:
            type: object
            required:
              - creation_height
              - completion_time
              - balance
              - initial_balance
            properties:
              creation_height:
                type: number
                description: Block at which the unbonding was created
                example: 15000000
              completion_time:
                type: string
                description: Exact time at which the unbonding will take effect
                format: date-time
                example: '2023-01-10T01:12:34Z'
              balance:
                type: string
                description: Amount currently associated with the unbonding (slashes included)
                example: '129300'
              initial_balance:
                type: string
                description: Amount expected at creation (slashes non-included)
                example: '150300'
    PostCROStakesPayload:
      type: object
      required:
        - stakes
        - account_id
      properties:
        stakes:
          type: array
          items:
            type: object
            properties:
              stakeId:
                type: string
                description: Stake id {validator_address}_{delegator_address}
                example: crocncl10skwvezaqkngyw9uyskzsqe2cu8jc2ysrrndry_cro1egww25see7x6pg2lp2mhmnd5s6smzlfmdlwm0h}
        account_id:
          type: string
          description: Kiln Account ID
          example: 92f5bfd4-ea38-4824-84f7-686eddff5539
    CROStakeMessage:
      type: object
      properties:
        typeUrl:
          type: string
          description: Type URL of the message
          example: /cosmos.staking.v1beta1.MsgDelegate
        value:
          type: object
          description: Message value
          example:
            delegatorAddress: cro1egww25see7x6pg2lp2mhmnd5s6smzlfmdlwm0h
            validatorAddress: crocncl10skwvezaqkngyw9uyskzsqe2cu8jc2ysrrndry
            amount:
              denom: basecro
              amount: '1000000'
    CROStakeMessageRestake:
      type: object
      properties:
        typeUrl:
          type: string
          description: Type URL of the message
          example: /cosmos.staking.v1beta1.StakeAuthorization
        value:
          type: object
          description: Message value
          example:
            allowList:
              address:
                - crocncl10skwvezaqkngyw9uyskzsqe2cu8jc2ysrrndry
            AuthorizationType: 1
    CROStakeUnsignedTx:
      type: object
      required:
        - unsigned_tx_serialized
        - unsigned_tx_hash
        - tx_body
        - tx_auth_info
        - pubkey
        - messages
        - fee
        - chain_id
        - account_number
      properties:
        unsigned_tx_serialized:
          type: string
          description: Unsigned serialized transaction
          example: 0adf010adc010a2a2f636f736d6f732e7374616b696e672e763162657461312e4d7367426567696e526564656c656761746512ad010a2d636f736d6f733139633966646834383876716a636c6c74777036386a6d3530796477796833366a7165617465761234636f736d6f7376616c6f70657231307636777664656e65653872396c36776c73706863677572326c746c387a746b6672766a39611a34636f736d6f7376616c6f70657231796d7a336b6a7466397a6b666d6d3273326c7279376568307a6439657a33766335797030306622100a057561746f6d12073433313030303012670a500a460a1f2f636f736d6f732e63727970746f2e736563703235366b312e5075624b657912230a21039ce47b2a813d13876131a9c3be77e8c4afa49e948744abbee11f939e2a420f4612040a020801186d12130a0d0a057561746f6d1204353030301080897a1a1174686574612d746573746e65742d30303120e0cd2a
        unsigned_tx_hash:
          type: string
          description: Hash of the unsigned transaction
          example: b6ce1c8185416ce7d42a8c39566a9a2b6b2361a55c04a1dba3dd7445a0e1e364
        tx_body:
          type: string
          description: Transaction body serialized in hex
          example: 0a9e010a232f636f736d6f732e7374616b696e672e763162657461312e4d736744656c656761746512770a2d636f736d6f733139633966646834383876716a636c6c74777036386a6d3530796477796833366a7165617465761234636f736d6f7376616c6f706572313679733065673933356d6b71706b79646b6766636a39616765326175386c39366e61657265391a100a057561746f6d120731303030303030
        tx_auth_info:
          type: string
          description: Transaction auth info serialized in hex
          example: 0a2c0a2a0a28636f736d6f733139633966646834383876716a636c6c74777036386a6d3530796477796833366a716561746576120a2d636f736d6f733139633966646834383876716a636c6c74777036386a6d3530796477796833366a7165617465761234636f736d6f7376616c6f706572313679733065673933356d6b71706b79646b6766636a39616765326175386c39366e6165726539
        pubkey:
          type: string
          description: Wallet compressed public key, this is different than the wallet address
          example: 039ce47b2a813d13876131a9c3be77e8c4afa49e948744abbee11f939e2a420f46
        fee:
          type: object
          description: Fee included in the transaction. Object shape can be found [here](https://github.com/cosmos/cosmjs/blob/72da7971ee4fd77fec1bfef2ec1ba4f14f8c319d/packages/amino/src/signdoc.ts#L12)
          example:
            amount:
              - denom: basecro
                amount: '5000'
            gas: '200000'
        messages:
          type: array
          description: List of messages included in the transaction. The list contains one message for the staking delegation and one more message for rewards restaking in case specified as a parameter (`restake_rewards=true`).
          items:
            oneOf:
              - $ref: '#/components/schemas/CROStakeMessage'
              - $ref: '#/components/schemas/CROStakeMessageRestake'
          example:
            - typeUrl: /cosmos.staking.v1beta1.MsgDelegate
              value:
                delegatorAddress: cro1egww25see7x6pg2lp2mhmnd5s6smzlfmdlwm0h
                validatorAddress: crocncl10skwvezaqkngyw9uyskzsqe2cu8jc2ysrrndry
                amount:
                  denom: basecro
                  amount: '1000000'
            - typeUrl: /cosmos.staking.v1beta1.StakeAuthorization
              allowList:
                address:
                  - crocncl10skwvezaqkngyw9uyskzsqe2cu8jc2ysrrndry
              AuthorizationType: 1
        chain_id:
          type: string
          description: Chain ID
          example: cosmoshub-4
        account_number:
          type: number
          description: Account number
          example: 1234
    CROUnsignedTx:
      type: object
      required:
        - unsigned_tx_serialized
        - unsigned_tx_hash
        - tx_body
        - tx_auth_info
        - pubkey
        - message
        - fee
        - chain_id
        - account_number
      properties:
        unsigned_tx_serialized:
          type: string
          description: Unsigned serialized transaction
          example: 0adf010adc010a2a2f636f736d6f732e7374616b696e672e763162657461312e4d7367426567696e526564656c656761746512ad010a2d636f736d6f733139633966646834383876716a636c6c74777036386a6d3530796477796833366a7165617465761234636f736d6f7376616c6f70657231307636777664656e65653872396c36776c73706863677572326c746c387a746b6672766a39611a34636f736d6f7376616c6f70657231796d7a336b6a7466397a6b666d6d3273326c7279376568307a6439657a33766335797030306622100a057561746f6d12073433313030303012670a500a460a1f2f636f736d6f732e63727970746f2e736563703235366b312e5075624b657912230a21039ce47b2a813d13876131a9c3be77e8c4afa49e948744abbee11f939e2a420f4612040a020801186d12130a0d0a057561746f6d1204353030301080897a1a1174686574612d746573746e65742d30303120e0cd2a
        unsigned_tx_hash:
          type: string
          description: Hash of the unsigned transaction
          example: b6ce1c8185416ce7d42a8c39566a9a2b6b2361a55c04a1dba3dd7445a0e1e364
        tx_body:
          type: string
          description: Transaction body serialized in hex
          example: 0a9e010a232f636f736d6f732e7374616b696e672e763162657461312e4d736744656c656761746512770a2d636f736d6f733139633966646834383876716a636c6c74777036386a6d3530796477796833366a7165617465761234636f736d6f7376616c6f706572313679733065673933356d6b71706b79646b6766636a39616765326175386c39366e61657265391a100a057561746f6d120731303030303030
        tx_auth_info:
          type: string
          description: Transaction auth info serialized in hex
          example: 0a2c0a2a0a28636f736d6f733139633966646834383876716a636c6c74777036386a6d3530796477796833366a716561746576120a2d636f736d6f733139633966646834383876716a636c6c74777036386a6d3530796477796833366a7165617465761234636f736d6f7376616c6f706572313679733065673933356d6b71706b79646b6766636a39616765326175386c39366e6165726539
        pubkey:
          type: string
          description: Wallet compressed public key, this is different than the wallet address
          example: 039ce47b2a813d13876131a9c3be77e8c4afa49e948744abbee11f939e2a420f46
        message:
          type: object
          description: Message included in the transaction
          example:
            typeUrl: /cosmos.staking.v1beta1.MsgDelegate
            value:
              delegatorAddress: cro1egww25see7x6pg2lp2mhmnd5s6smzlfmdlwm0h
              validatorAddress: crocncl10skwvezaqkngyw9uyskzsqe2cu8jc2ysrrndry
              amount:
                denom: basecro
                amount: '1000000'
        fee:
          type: object
          description: Fee included in the transaction. Object shape can be found [here](https://github.com/cosmos/cosmjs/blob/72da7971ee4fd77fec1bfef2ec1ba4f14f8c319d/packages/amino/src/signdoc.ts#L12)
          example:
            amount:
              - denom: basecro
                amount: '5000'
            gas: '200000'
        chain_id:
          type: string
          description: Chain ID
          example: cosmoshub-4
        account_number:
          type: number
          description: Account number
          example: 1234
    CROSignedTx:
      type: object
      required:
        - signed_tx_serialized
      properties:
        signed_tx_serialized:
          type: string
          description: Serialized signed transaction in hex
          example: 0aa1010a9e010a232f636f736d6f732e7374616b696e672e763162657461312e4d736744656c656761746512770a2d636f736d6f733139633966646834383876716a636c6c74777036386a6d3530796477796833366a7165617465761234636f736d6f7376616c6f706572313679733065673933356d6b71706b79646b6766636a39616765326175386c39366e61657265391a100a057561746f6d12073130303030303012670a500a460a1f2f636f736d6f732e63727970746f2e736563703235366b312e5075624b657912230a21039ce47b2a813d13876131a9c3be77e8c4afa49e948744abbee11f939e2a420f4612040a020801182012130a0d0a057561746f6d12043530303010e0a7121a40191f87a54dceafb6ab9a5f112a13444ca37e49a029e531bb21301fd72e9d390304c763cca5a9760a631dc85705dd6b08b50f5fff7d5de8d73b2cebd1f4c3b6a0
    CROTxHash:
      type: object
      required:
        - tx_hash
      properties:
        tx_hash:
          type: string
          description: Hash of the transaction
          example: 2B4F732E12D5D5AF1F907AD03B199167A718EDC6201DE5713143AB80990420CB
    CROPrepareTxPayload:
      type: object
      required:
        - pubkey
        - tx_body
        - tx_auth_info
        - signature
      properties:
        pubkey:
          type: string
          description: Wallet public key (compressed or uncompressed), this is different than the wallet address
          example: 039ce47b2a813d13876131a9c3be77e8c4afa49e948744abbee11f939e2a420f46
        tx_body:
          type: string
          description: Transaction body serialized in hex
          example: 0a9e010a232f636f736d6f732e7374616b696e672e763162657461312e4d736744656c656761746512770a2d636f736d6f733139633966646834383876716a636c6c74777036386a6d3530796477796833366a7165617465761234636f736d6f7376616c6f706572313679733065673933356d6b71706b79646b6766636a39616765326175386c39366e61657265391a100a057561746f6d120731303030303030
        tx_auth_info:
          type: string
          description: Transaction auth info serialized in hex
          example: 0a2c0a2a0a28636f736d6f733139633966646834383876716a636c6c74777036386a6d3530796477796833366a716561746576120a2d636f736d6f733139633966646834383876716a636c6c74777036386a6d3530796477796833366a7165617465761234636f736d6f7376616c6f706572313679733065673933356d6b71706b79646b6766636a39616765326175386c39366e6165726539
        signature:
          type: string
          description: Transaction signature serialized in hex
          example: 191f87a54dceafb6ab9a5f112a13444ca37e49a029e531bb21301fd72e9d390304c763cca5a9760a631dc85705dd6b08b50f5fff7d5de8d73b2cebd1f4c3b6a0
    CROBroadcastTxPayload:
      type: object
      required:
        - tx_serialized
      properties:
        tx_serialized:
          type: string
          description: Signed transaction serialized in hex
          example: 0aa1010a9e010a232f636f736d6f732e7374616b696e672e763162657461312e4d736744656c656761746512770a2d636f736d6f733139633966646834383876716a636c6c74777036386a6d3530796477796833366a7165617465761234636f736d6f7376616c6f706572313679733065673933356d6b71706b79646b6766636a39616765326175386c39366e61657265391a100a057561746f6d12073130303030303012670a500a460a1f2f636f736d6f732e63727970746f2e736563703235366b312e5075624b657912230a21039ce47b2a813d13876131a9c3be77e8c4afa49e948744abbee11f939e2a420f4612040a020801182012130a0d0a057561746f6d12043530303010e0a7121a40191f87a54dceafb6ab9a5f112a13444ca37e49a029e531bb21301fd72e9d390304c763cca5a9760a631dc85705dd6b08b50f5fff7d5de8d73b2cebd1f4c3b6a0
    CROTxStatus:
      type: object
      properties:
        status:
          type: string
          enum:
            - success
            - error
          description: Transaction status
          example: success
        receipt:
          type: object
          description: Transaction receipt. Only present if status is success. Object shape can be found [here](https://github.com/cosmos/cosmjs/blob/e8e65aa0c145616ccb58625c32bffe08b46ff574/packages/stargate/src/stargateclient.ts#L67)
          example:
            height: 16007296
            txIndex: 0
            hash: 2B4F732E12D5D5AF1F907AD03B199167A718EDC6201DE5713143AB80990420CB
            code: 0
            events:
              - type: coin_spent
                attributes:
                  - key: spender
                    value: cro19c9fdh488vqjclltwp68jm50ydwyh36jqeatev
                  - key: amount
                    value: 5000basecro
              - type: coin_received
                attributes:
                  - key: receiver
                    value: cro17xpfvakm2amg962yls6f84z3kell8c5lserqta
                  - key: amount
                    value: 5000basecro
              - type: transfer
                attributes:
                  - key: recipient
                    value: cro17xpfvakm2amg962yls6f84z3kell8c5lserqta
                  - key: sender
                    value: cro19c9fdh488vqjclltwp68jm50ydwyh36jqeatev
                  - key: amount
                    value: 5000basecro
              - type: message
                attributes:
                  - key: sender
                    value: cro19c9fdh488vqjclltwp68jm50ydwyh36jqeatev
              - type: tx
                attributes:
                  - key: fee
                    value: 5000basecro
                  - key: fee_payer
                    value: cro19c9fdh488vqjclltwp68jm50ydwyh36jqeatev
              - type: tx
                attributes:
                  - key: acc_seq
                    value: cro19c9fdh488vqjclltwp68jm50ydwyh36jqeatev/33
              - type: tx
                attributes:
                  - key: signature
                    value: GR+HpU3Or7arml8RKhNETKN+SaAp5TG7ITAf1y6dOQMEx2PMpal2CmMdyFcF3WsItQ9f/31d6Nc7LOvR9MO2oA==
              - type: message
                attributes:
                  - key: action
                    value: /cosmos.staking.v1beta1.MsgDelegate
              - type: coin_spent
                attributes:
                  - key: spender
                    value: cro1jv65s3grqf6v6jl3dp4t6c9t9rk99cd88lyufl
                  - key: amount
                    value: 5basecro
              - type: coin_received
                attributes:
                  - key: receiver
                    value: cro19c9fdh488vqjclltwp68jm50ydwyh36jqeatev
                  - key: amount
                    value: 5basecro
              - type: transfer
                attributes:
                  - key: recipient
                    value: cro19c9fdh488vqjclltwp68jm50ydwyh36jqeatev
                  - key: sender
                    value: cro1jv65s3grqf6v6jl3dp4t6c9t9rk99cd88lyufl
                  - key: amount
                    value: 5basecro
              - type: message
                attributes:
                  - key: sender
                    value: cro1jv65s3grqf6v6jl3dp4t6c9t9rk99cd88lyufl
              - type: withdraw_rewards
                attributes:
                  - key: amount
                    value: 5basecro
                  - key: validator
                    value: crocncl10skwvezaqkngyw9uyskzsqe2cu8jc2ysrrndry
              - type: coin_spent
                attributes:
                  - key: spender
                    value: cro19c9fdh488vqjclltwp68jm50ydwyh36jqeatev
                  - key: amount
                    value: 100000basecro
              - type: coin_received
                attributes:
                  - key: receiver
                    value: cro1fl48vsnmsdzcv85q5d2q4z5ajdha8yu34mf0eh
                  - key: amount
                    value: 100000basecro
              - type: delegate
                attributes:
                  - key: validator
                    value: crocncl10skwvezaqkngyw9uyskzsqe2cu8jc2ysrrndry
                  - key: amount
                    value: 100000basecro
                  - key: new_shares
                    value: '100000.000000000000000000'
              - type: message
                attributes:
                  - key: module
                    value: staking
                  - key: sender
                    value: cro19c9fdh488vqjclltwp68jm50ydwyh36jqeatev
            rawLog: '[{"events":[{"type":"coin_received","attributes":[{"key":"receiver","value":"cro19c9fdh488vqjclltwp68jm50ydwyh36jqeatev"},{"key":"amount","value":"5basecro"},{"key":"receiver","value":"cro1fl48vsnmsdzcv85q5d2q4z5ajdha8yu34mf0eh"},{"key":"amount","value":"100000basecro"}]},{"type":"coin_spent","attributes":[{"key":"spender","value":"cro1jv65s3grqf6v6jl3dp4t6c9t9rk99cd88lyufl"},{"key":"amount","value":"5basecro"},{"key":"spender","value":"cro19c9fdh488vqjclltwp68jm50ydwyh36jqeatev"},{"key":"amount","value":"100000basecro"}]},{"type":"delegate","attributes":[{"key":"validator","value":"crocncl10skwvezaqkngyw9uyskzsqe2cu8jc2ysrrndry"},{"key":"amount","value":"100000basecro"},{"key":"new_shares","value":"100000.000000000000000000"}]},{"type":"message","attributes":[{"key":"action","value":"/cosmos.staking.v1beta1.MsgDelegate"},{"key":"sender","value":"cro1jv65s3grqf6v6jl3dp4t6c9t9rk99cd88lyufl"},{"key":"module","value":"staking"},{"key":"sender","value":"cro19c9fdh488vqjclltwp68jm50ydwyh36jqeatev"}]},{"type":"transfer","attributes":[{"key":"recipient","value":"cro19c9fdh488vqjclltwp68jm50ydwyh36jqeatev"},{"key":"sender","value":"cro1jv65s3grqf6v6jl3dp4t6c9t9rk99cd88lyufl"},{"key":"amount","value":"5basecro"}]},{"type":"withdraw_rewards","attributes":[{"key":"amount","value":"5basecro"},{"key":"validator","value":"crocncl10skwvezaqkngyw9uyskzsqe2cu8jc2ysrrndry"}]}]}]'
            tx:
              '0': 10
              '1': 160
              '2': 1
              '3': 10
              '4': 157
              '5': 1
              '6': 10
              '7': 35
              '8': 47
              '9': 99
              '10': 111
              '11': 115
              '12': 109
              '13': 111
              '14': 115
              '15': 46
              '16': 115
              '17': 116
              '18': 97
              '19': 107
              '20': 105
              '21': 110
              '22': 103
              '23': 46
              '24': 118
              '25': 49
              '26': 98
              '27': 101
              '28': 116
              '29': 97
              '30': 49
              '31': 46
              '32': 77
              '33': 115
              '34': 103
              '35': 68
              '36': 101
              '37': 108
              '38': 101
              '39': 103
              '40': 97
              '41': 116
              '42': 101
              '43': 18
              '44': 118
              '45': 10
              '46': 45
              '47': 99
              '48': 111
              '49': 115
              '50': 109
              '51': 111
              '52': 115
              '53': 49
              '54': 57
              '55': 99
              '56': 57
              '57': 102
              '58': 100
              '59': 104
              '60': 52
              '61': 56
              '62': 56
              '63': 118
              '64': 113
              '65': 106
              '66': 99
              '67': 108
              '68': 108
              '69': 116
              '70': 119
              '71': 112
              '72': 54
              '73': 56
              '74': 106
              '75': 109
              '76': 53
              '77': 48
              '78': 121
              '79': 100
              '80': 119
              '81': 121
              '82': 104
              '83': 51
              '84': 54
              '85': 106
              '86': 113
              '87': 101
              '88': 97
              '89': 116
              '90': 101
              '91': 118
              '92': 18
              '93': 52
              '94': 99
              '95': 111
              '96': 115
              '97': 109
              '98': 111
              '99': 115
              '100': 118
              '101': 97
              '102': 108
              '103': 111
              '104': 112
              '105': 101
              '106': 114
              '107': 49
              '108': 54
              '109': 121
              '110': 115
              '111': 48
              '112': 101
              '113': 103
              '114': 57
              '115': 51
              '116': 53
              '117': 109
              '118': 107
              '119': 113
              '120': 112
              '121': 107
              '122': 121
              '123': 100
              '124': 107
              '125': 103
              '126': 102
              '127': 99
              '128': 106
              '129': 57
              '130': 97
              '131': 103
              '132': 101
              '133': 50
              '134': 97
              '135': 117
              '136': 56
              '137': 108
              '138': 57
              '139': 54
              '140': 110
              '141': 97
              '142': 101
              '143': 114
              '144': 101
              '145': 57
              '146': 26
              '147': 15
              '148': 10
              '149': 5
              '150': 117
              '151': 97
              '152': 116
              '153': 111
              '154': 109
              '155': 18
              '156': 6
              '157': 49
              '158': 48
              '159': 48
              '160': 48
              '161': 48
              '162': 48
              '163': 18
              '164': 103
              '165': 10
              '166': 80
              '167': 10
              '168': 70
              '169': 10
              '170': 31
              '171': 47
              '172': 99
              '173': 111
              '174': 115
              '175': 109
              '176': 111
              '177': 115
              '178': 46
              '179': 99
              '180': 114
              '181': 121
              '182': 112
              '183': 116
              '184': 111
              '185': 46
              '186': 115
              '187': 101
              '188': 99
              '189': 112
              '190': 50
              '191': 53
              '192': 54
              '193': 107
              '194': 49
              '195': 46
              '196': 80
              '197': 117
              '198': 98
              '199': 75
              '200': 101
              '201': 121
              '202': 18
              '203': 35
              '204': 10
              '205': 33
              '206': 3
              '207': 156
              '208': 228
              '209': 123
              '210': 42
              '211': 129
              '212': 61
              '213': 19
              '214': 135
              '215': 97
              '216': 49
              '217': 169
              '218': 195
              '219': 190
              '220': 119
              '221': 232
              '222': 196
              '223': 175
              '224': 164
              '225': 158
              '226': 148
              '227': 135
              '228': 68
              '229': 171
              '230': 190
              '231': 225
              '232': 31
              '233': 147
              '234': 158
              '235': 42
              '236': 66
              '237': 15
              '238': 70
              '239': 18
              '240': 4
              '241': 10
              '242': 2
              '243': 8
              '244': 1
              '245': 24
              '246': 33
              '247': 18
              '248': 19
              '249': 10
              '250': 13
              '251': 10
              '252': 5
              '253': 117
              '254': 97
              '255': 116
              '256': 111
              '257': 109
              '258': 18
              '259': 4
              '260': 53
              '261': 48
              '262': 48
              '263': 48
              '264': 16
              '265': 224
              '266': 167
              '267': 18
              '268': 26
              '269': 64
              '270': 25
              '271': 31
              '272': 135
              '273': 165
              '274': 77
              '275': 206
              '276': 175
              '277': 182
              '278': 171
              '279': 154
              '280': 95
              '281': 17
              '282': 42
              '283': 19
              '284': 68
              '285': 76
              '286': 163
              '287': 126
              '288': 73
              '289': 160
              '290': 41
              '291': 229
              '292': 49
              '293': 187
              '294': 33
              '295': 48
              '296': 31
              '297': 215
              '298': 46
              '299': 157
              '300': 57
              '301': 3
              '302': 4
              '303': 199
              '304': 99
              '305': 204
              '306': 165
              '307': 169
              '308': 118
              '309': 10
              '310': 99
              '311': 29
              '312': 200
              '313': 87
              '314': 5
              '315': 221
              '316': 107
              '317': 8
              '318': 181
              '319': 15
              '320': 95
              '321': 255
              '322': 125
              '323': 93
              '324': 232
              '325': 215
              '326': 59
              '327': 44
              '328': 235
              '329': 209
              '330': 244
              '331': 195
              '332': 182
              '333': 160
            gasUsed: 167798
            gasWanted: 300000
    CROCraftUnstakeTxPayload:
      type: object
      required:
        - pubkey
        - validator
      properties:
        pubkey:
          type: string
          example: 039ce47b2a813d13876131a9c3be77e8c4afa49e948744abbee11f939e2a420f46
          description: Wallet public key (compressed or uncompressed), this is different than the wallet address
        validator:
          type: string
          example: crocncl10skwvezaqkngyw9uyskzsqe2cu8jc2ysrrndry
          description: Validator address
        amount_basecro:
          type: string
          example: '1000000000000000000000000'
          description: Amount to unstake in basecro. Omit to unstake all the delegated amount
    CROCraftRedelegateTxPayload:
      type: object
      required:
        - account_id
        - pubkey
        - validator_source
        - validator_destination
      properties:
        account_id:
          type: string
          example: b7177fd2-fbb3-479f-aa92-db9fb16e229f
          format: uuid
          description: Kiln Account ID to which the new stake will be linked
        pubkey:
          type: string
          example: 039ce47b2a813d13876131a9c3be77e8c4afa49e948744abbee11f939e2a420f46
          description: Wallet public key (compressed or uncompressed), this is different than the wallet address
        validator_source:
          type: string
          example: crocncl10skwvezaqkngyw9uyskzsqe2cu8jc2ysrrndry
          description: Validator source address of current stake
        validator_destination:
          type: string
          example: crocncl10skwvezaqkngyw9uyskzsqe2cu8jc2ysrrndry
          description: Validator destination address to which redelegate the stake
        amount_basecro:
          type: string
          example: '1000000000000000000000000'
          description: Amount to redelegate in basecro
    CROCraftStakeTxPayload:
      type: object
      required:
        - account_id
        - pubkey
        - validator
        - amount_basecro
      properties:
        account_id:
          type: string
          example: b7177fd2-fbb3-479f-aa92-db9fb16e229f
          format: uuid
          description: Kiln Account ID to stake into
        pubkey:
          type: string
          example: 039ce47b2a813d13876131a9c3be77e8c4afa49e948744abbee11f939e2a420f46
          description: Wallet public key (compressed or uncompressed), this is different than the wallet address
        validator:
          type: string
          example: crocncl10skwvezaqkngyw9uyskzsqe2cu8jc2ysrrndry
          description: Validator address
        amount_basecro:
          type: string
          example: '1000000000000000000000000'
          description: Amount to stake in basecro
        restake_rewards:
          type: boolean
          default: false
          description: If enabled, the rewards will be automatically restaked
        grantee_address:
          type: string
          example: cosmos1u4whe0pwlgt7q7ph37qxalq2wfq4pkcdze5fmd
          description: 'Grantee address, this address is specific to each validator. Kiln grantee addresses are found here: https://github.com/eco-stake/validator-registry/blob/master/Kiln/chains.json https://github.com/eco-stake/validator-registry/blob/master/interop/chains.json'
    CROCraftRestakeRewardsTxPayload:
      type: object
      required:
        - pubkey
        - validator_address
        - grantee_address
      properties:
        pubkey:
          type: string
          example: 039ce47b2a813d13876131a9c3be77e8c4afa49e948744abbee11f939e2a420f46
          description: Wallet public key (compressed or uncompressed), this is different than the wallet address
        validator_address:
          type: string
          example: crocncl10skwvezaqkngyw9uyskzsqe2cu8jc2ysrrndry
          description: Validator address
        grantee_address:
          type: string
          example: cosmos1u4whe0pwlgt7q7ph37qxalq2wfq4pkcdze5fmd
          description: 'Grantee address, this address is specific to each validator. Kiln grantee addresses are found here: https://github.com/eco-stake/validator-registry/blob/master/Kiln/chains.json https://github.com/eco-stake/validator-registry/blob/master/interop/chains.json'
    CROCraftWithdrawRewardsTxPayload:
      type: object
      required:
        - pubkey
        - validator
      properties:
        pubkey:
          type: string
          example: 039ce47b2a813d13876131a9c3be77e8c4afa49e948744abbee11f939e2a420f46
          description: Wallet public key (compressed or uncompressed), this is different than the wallet address
        validator:
          type: string
          example: crocncl10skwvezaqkngyw9uyskzsqe2cu8jc2ysrrndry
          description: Validator address
    CROReward:
      type: object
      required:
        - date
        - rewards
        - balance
        - net_apy
      properties:
        date:
          type: string
          description: Day for this reward entry
          format: date
          example: '2023-01-15'
        rewards:
          type: string
          description: Accumulated rewards in basecro during the day
          example: '3575891083876864200000'
        balance:
          type: string
          description: Staked balance in basecro at the end of the day
          example: '6300000000000000000000000'
        net_apy:
          type: number
          description: Net annual percentage yield
          example: 20.76
        rewards_usd:
          type: number
          description: Estimated value of rewards generated for that day in USD. The exchange rate is the rate at the end of the day provided by CoinGeckko.
        balance_usd:
          type: number
          description: Estimated value of the staked balance at the beginning of the day in USD. The exchange rate is the rate at the end of the day provided by CoinGeckko.
    CROOperationDelegate:
      type: object
      properties:
        type:
          type: string
          description: Operation type
          example: staking.MsgDelegate
        time:
          type: string
          description: Date of the operation
          format: date-time
          example: '2023-06-22T15:35:01.892644Z'
        block:
          type: number
          description: Transaction block
          example: 15828207
        tx_hash:
          type: string
          description: Transaction hash
          example: 7DBC7C481A9A28961BDDF5BCDD47217A126EC0497017908453D71FACA9FA3506
        tx_gas_used:
          type: string
          description: Gas used for the whole transaction in basecro
          example: '186733'
        message_index:
          type: number
          description: Index of the message in the transaction
          example: 0
        validator_address:
          type: string
          description: Validator address
          example: crocncl10skwvezaqkngyw9uyskzsqe2cu8jc2ysrrndry
        delegator_address:
          type: string
          description: Delegator address
          example: cro1egww25see7x6pg2lp2mhmnd5s6smzlfmdlwm0h
        amount:
          type: string
          description: Amount added to the staked balance in basecro
          example: '3000000'
        withdraw_rewards:
          type: string
          description: Rewards auto-claimed alongside the operation in basecro
          example: '10841'
    CROOperationUndelegate:
      type: object
      properties:
        type:
          type: string
          description: Operation type
          example: staking.MsgUndelegate
        time:
          type: string
          description: Date of the operation
          format: date-time
          example: '2023-06-22T15:35:01.892644Z'
        block:
          type: number
          description: Transaction block
          example: 15828207
        tx_hash:
          type: string
          description: Transaction hash
          example: 7DBC7C481A9A28961BDDF5BCDD47217A126EC0497017908453D71FACA9FA3506
        tx_gas_used:
          type: string
          description: Gas used for the whole transaction in basecro
          example: '186733'
        message_index:
          type: number
          description: Index of the message in the transaction
          example: 0
        validator_address:
          type: string
          description: Validator address
          example: crocncl10skwvezaqkngyw9uyskzsqe2cu8jc2ysrrndry
        delegator_address:
          type: string
          description: Delegator address
          example: cro1egww25see7x6pg2lp2mhmnd5s6smzlfmdlwm0h
        amount:
          type: string
          description: Amount removed from the staked balance in basecro
          example: '3000000'
        withdraw_rewards:
          type: string
          description: Rewards auto-claimed alongside the operation in basecro
          example: '10841'
    CROOperationRedelegate:
      type: object
      properties:
        type:
          type: string
          description: Operation type
          example: staking.MsgBeginRedelegate
        time:
          type: string
          description: Date of the operation
          format: date-time
          example: '2023-06-22T15:35:01.892644Z'
        block:
          type: number
          description: Transaction block
          example: 15828207
        tx_hash:
          type: string
          description: Transaction hash
          example: 7DBC7C481A9A28961BDDF5BCDD47217A126EC0497017908453D71FACA9FA3506
        tx_gas_used:
          type: string
          description: Gas used for the whole transaction in basecro
          example: '186733'
        message_index:
          type: number
          description: Index of the message in the transaction
          example: 0
        validator_address:
          type: string
          description: Destination validator address
          example: crocncl10skwvezaqkngyw9uyskzsqe2cu8jc2ysrrndry
        validator_address_source:
          type: string
          description: Source validator address
          example: crocncl10skwvezaqkngyw9uyskzsqe2cu8jc2ysrrndry
        delegator_address:
          type: string
          description: Delegator address
          example: cro1egww25see7x6pg2lp2mhmnd5s6smzlfmdlwm0h
        amount:
          type: string
          description: Amount moved from the source validator staked balance to the destination validator staked balance in basecro
          example: '3000000'
        withdraw_rewards:
          type: string
          description: Rewards auto-claimed from the destination validator alongside the operation in basecro
          example: '10841'
        withdraw_rewards_source:
          type: string
          description: Rewards auto-claimed from the source validator alongside the operation in basecro
          example: '10841'
    CROOperationWithdrawRewards:
      type: object
      properties:
        type:
          type: string
          description: Operation type
          example: distr.MsgWithdrawDelegatorReward
        time:
          type: string
          description: Date of the operation
          format: date-time
          example: '2023-06-22T15:35:01.892644Z'
        block:
          type: number
          description: Transaction block
          example: 15828207
        tx_hash:
          type: string
          description: Transaction hash
          example: 7DBC7C481A9A28961BDDF5BCDD47217A126EC0497017908453D71FACA9FA3506
        tx_gas_used:
          type: string
          description: Gas used for the whole transaction in basecro
          example: '186733'
        message_index:
          type: number
          description: Index of the message in the transaction
          example: 0
        validator_address:
          type: string
          description: Validator address
          example: crocncl10skwvezaqkngyw9uyskzsqe2cu8jc2ysrrndry
        delegator_address:
          type: string
          description: Delegator address
          example: cro1egww25see7x6pg2lp2mhmnd5s6smzlfmdlwm0h
        withdraw_rewards:
          type: string
          description: Rewards claimed alongside the operation in basecro
          example: '10841'
    CROOperationGrant:
      type: object
      properties:
        type:
          type: string
          description: Operation type
          example: Authz.Grant
        time:
          type: string
          description: Date of the operation
          format: date-time
          example: '2023-06-22T15:35:01.892644Z'
        block:
          type: number
          description: Transaction block
          example: 15828207
        tx_hash:
          type: string
          description: Transaction hash
          example: 7DBC7C481A9A28961BDDF5BCDD47217A126EC0497017908453D71FACA9FA3506
        tx_gas_used:
          type: string
          description: Gas used for the whole transaction in basecro
          example: '186733'
        message_index:
          type: number
          description: Index of the message in the transaction
          example: 0
        grantee:
          type: string
          description: Recipient of the permissions
          example: cro1egww25see7x6pg2lp2mhmnd5s6smzlfmdlwm0h
        granter:
          type: string
          description: Owner of the stake giving the permissions
          example: cro1egww25see7x6pg2lp2mhmnd5s6smzlfmdlwm0h
        permission:
          type: string
          description: 'Kind of permission been grantee, can be: "Staking.MsgDelegate", "Staking.MsgUndelegate", "Staking.MsgRedelegate" or "Distribution.MsgWithdrawDelegatorReward"'
          example: Staking.MsgDelegate
        allow_list:
          type: array
          items:
            type: string
          nullable: true
          description: List of address on which the granted permission can be applied (ie validator on which delegation is allowed)
          example:
            - cro1egww25see7x6pg2lp2mhmnd5s6smzlfmdlwm0h
            - cro1egww25see7x6pg2lp2mhmnd5s6smzlfmdlwm0h
        deny_list:
          type: array
          items:
            type: string
          nullable: true
          description: List of address on which the granted permission cannot be applied (ie validator on which delegation is allowed)
          example:
            - cro1egww25see7x6pg2lp2mhmnd5s6smzlfmdlwm0h
            - cro1egww25see7x6pg2lp2mhmnd5s6smzlfmdlwm0h
    CROOperationExec:
      type: object
      properties:
        type:
          type: string
          description: Operation type
          example: Authz.Exec
        time:
          type: string
          description: Date of the operation
          format: date-time
          example: '2023-06-22T15:35:01.892644Z'
        block:
          type: number
          description: Transaction block
          example: 15828207
        tx_hash:
          type: string
          description: Transaction hash
          example: 7DBC7C481A9A28961BDDF5BCDD47217A126EC0497017908453D71FACA9FA3506
        tx_gas_used:
          type: string
          description: Gas used for the whole transaction in basecro
          example: '186733'
        message_index:
          type: number
          description: Index of the message in the transaction
          example: 0
        executed_operations:
          type: array
          nullable: true
          items:
            type: object
            properties:
              type:
                type: string
                description: Operation type
                example: staking.Delegate
              validator_address:
                type: string
                description: Destination validator address
                example: crocncl10skwvezaqkngyw9uyskzsqe2cu8jc2ysrrndry
              validator_address_source:
                type: string
                description: Source validator address
                example: crocncl10skwvezaqkngyw9uyskzsqe2cu8jc2ysrrndry
              delegator_address:
                type: string
                description: Delegator address
                example: cro1egww25see7x6pg2lp2mhmnd5s6smzlfmdlwm0h
              amount:
                type: string
                description: Amount moved from the source validator staked balance to the destination validator staked balance in basecro
                example: '3000000'
              withdraw_rewards:
                type: string
                description: Rewards auto-claimed from the destination validator alongside the operation in basecro
                example: '10841'
              withdraw_rewards_source:
                type: string
                description: Rewards auto-claimed from the source validator alongside the operation in basecro
                example: '10841'
    CRONetworkStats:
      type: object
      required:
        - cro_price_usd
        - nb_validators
        - network_gross_apy
        - supply_staked_percent
        - inflation_rate
        - updated_at
      properties:
        cro_price_usd:
          type: number
          description: Price of Cronos in USD
          example: 10.53
        nb_validators:
          type: number
          description: Number of validators in the network
          example: 100
        network_gross_apy:
          type: number
          description: Gross annual percentage yield
          example: 4.5
        supply_staked_percent:
          type: number
          description: Supply of Cronos currently staked
          example: 12.4
        inflation_rate:
          type: number
          description: Cronos inflation rate
          example: 3.5
        updated_at:
          type: string
          description: Last date this data was updated
          format: date-time
          example: '2023-01-14T01:13:59Z'
    CROTxDecoding:
      type: object
      description: Decoded transaction
      example:
        authInfo:
          signerInfos:
            - publicKey:
                typeUrl: /cosmos.crypto.secp256k1.PubKey
                value:
                  '0': 10
                  '1': 33
                  '2': 3
                  '3': 156
                  '4': 228
                  '5': 123
                  '6': 42
                  '7': 129
                  '8': 61
                  '9': 19
                  '10': 135
                  '11': 97
                  '12': 49
                  '13': 169
                  '14': 195
                  '15': 190
                  '16': 119
                  '17': 232
                  '18': 196
                  '19': 175
                  '20': 164
                  '21': 158
                  '22': 148
                  '23': 135
                  '24': 68
                  '25': 171
                  '26': 190
                  '27': 225
                  '28': 31
                  '29': 147
                  '30': 158
                  '31': 42
                  '32': 66
                  '33': 15
                  '34': 70
              modeInfo:
                single:
                  mode: 1
              sequence:
                low: 102
                high: 0
                unsigned: true
          fee:
            amount:
              - denom: basecro
                amount: '5000'
            gasLimit:
              low: 2000000
              high: 0
              unsigned: true
            payer: ''
            granter: ''
        body:
          messages:
            - typeUrl: /cosmos.staking.v1beta1.MsgDelegate
              value:
                '0': 10
                '1': 45
                '2': 99
                '3': 111
                '4': 115
                '5': 109
                '6': 111
                '7': 115
                '8': 49
                '9': 57
                '10': 99
                '11': 57
                '12': 102
                '13': 100
                '14': 104
                '15': 52
                '16': 56
                '17': 56
                '18': 118
                '19': 113
                '20': 106
                '21': 99
                '22': 108
                '23': 108
                '24': 116
                '25': 119
                '26': 112
                '27': 54
                '28': 56
                '29': 106
                '30': 109
                '31': 53
                '32': 48
                '33': 121
                '34': 100
                '35': 119
                '36': 121
                '37': 104
                '38': 51
                '39': 54
                '40': 106
                '41': 113
                '42': 101
                '43': 97
                '44': 116
                '45': 101
                '46': 118
                '47': 18
                '48': 52
                '49': 99
                '50': 111
                '51': 115
                '52': 109
                '53': 111
                '54': 115
                '55': 118
                '56': 97
                '57': 108
                '58': 111
                '59': 112
                '60': 101
                '61': 114
                '62': 49
                '63': 54
                '64': 121
                '65': 115
                '66': 48
                '67': 101
                '68': 103
                '69': 57
                '70': 51
                '71': 53
                '72': 109
                '73': 107
                '74': 113
                '75': 112
                '76': 107
                '77': 121
                '78': 100
                '79': 107
                '80': 103
                '81': 102
                '82': 99
                '83': 106
                '84': 57
                '85': 97
                '86': 103
                '87': 101
                '88': 50
                '89': 97
                '90': 117
                '91': 56
                '92': 108
                '93': 57
                '94': 54
                '95': 110
                '96': 97
                '97': 101
                '98': 114
                '99': 101
                '100': 57
                '101': 26
                '102': 16
                '103': 10
                '104': 5
                '105': 117
                '106': 97
                '107': 116
                '108': 111
                '109': 109
                '110': 18
                '111': 7
                '112': 49
                '113': 48
                '114': 48
                '115': 48
                '116': 48
                '117': 48
                '118': 48
          memo: ''
          timeoutHeight:
            low: 0
            high: 0
            unsigned: true
          extensionOptions: []
          nonCriticalExtensionOptions: []
        signatures:
          - '0': 116
            '1': 104
            '2': 101
            '3': 116
            '4': 97
            '5': 45
            '6': 116
            '7': 101
            '8': 115
            '9': 116
            '10': 110
            '11': 101
            '12': 116
            '13': 45
            '14': 48
            '15': 48
            '16': 49
    CROCraftSendTxPayload:
      type: object
      required:
        - pubkey
        - to
        - amount_basecro
      properties:
        pubkey:
          type: string
          description: Wallet public key (compressed or uncompressed), this is different than the wallet address
          example: 039ce47b2a813d13876131a9c3be77e8c4afa49e948744abbee11f939e2a420f46
        to:
          type: string
          description: Recipient address
          example: cro1mfdn23y2ydnp6j3l3f8rw6r2gzazrmprgxn5xl
        amount_basecro:
          type: string
          description: Amount to send in basecro
          example: '1000000000000000000000000'
    CROGetBalancePayload:
      type: object
      required:
        - address
        - denom
      properties:
        address:
          type: string
          description: Wallet address
          example: cro1djqecw6nn5tydxq0shan7srv8j65clsf7vypl6
        denom:
          type: string
          description: The denomination of the balance to query
          example: basecro
    OMStake:
      type: object
      required:
        - validator_address
        - delegator_address
        - rewards
        - available_rewards
        - balance
        - state
        - net_apy
        - unbondings
        - permissions
      properties:
        validator_address:
          type: string
          description: Public key of the validator
          example: mantravaloper1qum83utf8833n4f857w98dxc5w8qlnq9eeew4g
        delegator_address:
          type: string
          description: Public key of the delegator
          example: mantra1mfdn23y2ydnp6j3l3f8rw6r2gzazrmprgxn5xl
        delegated_at:
          type: string
          description: Date of first delegation ever for the stake. Unavailable for stakes older than [Theta v7 (12/04/2022)](https://github.com/cosmos/gaia/tree/main/docs/roadmap#cosmos-hub-summary).
          format: date-time
          example: '2023-06-16T03:13:23.058547Z'
        delegated_block:
          type: number
          description: Block of first delegation ever for the stake. Unavailable for stakes older than [Theta v7 (12/04/2022)](https://github.com/cosmos/gaia/tree/main/docs/roadmap#cosmos-hub-summary).
          example: 15739267
        undelegated_at:
          type: string
          description: Date of undelegation for the stake
          format: date-time
          example: '2023-07-14T03:56:13.561156Z'
        undelegated_block:
          type: number
          description: Block of undelegation for the stake
          example: 16126416
        rewards:
          type: string
          description: Total rewards accumulated by this stake since its first ever delegation in uOM. Includes currently available rewards not yet withdrawn.
          example: '735573808534727891000000'
        available_rewards:
          type: string
          description: Available rewards in uOM that can be withdrawn from this stake
          example: '36748808534727891000000'
        balance:
          type: string
          description: Staked balance on this stake in uOM
          example: '6300000000000000000000000'
        net_apy:
          type: number
          description: Net annual percentage yield. Unavailable for stakes older than [Theta v7 (12/04/2022)](https://github.com/cosmos/gaia/tree/main/docs/roadmap#cosmos-hub-summary).
          example: 5.76
        state:
          type: string
          description: State of the Mantra stake
          example: active
          enum:
            - active
            - deactivating
            - inactive
        updated_at:
          type: string
          description: Last date this data was updated
          format: date-time
          example: '2023-01-14T01:13:59Z'
        permissions:
          description: permissions related to the stake currently active, ignored if there is no ongoing grants
          type: array
          items:
            type: object
            properties:
              source:
                type: string
                description: whether the stake is recipient (grantee) or the giver (granter) of the permissions
                example: granter
              creation_height:
                type: number
                description: Block at which the unbonding was created
                example: 15000000
              permission:
                type: string
                description: 'Kind of permission been grantee, can be: "Staking.MsgDelegate", "Staking.MsgUndelegate", "Staking.MsgRedelegate" or "Distribution.MsgWithdrawDelegatorReward"'
                example: Staking.MsgDelegate
              expires_at:
                type: string
                description: Exact time at which the permissions will be revoked
                format: date-time
                example: '2023-01-10T01:12:34Z'
                nullable: true
              allow_list:
                type: array
                items:
                  type: string
                nullable: true
                description: List of address on which the granted permission can be applied (ie validator on which delegation is allowed)
                example:
                  - mantravaloper1xyz
                  - mantravaloper1abc
              deny_list:
                type: array
                items:
                  type: string
                nullable: true
                description: List of address on which the granted permission cannot be applied (ie validator on which delegation is allowed)
                example:
                  - mantravaloper1xyz
                  - mantravaloper1abc
        unbondings:
          description: unbondings currently active on the stakes. ignored if no unbondings are returned
          type: array
          items:
            type: object
            required:
              - creation_height
              - completion_time
              - balance
              - initial_balance
            properties:
              creation_height:
                type: number
                description: Block at which the unbonding was created
                example: 15000000
              completion_time:
                type: string
                description: Exact time at which the unbonding will take effect
                format: date-time
                example: '2023-01-10T01:12:34Z'
              balance:
                type: string
                description: Amount currently associated with the unbonding (slashes included)
                example: '129300'
              initial_balance:
                type: string
                description: Amount expected at creation (slashes non-included)
                example: '150300'
    PostOMStakesPayload:
      type: object
      required:
        - stakes
        - account_id
      properties:
        stakes:
          type: array
          items:
            type: object
            properties:
              stakeId:
                type: string
                description: Stake id {validator_address}_{delegator_address}
                example: mantravaloper1qum83utf8833n4f857w98dxc5w8qlnq9eeew4g_mantra156h4wqz5p0xuj48cn0cv2sg8q9p2y3nycg3h3a}
        account_id:
          type: string
          description: Kiln Account ID
          example: 92f5bfd4-ea38-4824-84f7-686eddff5539
    OMStakeMessage:
      type: object
      properties:
        typeUrl:
          type: string
          description: Type URL of the message
          example: /cosmos.staking.v1beta1.MsgDelegate
        value:
          type: object
          description: Message value
          example:
            delegatorAddress: mantra156h4wqz5p0xuj48cn0cv2sg8q9p2y3nycg3h3a
            validatorAddress: mantravaloper1qum83utf8833n4f857w98dxc5w8qlnq9eeew4g
            amount:
              denom: uom
              amount: '1000000'
    OMStakeMessageRestake:
      type: object
      properties:
        typeUrl:
          type: string
          description: Type URL of the message
          example: /cosmos.staking.v1beta1.StakeAuthorization
        value:
          type: object
          description: Message value
          example:
            allowList:
              address:
                - mantravaloper1qum83utf8833n4f857w98dxc5w8qlnq9eeew4g
            AuthorizationType: 1
    OMStakeUnsignedTx:
      type: object
      required:
        - unsigned_tx_serialized
        - unsigned_tx_hash
        - tx_body
        - tx_auth_info
        - pubkey
        - messages
        - fee
        - chain_id
        - account_number
      properties:
        unsigned_tx_serialized:
          type: string
          description: Unsigned serialized transaction
          example: 0adf010adc010a2a2f636f736d6f732e7374616b696e672e763162657461312e4d7367426567696e526564656c656761746512ad010a2d636f736d6f733139633966646834383876716a636c6c74777036386a6d3530796477796833366a7165617465761234636f736d6f7376616c6f70657231307636777664656e65653872396c36776c73706863677572326c746c387a746b6672766a39611a34636f736d6f7376616c6f70657231796d7a336b6a7466397a6b666d6d3273326c7279376568307a6439657a33766335797030306622100a057561746f6d12073433313030303012670a500a460a1f2f636f736d6f732e63727970746f2e736563703235366b312e5075624b657912230a21039ce47b2a813d13876131a9c3be77e8c4afa49e948744abbee11f939e2a420f4612040a020801186d12130a0d0a057561746f6d1204353030301080897a1a1174686574612d746573746e65742d30303120e0cd2a
        unsigned_tx_hash:
          type: string
          description: Hash of the unsigned transaction
          example: b6ce1c8185416ce7d42a8c39566a9a2b6b2361a55c04a1dba3dd7445a0e1e364
        tx_body:
          type: string
          description: Transaction body serialized in hex
          example: 0a9e010a232f636f736d6f732e7374616b696e672e763162657461312e4d736744656c656761746512770a2d636f736d6f733139633966646834383876716a636c6c74777036386a6d3530796477796833366a7165617465761234636f736d6f7376616c6f706572313679733065673933356d6b71706b79646b6766636a39616765326175386c39366e61657265391a100a057561746f6d120731303030303030
        tx_auth_info:
          type: string
          description: Transaction auth info serialized in hex
          example: 0a2c0a2a0a28636f736d6f733139633966646834383876716a636c6c74777036386a6d3530796477796833366a716561746576120a2d636f736d6f733139633966646834383876716a636c6c74777036386a6d3530796477796833366a7165617465761234636f736d6f7376616c6f706572313679733065673933356d6b71706b79646b6766636a39616765326175386c39366e6165726539
        pubkey:
          type: string
          description: Wallet compressed public key, this is different than the wallet address
          example: 039ce47b2a813d13876131a9c3be77e8c4afa49e948744abbee11f939e2a420f46
        fee:
          type: object
          description: Fee included in the transaction. Object shape can be found [here](https://github.com/cosmos/cosmjs/blob/72da7971ee4fd77fec1bfef2ec1ba4f14f8c319d/packages/amino/src/signdoc.ts#L12)
          example:
            amount:
              - denom: uom
                amount: '5000'
            gas: '200000'
        messages:
          type: array
          description: List of messages included in the transaction. The list contains one message for the staking delegation and one more message for rewards restaking in case specified as a parameter (`restake_rewards=true`).
          items:
            oneOf:
              - $ref: '#/components/schemas/OMStakeMessage'
              - $ref: '#/components/schemas/OMStakeMessageRestake'
          example:
            - typeUrl: /cosmos.staking.v1beta1.MsgDelegate
              value:
                delegatorAddress: mantra156h4wqz5p0xuj48cn0cv2sg8q9p2y3nycg3h3a
                validatorAddress: mantravaloper1qum83utf8833n4f857w98dxc5w8qlnq9eeew4g
                amount:
                  denom: uom
                  amount: '1000000'
            - typeUrl: /cosmos.staking.v1beta1.StakeAuthorization
              allowList:
                address:
                  - mantravaloper1qum83utf8833n4f857w98dxc5w8qlnq9eeew4g
              AuthorizationType: 1
        chain_id:
          type: string
          description: Chain ID
          example: cosmoshub-4
        account_number:
          type: number
          description: Account number
          example: 1234
    OMUnsignedTx:
      type: object
      required:
        - unsigned_tx_serialized
        - unsigned_tx_hash
        - tx_body
        - tx_auth_info
        - pubkey
        - message
        - fee
        - chain_id
        - account_number
      properties:
        unsigned_tx_serialized:
          type: string
          description: Unsigned serialized transaction
          example: 0adf010adc010a2a2f636f736d6f732e7374616b696e672e763162657461312e4d7367426567696e526564656c656761746512ad010a2d636f736d6f733139633966646834383876716a636c6c74777036386a6d3530796477796833366a7165617465761234636f736d6f7376616c6f70657231307636777664656e65653872396c36776c73706863677572326c746c387a746b6672766a39611a34636f736d6f7376616c6f70657231796d7a336b6a7466397a6b666d6d3273326c7279376568307a6439657a33766335797030306622100a057561746f6d12073433313030303012670a500a460a1f2f636f736d6f732e63727970746f2e736563703235366b312e5075624b657912230a21039ce47b2a813d13876131a9c3be77e8c4afa49e948744abbee11f939e2a420f4612040a020801186d12130a0d0a057561746f6d1204353030301080897a1a1174686574612d746573746e65742d30303120e0cd2a
        unsigned_tx_hash:
          type: string
          description: Hash of the unsigned transaction
          example: b6ce1c8185416ce7d42a8c39566a9a2b6b2361a55c04a1dba3dd7445a0e1e364
        tx_body:
          type: string
          description: Transaction body serialized in hex
          example: 0a9e010a232f636f736d6f732e7374616b696e672e763162657461312e4d736744656c656761746512770a2d636f736d6f733139633966646834383876716a636c6c74777036386a6d3530796477796833366a7165617465761234636f736d6f7376616c6f706572313679733065673933356d6b71706b79646b6766636a39616765326175386c39366e61657265391a100a057561746f6d120731303030303030
        tx_auth_info:
          type: string
          description: Transaction auth info serialized in hex
          example: 0a2c0a2a0a28636f736d6f733139633966646834383876716a636c6c74777036386a6d3530796477796833366a716561746576120a2d636f736d6f733139633966646834383876716a636c6c74777036386a6d3530796477796833366a7165617465761234636f736d6f7376616c6f706572313679733065673933356d6b71706b79646b6766636a39616765326175386c39366e6165726539
        pubkey:
          type: string
          description: Wallet compressed public key, this is different than the wallet address
          example: 039ce47b2a813d13876131a9c3be77e8c4afa49e948744abbee11f939e2a420f46
        message:
          type: object
          description: Message included in the transaction
          example:
            typeUrl: /cosmos.staking.v1beta1.MsgDelegate
            value:
              delegatorAddress: mantra156h4wqz5p0xuj48cn0cv2sg8q9p2y3nycg3h3a
              validatorAddress: mantravaloper1qum83utf8833n4f857w98dxc5w8qlnq9eeew4g
              amount:
                denom: uom
                amount: '1000000'
        fee:
          type: object
          description: Fee included in the transaction. Object shape can be found [here](https://github.com/cosmos/cosmjs/blob/72da7971ee4fd77fec1bfef2ec1ba4f14f8c319d/packages/amino/src/signdoc.ts#L12)
          example:
            amount:
              - denom: uom
                amount: '5000'
            gas: '200000'
        chain_id:
          type: string
          description: Chain ID
          example: cosmoshub-4
        account_number:
          type: number
          description: Account number
          example: 1234
    OMSignedTx:
      type: object
      required:
        - signed_tx_serialized
      properties:
        signed_tx_serialized:
          type: string
          description: Serialized signed transaction in hex
          example: 0aa1010a9e010a232f636f736d6f732e7374616b696e672e763162657461312e4d736744656c656761746512770a2d636f736d6f733139633966646834383876716a636c6c74777036386a6d3530796477796833366a7165617465761234636f736d6f7376616c6f706572313679733065673933356d6b71706b79646b6766636a39616765326175386c39366e61657265391a100a057561746f6d12073130303030303012670a500a460a1f2f636f736d6f732e63727970746f2e736563703235366b312e5075624b657912230a21039ce47b2a813d13876131a9c3be77e8c4afa49e948744abbee11f939e2a420f4612040a020801182012130a0d0a057561746f6d12043530303010e0a7121a40191f87a54dceafb6ab9a5f112a13444ca37e49a029e531bb21301fd72e9d390304c763cca5a9760a631dc85705dd6b08b50f5fff7d5de8d73b2cebd1f4c3b6a0
    OMTxHash:
      type: object
      required:
        - tx_hash
      properties:
        tx_hash:
          type: string
          description: Hash of the transaction
          example: 2B4F732E12D5D5AF1F907AD03B199167A718EDC6201DE5713143AB80990420CB
    OMPrepareTxPayload:
      type: object
      required:
        - pubkey
        - tx_body
        - tx_auth_info
        - signature
      properties:
        pubkey:
          type: string
          description: Wallet public key (compressed or uncompressed), this is different than the wallet address
          example: 039ce47b2a813d13876131a9c3be77e8c4afa49e948744abbee11f939e2a420f46
        tx_body:
          type: string
          description: Transaction body serialized in hex
          example: 0a9e010a232f636f736d6f732e7374616b696e672e763162657461312e4d736744656c656761746512770a2d636f736d6f733139633966646834383876716a636c6c74777036386a6d3530796477796833366a7165617465761234636f736d6f7376616c6f706572313679733065673933356d6b71706b79646b6766636a39616765326175386c39366e61657265391a100a057561746f6d120731303030303030
        tx_auth_info:
          type: string
          description: Transaction auth info serialized in hex
          example: 0a2c0a2a0a28636f736d6f733139633966646834383876716a636c6c74777036386a6d3530796477796833366a716561746576120a2d636f736d6f733139633966646834383876716a636c6c74777036386a6d3530796477796833366a7165617465761234636f736d6f7376616c6f706572313679733065673933356d6b71706b79646b6766636a39616765326175386c39366e6165726539
        signature:
          type: string
          description: Transaction signature serialized in hex
          example: 191f87a54dceafb6ab9a5f112a13444ca37e49a029e531bb21301fd72e9d390304c763cca5a9760a631dc85705dd6b08b50f5fff7d5de8d73b2cebd1f4c3b6a0
    OMBroadcastTxPayload:
      type: object
      required:
        - tx_serialized
      properties:
        tx_serialized:
          type: string
          description: Signed transaction serialized in hex
          example: 0aa1010a9e010a232f636f736d6f732e7374616b696e672e763162657461312e4d736744656c656761746512770a2d636f736d6f733139633966646834383876716a636c6c74777036386a6d3530796477796833366a7165617465761234636f736d6f7376616c6f706572313679733065673933356d6b71706b79646b6766636a39616765326175386c39366e61657265391a100a057561746f6d12073130303030303012670a500a460a1f2f636f736d6f732e63727970746f2e736563703235366b312e5075624b657912230a21039ce47b2a813d13876131a9c3be77e8c4afa49e948744abbee11f939e2a420f4612040a020801182012130a0d0a057561746f6d12043530303010e0a7121a40191f87a54dceafb6ab9a5f112a13444ca37e49a029e531bb21301fd72e9d390304c763cca5a9760a631dc85705dd6b08b50f5fff7d5de8d73b2cebd1f4c3b6a0
    OMTxStatus:
      type: object
      properties:
        status:
          type: string
          enum:
            - success
            - error
          description: Transaction status
          example: success
        receipt:
          type: object
          description: Transaction receipt. Only present if status is success. Object shape can be found [here](https://github.com/cosmos/cosmjs/blob/e8e65aa0c145616ccb58625c32bffe08b46ff574/packages/stargate/src/stargateclient.ts#L67)
          example:
            height: 16007296
            txIndex: 0
            hash: 2B4F732E12D5D5AF1F907AD03B199167A718EDC6201DE5713143AB80990420CB
            code: 0
            events:
              - type: coin_spent
                attributes:
                  - key: spender
                    value: mantra19c9fdh488vqjclltwp68jm50ydwyh36jqeatev
                  - key: amount
                    value: 5000uom
              - type: coin_received
                attributes:
                  - key: receiver
                    value: mantra17xpfvakm2amg962yls6f84z3kell8c5lserqta
                  - key: amount
                    value: 5000uom
              - type: transfer
                attributes:
                  - key: recipient
                    value: mantra17xpfvakm2amg962yls6f84z3kell8c5lserqta
                  - key: sender
                    value: mantra19c9fdh488vqjclltwp68jm50ydwyh36jqeatev
                  - key: amount
                    value: 5000uom
              - type: message
                attributes:
                  - key: sender
                    value: mantra19c9fdh488vqjclltwp68jm50ydwyh36jqeatev
              - type: tx
                attributes:
                  - key: fee
                    value: 5000uom
                  - key: fee_payer
                    value: mantra19c9fdh488vqjclltwp68jm50ydwyh36jqeatev
              - type: tx
                attributes:
                  - key: acc_seq
                    value: mantra19c9fdh488vqjclltwp68jm50ydwyh36jqeatev/33
              - type: tx
                attributes:
                  - key: signature
                    value: GR+HpU3Or7arml8RKhNETKN+SaAp5TG7ITAf1y6dOQMEx2PMpal2CmMdyFcF3WsItQ9f/31d6Nc7LOvR9MO2oA==
              - type: message
                attributes:
                  - key: action
                    value: /cosmos.staking.v1beta1.MsgDelegate
              - type: coin_spent
                attributes:
                  - key: spender
                    value: mantra1jv65s3grqf6v6jl3dp4t6c9t9rk99cd88lyufl
                  - key: amount
                    value: 5uom
              - type: coin_received
                attributes:
                  - key: receiver
                    value: mantra19c9fdh488vqjclltwp68jm50ydwyh36jqeatev
                  - key: amount
                    value: 5uom
              - type: transfer
                attributes:
                  - key: recipient
                    value: mantra19c9fdh488vqjclltwp68jm50ydwyh36jqeatev
                  - key: sender
                    value: mantra1jv65s3grqf6v6jl3dp4t6c9t9rk99cd88lyufl
                  - key: amount
                    value: 5uom
              - type: message
                attributes:
                  - key: sender
                    value: mantra1jv65s3grqf6v6jl3dp4t6c9t9rk99cd88lyufl
              - type: withdraw_rewards
                attributes:
                  - key: amount
                    value: 5uom
                  - key: validator
                    value: mantravaloper1qum83utf8833n4f857w98dxc5w8qlnq9eeew4g
              - type: coin_spent
                attributes:
                  - key: spender
                    value: mantra19c9fdh488vqjclltwp68jm50ydwyh36jqeatev
                  - key: amount
                    value: 100000uom
              - type: coin_received
                attributes:
                  - key: receiver
                    value: mantra1fl48vsnmsdzcv85q5d2q4z5ajdha8yu34mf0eh
                  - key: amount
                    value: 100000uom
              - type: delegate
                attributes:
                  - key: validator
                    value: mantravaloper1qum83utf8833n4f857w98dxc5w8qlnq9eeew4g
                  - key: amount
                    value: 100000uom
                  - key: new_shares
                    value: '100000.000000000000000000'
              - type: message
                attributes:
                  - key: module
                    value: staking
                  - key: sender
                    value: mantra19c9fdh488vqjclltwp68jm50ydwyh36jqeatev
            rawLog: '[{"events":[{"type":"coin_received","attributes":[{"key":"receiver","value":"mantra19c9fdh488vqjclltwp68jm50ydwyh36jqeatev"},{"key":"amount","value":"5uom"},{"key":"receiver","value":"mantra1fl48vsnmsdzcv85q5d2q4z5ajdha8yu34mf0eh"},{"key":"amount","value":"100000uom"}]},{"type":"coin_spent","attributes":[{"key":"spender","value":"mantra1jv65s3grqf6v6jl3dp4t6c9t9rk99cd88lyufl"},{"key":"amount","value":"5uom"},{"key":"spender","value":"mantra19c9fdh488vqjclltwp68jm50ydwyh36jqeatev"},{"key":"amount","value":"100000uom"}]},{"type":"delegate","attributes":[{"key":"validator","value":"mantravaloper1qum83utf8833n4f857w98dxc5w8qlnq9eeew4g"},{"key":"amount","value":"100000uom"},{"key":"new_shares","value":"100000.000000000000000000"}]},{"type":"message","attributes":[{"key":"action","value":"/cosmos.staking.v1beta1.MsgDelegate"},{"key":"sender","value":"mantra1jv65s3grqf6v6jl3dp4t6c9t9rk99cd88lyufl"},{"key":"module","value":"staking"},{"key":"sender","value":"mantra19c9fdh488vqjclltwp68jm50ydwyh36jqeatev"}]},{"type":"transfer","attributes":[{"key":"recipient","value":"mantra19c9fdh488vqjclltwp68jm50ydwyh36jqeatev"},{"key":"sender","value":"mantra1jv65s3grqf6v6jl3dp4t6c9t9rk99cd88lyufl"},{"key":"amount","value":"5uom"}]},{"type":"withdraw_rewards","attributes":[{"key":"amount","value":"5uom"},{"key":"validator","value":"mantravaloper1qum83utf8833n4f857w98dxc5w8qlnq9eeew4g"}]}]}]'
            tx:
              '0': 10
              '1': 160
              '2': 1
              '3': 10
              '4': 157
              '5': 1
              '6': 10
              '7': 35
              '8': 47
              '9': 99
              '10': 111
              '11': 115
              '12': 109
              '13': 111
              '14': 115
              '15': 46
              '16': 115
              '17': 116
              '18': 97
              '19': 107
              '20': 105
              '21': 110
              '22': 103
              '23': 46
              '24': 118
              '25': 49
              '26': 98
              '27': 101
              '28': 116
              '29': 97
              '30': 49
              '31': 46
              '32': 77
              '33': 115
              '34': 103
              '35': 68
              '36': 101
              '37': 108
              '38': 101
              '39': 103
              '40': 97
              '41': 116
              '42': 101
              '43': 18
              '44': 118
              '45': 10
              '46': 45
              '47': 99
              '48': 111
              '49': 115
              '50': 109
              '51': 111
              '52': 115
              '53': 49
              '54': 57
              '55': 99
              '56': 57
              '57': 102
              '58': 100
              '59': 104
              '60': 52
              '61': 56
              '62': 56
              '63': 118
              '64': 113
              '65': 106
              '66': 99
              '67': 108
              '68': 108
              '69': 116
              '70': 119
              '71': 112
              '72': 54
              '73': 56
              '74': 106
              '75': 109
              '76': 53
              '77': 48
              '78': 121
              '79': 100
              '80': 119
              '81': 121
              '82': 104
              '83': 51
              '84': 54
              '85': 106
              '86': 113
              '87': 101
              '88': 97
              '89': 116
              '90': 101
              '91': 118
              '92': 18
              '93': 52
              '94': 99
              '95': 111
              '96': 115
              '97': 109
              '98': 111
              '99': 115
              '100': 118
              '101': 97
              '102': 108
              '103': 111
              '104': 112
              '105': 101
              '106': 114
              '107': 49
              '108': 54
              '109': 121
              '110': 115
              '111': 48
              '112': 101
              '113': 103
              '114': 57
              '115': 51
              '116': 53
              '117': 109
              '118': 107
              '119': 113
              '120': 112
              '121': 107
              '122': 121
              '123': 100
              '124': 107
              '125': 103
              '126': 102
              '127': 99
              '128': 106
              '129': 57
              '130': 97
              '131': 103
              '132': 101
              '133': 50
              '134': 97
              '135': 117
              '136': 56
              '137': 108
              '138': 57
              '139': 54
              '140': 110
              '141': 97
              '142': 101
              '143': 114
              '144': 101
              '145': 57
              '146': 26
              '147': 15
              '148': 10
              '149': 5
              '150': 117
              '151': 97
              '152': 116
              '153': 111
              '154': 109
              '155': 18
              '156': 6
              '157': 49
              '158': 48
              '159': 48
              '160': 48
              '161': 48
              '162': 48
              '163': 18
              '164': 103
              '165': 10
              '166': 80
              '167': 10
              '168': 70
              '169': 10
              '170': 31
              '171': 47
              '172': 99
              '173': 111
              '174': 115
              '175': 109
              '176': 111
              '177': 115
              '178': 46
              '179': 99
              '180': 114
              '181': 121
              '182': 112
              '183': 116
              '184': 111
              '185': 46
              '186': 115
              '187': 101
              '188': 99
              '189': 112
              '190': 50
              '191': 53
              '192': 54
              '193': 107
              '194': 49
              '195': 46
              '196': 80
              '197': 117
              '198': 98
              '199': 75
              '200': 101
              '201': 121
              '202': 18
              '203': 35
              '204': 10
              '205': 33
              '206': 3
              '207': 156
              '208': 228
              '209': 123
              '210': 42
              '211': 129
              '212': 61
              '213': 19
              '214': 135
              '215': 97
              '216': 49
              '217': 169
              '218': 195
              '219': 190
              '220': 119
              '221': 232
              '222': 196
              '223': 175
              '224': 164
              '225': 158
              '226': 148
              '227': 135
              '228': 68
              '229': 171
              '230': 190
              '231': 225
              '232': 31
              '233': 147
              '234': 158
              '235': 42
              '236': 66
              '237': 15
              '238': 70
              '239': 18
              '240': 4
              '241': 10
              '242': 2
              '243': 8
              '244': 1
              '245': 24
              '246': 33
              '247': 18
              '248': 19
              '249': 10
              '250': 13
              '251': 10
              '252': 5
              '253': 117
              '254': 97
              '255': 116
              '256': 111
              '257': 109
              '258': 18
              '259': 4
              '260': 53
              '261': 48
              '262': 48
              '263': 48
              '264': 16
              '265': 224
              '266': 167
              '267': 18
              '268': 26
              '269': 64
              '270': 25
              '271': 31
              '272': 135
              '273': 165
              '274': 77
              '275': 206
              '276': 175
              '277': 182
              '278': 171
              '279': 154
              '280': 95
              '281': 17
              '282': 42
              '283': 19
              '284': 68
              '285': 76
              '286': 163
              '287': 126
              '288': 73
              '289': 160
              '290': 41
              '291': 229
              '292': 49
              '293': 187
              '294': 33
              '295': 48
              '296': 31
              '297': 215
              '298': 46
              '299': 157
              '300': 57
              '301': 3
              '302': 4
              '303': 199
              '304': 99
              '305': 204
              '306': 165
              '307': 169
              '308': 118
              '309': 10
              '310': 99
              '311': 29
              '312': 200
              '313': 87
              '314': 5
              '315': 221
              '316': 107
              '317': 8
              '318': 181
              '319': 15
              '320': 95
              '321': 255
              '322': 125
              '323': 93
              '324': 232
              '325': 215
              '326': 59
              '327': 44
              '328': 235
              '329': 209
              '330': 244
              '331': 195
              '332': 182
              '333': 160
            gasUsed: 167798
            gasWanted: 300000
    OMCraftUnstakeTxPayload:
      type: object
      required:
        - pubkey
        - validator
      properties:
        pubkey:
          type: string
          example: 039ce47b2a813d13876131a9c3be77e8c4afa49e948744abbee11f939e2a420f46
          description: Wallet public key (compressed or uncompressed), this is different than the wallet address
        validator:
          type: string
          example: mantravaloper1qum83utf8833n4f857w98dxc5w8qlnq9eeew4g
          description: Validator address
        amount_uom:
          type: string
          example: '1000000000000000000000000'
          description: Amount to unstake in uOM. Omit to unstake all the delegated amount
    OMCraftRedelegateTxPayload:
      type: object
      required:
        - account_id
        - pubkey
        - validator_source
        - validator_destination
      properties:
        account_id:
          type: string
          example: b7177fd2-fbb3-479f-aa92-db9fb16e229f
          format: uuid
          description: Kiln Account ID to which the new stake will be linked
        pubkey:
          type: string
          example: 039ce47b2a813d13876131a9c3be77e8c4afa49e948744abbee11f939e2a420f46
          description: Wallet public key (compressed or uncompressed), this is different than the wallet address
        validator_source:
          type: string
          example: mantravaloper1qum83utf8833n4f857w98dxc5w8qlnq9eeew4g
          description: Validator source address of current stake
        validator_destination:
          type: string
          example: mantravaloper1qum83utf8833n4f857w98dxc5w8qlnq9eeew4g
          description: Validator destination address to which redelegate the stake
        amount_uom:
          type: string
          example: '1000000000000000000000000'
          description: Amount to redelegate in uOM
    OMCraftStakeTxPayload:
      type: object
      required:
        - account_id
        - pubkey
        - validator
        - amount_uom
      properties:
        account_id:
          type: string
          example: b7177fd2-fbb3-479f-aa92-db9fb16e229f
          format: uuid
          description: Kiln Account ID to stake into
        pubkey:
          type: string
          example: 039ce47b2a813d13876131a9c3be77e8c4afa49e948744abbee11f939e2a420f46
          description: Wallet public key (compressed or uncompressed), this is different than the wallet address
        validator:
          type: string
          example: mantravaloper1qum83utf8833n4f857w98dxc5w8qlnq9eeew4g
          description: Validator address
        amount_uom:
          type: string
          example: '1000000000000000000000000'
          description: Amount to stake in uom
        restake_rewards:
          type: boolean
          default: false
          description: If enabled, the rewards will be automatically restaked
        grantee_address:
          type: string
          example: cosmos1u4whe0pwlgt7q7ph37qxalq2wfq4pkcdze5fmd
          description: 'Grantee address, this address is specific to each validator. Kiln grantee addresses are found here: https://github.com/eco-stake/validator-registry/blob/master/Kiln/chains.json https://github.com/eco-stake/validator-registry/blob/master/interop/chains.json'
    OMCraftRestakeRewardsTxPayload:
      type: object
      required:
        - pubkey
        - validator_address
        - grantee_address
      properties:
        pubkey:
          type: string
          example: 039ce47b2a813d13876131a9c3be77e8c4afa49e948744abbee11f939e2a420f46
          description: Wallet public key (compressed or uncompressed), this is different than the wallet address
        validator_address:
          type: string
          example: mantravaloper1qum83utf8833n4f857w98dxc5w8qlnq9eeew4g
          description: Validator address
        grantee_address:
          type: string
          example: cosmos1u4whe0pwlgt7q7ph37qxalq2wfq4pkcdze5fmd
          description: 'Grantee address, this address is specific to each validator. Kiln grantee addresses are found here: https://github.com/eco-stake/validator-registry/blob/master/Kiln/chains.json https://github.com/eco-stake/validator-registry/blob/master/interop/chains.json'
    OMCraftWithdrawRewardsTxPayload:
      type: object
      required:
        - pubkey
        - validator
      properties:
        pubkey:
          type: string
          example: 039ce47b2a813d13876131a9c3be77e8c4afa49e948744abbee11f939e2a420f46
          description: Wallet public key (compressed or uncompressed), this is different than the wallet address
        validator:
          type: string
          example: mantravaloper1qum83utf8833n4f857w98dxc5w8qlnq9eeew4g
          description: Validator address
    OMReward:
      type: object
      required:
        - date
        - rewards
        - balance
        - net_apy
      properties:
        date:
          type: string
          description: Day for this reward entry
          format: date
          example: '2023-01-15'
        rewards:
          type: string
          description: Accumulated rewards in uOM during the day
          example: '3575891083876864200000'
        balance:
          type: string
          description: Staked balance in uOM at the end of the day
          example: '6300000000000000000000000'
        net_apy:
          type: number
          description: Net annual percentage yield
          example: 20.76
        rewards_usd:
          type: number
          description: Estimated value of rewards generated for that day in USD. The exchange rate is the rate at the end of the day provided by CoinGeckko.
        balance_usd:
          type: number
          description: Estimated value of the staked balance at the beginning of the day in USD. The exchange rate is the rate at the end of the day provided by CoinGeckko.
    OMOperationDelegate:
      type: object
      properties:
        type:
          type: string
          description: Operation type
          example: staking.MsgDelegate
        time:
          type: string
          description: Date of the operation
          format: date-time
          example: '2023-06-22T15:35:01.892644Z'
        block:
          type: number
          description: Transaction block
          example: 15828207
        tx_hash:
          type: string
          description: Transaction hash
          example: 7DBC7C481A9A28961BDDF5BCDD47217A126EC0497017908453D71FACA9FA3506
        tx_gas_used:
          type: string
          description: Gas used for the whole transaction in uOM
          example: '186733'
        message_index:
          type: number
          description: Index of the message in the transaction
          example: 0
        validator_address:
          type: string
          description: Validator address
          example: mantravaloper1qum83utf8833n4f857w98dxc5w8qlnq9eeew4g
        delegator_address:
          type: string
          description: Delegator address
          example: mantra156h4wqz5p0xuj48cn0cv2sg8q9p2y3nycg3h3a
        amount:
          type: string
          description: Amount added to the staked balance in uOM
          example: '3000000'
        withdraw_rewards:
          type: string
          description: Rewards auto-claimed alongside the operation in uOM
          example: '10841'
    OMOperationUndelegate:
      type: object
      properties:
        type:
          type: string
          description: Operation type
          example: staking.MsgUndelegate
        time:
          type: string
          description: Date of the operation
          format: date-time
          example: '2023-06-22T15:35:01.892644Z'
        block:
          type: number
          description: Transaction block
          example: 15828207
        tx_hash:
          type: string
          description: Transaction hash
          example: 7DBC7C481A9A28961BDDF5BCDD47217A126EC0497017908453D71FACA9FA3506
        tx_gas_used:
          type: string
          description: Gas used for the whole transaction in uOM
          example: '186733'
        message_index:
          type: number
          description: Index of the message in the transaction
          example: 0
        validator_address:
          type: string
          description: Validator address
          example: mantravaloper1qum83utf8833n4f857w98dxc5w8qlnq9eeew4g
        delegator_address:
          type: string
          description: Delegator address
          example: mantra156h4wqz5p0xuj48cn0cv2sg8q9p2y3nycg3h3a
        amount:
          type: string
          description: Amount removed from the staked balance in uOM
          example: '3000000'
        withdraw_rewards:
          type: string
          description: Rewards auto-claimed alongside the operation in uOM
          example: '10841'
    OMOperationRedelegate:
      type: object
      properties:
        type:
          type: string
          description: Operation type
          example: staking.MsgBeginRedelegate
        time:
          type: string
          description: Date of the operation
          format: date-time
          example: '2023-06-22T15:35:01.892644Z'
        block:
          type: number
          description: Transaction block
          example: 15828207
        tx_hash:
          type: string
          description: Transaction hash
          example: 7DBC7C481A9A28961BDDF5BCDD47217A126EC0497017908453D71FACA9FA3506
        tx_gas_used:
          type: string
          description: Gas used for the whole transaction in uOM
          example: '186733'
        message_index:
          type: number
          description: Index of the message in the transaction
          example: 0
        validator_address:
          type: string
          description: Destination validator address
          example: mantravaloper1qum83utf8833n4f857w98dxc5w8qlnq9eeew4g
        validator_address_source:
          type: string
          description: Source validator address
          example: mantravaloper1qum83utf8833n4f857w98dxc5w8qlnq9eeew4g
        delegator_address:
          type: string
          description: Delegator address
          example: mantra156h4wqz5p0xuj48cn0cv2sg8q9p2y3nycg3h3a
        amount:
          type: string
          description: Amount moved from the source validator staked balance to the destination validator staked balance in uOM
          example: '3000000'
        withdraw_rewards:
          type: string
          description: Rewards auto-claimed from the destination validator alongside the operation in uOM
          example: '10841'
        withdraw_rewards_source:
          type: string
          description: Rewards auto-claimed from the source validator alongside the operation in uOM
          example: '10841'
    OMOperationWithdrawRewards:
      type: object
      properties:
        type:
          type: string
          description: Operation type
          example: distr.MsgWithdrawDelegatorReward
        time:
          type: string
          description: Date of the operation
          format: date-time
          example: '2023-06-22T15:35:01.892644Z'
        block:
          type: number
          description: Transaction block
          example: 15828207
        tx_hash:
          type: string
          description: Transaction hash
          example: 7DBC7C481A9A28961BDDF5BCDD47217A126EC0497017908453D71FACA9FA3506
        tx_gas_used:
          type: string
          description: Gas used for the whole transaction in uOM
          example: '186733'
        message_index:
          type: number
          description: Index of the message in the transaction
          example: 0
        validator_address:
          type: string
          description: Validator address
          example: mantravaloper1qum83utf8833n4f857w98dxc5w8qlnq9eeew4g
        delegator_address:
          type: string
          description: Delegator address
          example: mantra156h4wqz5p0xuj48cn0cv2sg8q9p2y3nycg3h3a
        withdraw_rewards:
          type: string
          description: Rewards claimed alongside the operation in uOM
          example: '10841'
    OMOperationGrant:
      type: object
      properties:
        type:
          type: string
          description: Operation type
          example: Authz.Grant
        time:
          type: string
          description: Date of the operation
          format: date-time
          example: '2023-06-22T15:35:01.892644Z'
        block:
          type: number
          description: Transaction block
          example: 15828207
        tx_hash:
          type: string
          description: Transaction hash
          example: 7DBC7C481A9A28961BDDF5BCDD47217A126EC0497017908453D71FACA9FA3506
        tx_gas_used:
          type: string
          description: Gas used for the whole transaction in uOM
          example: '186733'
        message_index:
          type: number
          description: Index of the message in the transaction
          example: 0
        grantee:
          type: string
          description: Recipient of the permissions
          example: mantra156h4wqz5p0xuj48cn0cv2sg8q9p2y3nycg3h3a
        granter:
          type: string
          description: Owner of the stake giving the permissions
          example: mantra156h4wqz5p0xuj48cn0cv2sg8q9p2y3nycg3h3a
        permission:
          type: string
          description: 'Kind of permission been grantee, can be: "Staking.MsgDelegate", "Staking.MsgUndelegate", "Staking.MsgRedelegate" or "Distribution.MsgWithdrawDelegatorReward"'
          example: Staking.MsgDelegate
        allow_list:
          type: array
          items:
            type: string
          nullable: true
          description: List of address on which the granted permission can be applied (ie validator on which delegation is allowed)
          example:
            - mantra156h4wqz5p0xuj48cn0cv2sg8q9p2y3nycg3h3a
            - mantra156h4wqz5p0xuj48cn0cv2sg8q9p2y3nycg3h3a
        deny_list:
          type: array
          items:
            type: string
          nullable: true
          description: List of address on which the granted permission cannot be applied (ie validator on which delegation is allowed)
          example:
            - mantra156h4wqz5p0xuj48cn0cv2sg8q9p2y3nycg3h3a
            - mantra156h4wqz5p0xuj48cn0cv2sg8q9p2y3nycg3h3a
    OMOperationExec:
      type: object
      properties:
        type:
          type: string
          description: Operation type
          example: Authz.Exec
        time:
          type: string
          description: Date of the operation
          format: date-time
          example: '2023-06-22T15:35:01.892644Z'
        block:
          type: number
          description: Transaction block
          example: 15828207
        tx_hash:
          type: string
          description: Transaction hash
          example: 7DBC7C481A9A28961BDDF5BCDD47217A126EC0497017908453D71FACA9FA3506
        tx_gas_used:
          type: string
          description: Gas used for the whole transaction in uOM
          example: '186733'
        message_index:
          type: number
          description: Index of the message in the transaction
          example: 0
        executed_operations:
          type: array
          nullable: true
          items:
            type: object
            properties:
              type:
                type: string
                description: Operation type
                example: staking.Delegate
              validator_address:
                type: string
                description: Destination validator address
                example: mantravaloper1qum83utf8833n4f857w98dxc5w8qlnq9eeew4g
              validator_address_source:
                type: string
                description: Source validator address
                example: mantravaloper1qum83utf8833n4f857w98dxc5w8qlnq9eeew4g
              delegator_address:
                type: string
                description: Delegator address
                example: mantra156h4wqz5p0xuj48cn0cv2sg8q9p2y3nycg3h3a
              amount:
                type: string
                description: Amount moved from the source validator staked balance to the destination validator staked balance in uOM
                example: '3000000'
              withdraw_rewards:
                type: string
                description: Rewards auto-claimed from the destination validator alongside the operation in uOM
                example: '10841'
              withdraw_rewards_source:
                type: string
                description: Rewards auto-claimed from the source validator alongside the operation in uOM
                example: '10841'
    OMNetworkStats:
      type: object
      required:
        - om_price_usd
        - nb_validators
        - network_gross_apy
        - supply_staked_percent
        - inflation_rate
        - updated_at
      properties:
        om_price_usd:
          type: number
          description: Price of Mantra in USD
          example: 10.53
        nb_validators:
          type: number
          description: Number of validators in the network
          example: 100
        network_gross_apy:
          type: number
          description: Gross annual percentage yield
          example: 4.5
        supply_staked_percent:
          type: number
          description: Supply of Mantra currently staked
          example: 12.4
        inflation_rate:
          type: number
          description: Mantra inflation rate
          example: 3.5
        updated_at:
          type: string
          description: Last date this data was updated
          format: date-time
          example: '2023-01-14T01:13:59Z'
    OMTxDecoding:
      type: object
      description: Decoded transaction
      example:
        authInfo:
          signerInfos:
            - publicKey:
                typeUrl: /cosmos.crypto.secp256k1.PubKey
                value:
                  '0': 10
                  '1': 33
                  '2': 3
                  '3': 156
                  '4': 228
                  '5': 123
                  '6': 42
                  '7': 129
                  '8': 61
                  '9': 19
                  '10': 135
                  '11': 97
                  '12': 49
                  '13': 169
                  '14': 195
                  '15': 190
                  '16': 119
                  '17': 232
                  '18': 196
                  '19': 175
                  '20': 164
                  '21': 158
                  '22': 148
                  '23': 135
                  '24': 68
                  '25': 171
                  '26': 190
                  '27': 225
                  '28': 31
                  '29': 147
                  '30': 158
                  '31': 42
                  '32': 66
                  '33': 15
                  '34': 70
              modeInfo:
                single:
                  mode: 1
              sequence:
                low: 102
                high: 0
                unsigned: true
          fee:
            amount:
              - denom: uom
                amount: '5000'
            gasLimit:
              low: 2000000
              high: 0
              unsigned: true
            payer: ''
            granter: ''
        body:
          messages:
            - typeUrl: /cosmos.staking.v1beta1.MsgDelegate
              value:
                '0': 10
                '1': 45
                '2': 99
                '3': 111
                '4': 115
                '5': 109
                '6': 111
                '7': 115
                '8': 49
                '9': 57
                '10': 99
                '11': 57
                '12': 102
                '13': 100
                '14': 104
                '15': 52
                '16': 56
                '17': 56
                '18': 118
                '19': 113
                '20': 106
                '21': 99
                '22': 108
                '23': 108
                '24': 116
                '25': 119
                '26': 112
                '27': 54
                '28': 56
                '29': 106
                '30': 109
                '31': 53
                '32': 48
                '33': 121
                '34': 100
                '35': 119
                '36': 121
                '37': 104
                '38': 51
                '39': 54
                '40': 106
                '41': 113
                '42': 101
                '43': 97
                '44': 116
                '45': 101
                '46': 118
                '47': 18
                '48': 52
                '49': 99
                '50': 111
                '51': 115
                '52': 109
                '53': 111
                '54': 115
                '55': 118
                '56': 97
                '57': 108
                '58': 111
                '59': 112
                '60': 101
                '61': 114
                '62': 49
                '63': 54
                '64': 121
                '65': 115
                '66': 48
                '67': 101
                '68': 103
                '69': 57
                '70': 51
                '71': 53
                '72': 109
                '73': 107
                '74': 113
                '75': 112
                '76': 107
                '77': 121
                '78': 100
                '79': 107
                '80': 103
                '81': 102
                '82': 99
                '83': 106
                '84': 57
                '85': 97
                '86': 103
                '87': 101
                '88': 50
                '89': 97
                '90': 117
                '91': 56
                '92': 108
                '93': 57
                '94': 54
                '95': 110
                '96': 97
                '97': 101
                '98': 114
                '99': 101
                '100': 57
                '101': 26
                '102': 16
                '103': 10
                '104': 5
                '105': 117
                '106': 97
                '107': 116
                '108': 111
                '109': 109
                '110': 18
                '111': 7
                '112': 49
                '113': 48
                '114': 48
                '115': 48
                '116': 48
                '117': 48
                '118': 48
          memo: ''
          timeoutHeight:
            low: 0
            high: 0
            unsigned: true
          extensionOptions: []
          nonCriticalExtensionOptions: []
        signatures:
          - '0': 116
            '1': 104
            '2': 101
            '3': 116
            '4': 97
            '5': 45
            '6': 116
            '7': 101
            '8': 115
            '9': 116
            '10': 110
            '11': 101
            '12': 116
            '13': 45
            '14': 48
            '15': 48
            '16': 49
    OMCraftSendTxPayload:
      type: object
      required:
        - pubkey
        - to
        - amount_uom
      properties:
        pubkey:
          type: string
          description: Wallet public key (compressed or uncompressed), this is different than the wallet address
          example: 039ce47b2a813d13876131a9c3be77e8c4afa49e948744abbee11f939e2a420f46
        to:
          type: string
          description: Recipient address
          example: mantra1mfdn23y2ydnp6j3l3f8rw6r2gzazrmprgxn5xl
        amount_uom:
          type: string
          description: Amount to send in uom
          example: '1000000000000000000000000'
    OMGetBalancePayload:
      type: object
      required:
        - address
        - denom
      properties:
        address:
          type: string
          description: Wallet address
          example: mantra1djqecw6nn5tydxq0shan7srv8j65clsf7vypl6
        denom:
          type: string
          description: The denomination of the balance to query
          example: uOM
    ADAPostStakesPayload:
      type: object
      required:
        - stakes
        - account_id
      properties:
        stakes:
          type: array
          items:
            type: object
            properties:
              stakeAddress:
                type: string
                description: Stake address
                example: stake1u84uqy85qpsln9a49dtv7mrzzp0246v7s2cj7ypjr555ldqenardf
        account_id:
          type: string
          description: Kiln Account ID
          example: 92f5bfd4-ea38-4824-84f7-686eddff5539
    ADACraftStakeTxPayload:
      type: object
      required:
        - account_id
        - wallet
        - pool_id
      properties:
        account_id:
          type: string
          example: b7177fd2-fbb3-479f-aa92-db9fb16e229f
          format: uuid
          description: Kiln Account ID to stake into
        wallet:
          type: string
          example: addr1q8rmz6kk2te6z2p44l2uvjgmf5cj5r6l0nwnw6xqk4srnlr5kh8wvl8mw3na7m3fd2py8n3zqs6ueqe0gwcuf9a77z9sxdz9xr
          description: Wallet that you wish to delegate from
        pool_id:
          type: string
          example: pool10rdglgh4pzvkf936p2m669qzarr9dusrhmmz9nultm3uvq4eh5k
          description: Pool id to delegate to
    ADACraftWithdrawRewardsTxPayload:
      type: object
      required:
        - wallet
      properties:
        wallet:
          type: string
          example: addr1q8rmz6kk2te6z2p44l2uvjgmf5cj5r6l0nwnw6xqk4srnlr5kh8wvl8mw3na7m3fd2py8n3zqs6ueqe0gwcuf9a77z9sxdz9xr
          description: Wallet that you wish to withdraw rewards to
        amount_lovelace:
          type: string
          example: '1000000'
          description: Optional amount of rewards to withdraw in lovelace. 1 ADA = 1,000,000 lovelace. If omitted, all available rewards will be withdrawn.
    ADACraftUnstakeTxPayload:
      type: object
      required:
        - wallet
      properties:
        wallet:
          type: string
          example: addr1q8rmz6kk2te6z2p44l2uvjgmf5cj5r6l0nwnw6xqk4srnlr5kh8wvl8mw3na7m3fd2py8n3zqs6ueqe0gwcuf9a77z9sxdz9xr
          description: Wallet that you wish to undelegate
    ADAPrepareTxPayload:
      type: object
      required:
        - unsigned_tx_serialized
        - signed_messages
      properties:
        unsigned_tx_serialized:
          type: string
          example: 0300000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000063b2b5ef76d483b695bc3b954d9a372ca5f744e00279c8578bc4268d570b701a037fac575ae16bb3ba5702b8d5bd9930953453e2d628368f83a11ab5896d20bbcae0b4a119860afd99da20f3462ba15d8bd1528d73724b83e8cc4cee00787df28a181783c264113ef1870bae5a90987fc5cfcdffaddf23c7dcfd7585c13d10b0301080c373c6f8e84c6822a9f87035f65cccf899eef3fcdee61077041a93e1805bab24e1bb5f70b4d3ae65feb6d20587f62ccc8d5e720e99abe3d4415972bbf74a8a88a51f5f3871e65b84cc393458d0f23a413184cf2bb7093ae4e2c99d55b39a575c5f98e3135fcb53e71e6fafcb4da3a3cc36af1c76a1a7e72aa12eae1346d724c6c00000000000000000000000000000000000000000000000000000000000000004792650d1e9a4fe99721617c7d47c8712c14c20a76bf043368c6528c9090531a06a1d8179137542a983437bdfe2a7ab2557f535c8a78722b68a49dc00000000006a1d817a502050b680791e6ce6db88e1e5b7150f61fc6790a4eb4d10000000006a7d51718c774c928566398691d5eb68b5eb8a39b4b6d5c73555b210000000006a7d517192c568ee08a845f73d29788cf035c3145b21ab344d8062ea940000006a7d517192c5c51218cc94c3d4af17f58daee089ba1fd44e3dbd98a0000000006a7d517193584d0feed9bb3431d13206be544281b57b8566cc5375ff4000000f0973e76495f3ffc65798a529de5cba4ec7f47f17669c9fa256923f099a1cda304040303090204040000000402000134000000000080c6a47e8d0300c80000000000000006a1d8179137542a983437bdfe2a7ab2557f535c8a78722b68a49dc0000000000602010a7400000000373c6f8e84c6822a9f87035f65cccf899eef3fcdee61077041a93e1805bab24e373c6f8e84c6822a9f87035f65cccf899eef3fcdee61077041a93e1805bab24e00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000006060105080b07000402000000
          description: Unsigned serialized transaction
        signed_messages:
          type: array
          description: Signed messages
          example: null
          items:
            type: object
            properties:
              pubkey:
                type: string
                description: Public key of the signing key
              signature:
                type: string
                description: Signature of the message
    ADABroadcastTxPayload:
      type: object
      required:
        - tx_serialized
      properties:
        tx_serialized:
          type: string
          example: 0300000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000063b2b5ef76d483b695bc3b954d9a372ca5f744e00279c8578bc4268d570b701a037fac575ae16bb3ba5702b8d5bd9930953453e2d628368f83a11ab5896d20bbcae0b4a119860afd99da20f3462ba15d8bd1528d73724b83e8cc4cee00787df28a181783c264113ef1870bae5a90987fc5cfcdffaddf23c7dcfd7585c13d10b0301080c373c6f8e84c6822a9f87035f65cccf899eef3fcdee61077041a93e1805bab24e1bb5f70b4d3ae65feb6d20587f62ccc8d5e720e99abe3d4415972bbf74a8a88a51f5f3871e65b84cc393458d0f23a413184cf2bb7093ae4e2c99d55b39a575c5f98e3135fcb53e71e6fafcb4da3a3cc36af1c76a1a7e72aa12eae1346d724c6c00000000000000000000000000000000000000000000000000000000000000004792650d1e9a4fe99721617c7d47c8712c14c20a76bf043368c6528c9090531a06a1d8179137542a983437bdfe2a7ab2557f535c8a78722b68a49dc00000000006a1d817a502050b680791e6ce6db88e1e5b7150f61fc6790a4eb4d10000000006a7d51718c774c928566398691d5eb68b5eb8a39b4b6d5c73555b210000000006a7d517192c568ee08a845f73d29788cf035c3145b21ab344d8062ea940000006a7d517192c5c51218cc94c3d4af17f58daee089ba1fd44e3dbd98a0000000006a7d517193584d0feed9bb3431d13206be544281b57b8566cc5375ff4000000f0973e76495f3ffc65798a529de5cba4ec7f47f17669c9fa256923f099a1cda304040303090204040000000402000134000000000080c6a47e8d0300c80000000000000006a1d8179137542a983437bdfe2a7ab2557f535c8a78722b68a49dc0000000000602010a7400000000373c6f8e84c6822a9f87035f65cccf899eef3fcdee61077041a93e1805bab24e373c6f8e84c6822a9f87035f65cccf899eef3fcdee61077041a93e1805bab24e00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000006060105080b07000402000000
          description: Signed serialized transaction
    ADATxStatus:
      type: object
      properties:
        status:
          type: string
          description: Transaction status
          enum:
            - success
            - pending_confirmation
          example: success
        receipt:
          type: object
          description: Transaction receipt. Object shape can be found [here](https://github.com/blockfrost/openapi/blob/master/src/generated-types.ts#L4493)
          example:
            hash: 20082206aadbbb2dfded4afc9346831c5bd3a6a3f8a75f59dbe6166c05e918f6
            block: 2612449e345ec0f58aae05c693a09943f599592e28eedec70ee8c1a4f3d1e834
            block_height: 660450
            block_time: 1677170968
            slot: 21487768
            index: 1
            output_amount:
              - unit: lovelace
                quantity: '10027100000'
            fees: '300000'
            deposit: '2000000'
            size: 429
            invalid_before: null
            invalid_hereafter: '21494910'
            utxo_count: 2
            withdrawal_count: 0
            mir_cert_count: 0
            delegation_count: 1
            stake_cert_count: 1
            pool_update_count: 0
            pool_retire_count: 0
            asset_mint_or_burn_count: 0
            redeemer_count: 0
            valid_contract: true
    ADAUnsignedTx:
      type: object
      required:
        - unsigned_tx_hash
        - unsigned_tx_serialized
        - inputs
      properties:
        unsigned_tx_hash:
          type: string
          description: Hash of the unsigned transaction
          example: ea62bc381a2d8fc338f24634674a168fdc8f1a09b978f24f026041f4e00c876f
        unsigned_tx_serialized:
          type: string
          description: Unsigned serialized transaction
          example: 84a500818258203d244a2821a0cb32df614cf4380e6c6e0114bc7c734cfa2a3940498ad86865e100018182583900491a1d0747fa91f319625e39076232ad4cc274e3257f345ced82dbb2a8565045c49103b521a3827ff64b98889350a22fa9a0b5ccf72b279b1b0000000255928400021a000493e0031a01ad4330048282008200581ca8565045c49103b521a3827ff64b98889350a22fa9a0b5ccf72b279b83028200581ca8565045c49103b521a3827ff64b98889350a22fa9a0b5ccf72b279b581ce54d5f9340218a9816cafafc92dc3d5212b6d149ce75e9637cbcd7e0a0f5f6
        inputs:
          type: array
          items:
            type: object
          description: List of inputs to spend
          example:
            - transaction_id: 3d244a2821a0cb32df614cf4380e6c6e0114bc7c734cfa2a3940498ad86865e1
              index: 0
    ADASignedTx:
      type: object
      required:
        - signed_tx_serialized
      properties:
        signed_tx_serialized:
          type: string
          description: Signed serialized transaction
          example: 84a500818258203d244a2821a0cb32df614cf4380e6c6e0114bc7c734cfa2a3940498ad86865e100018182583900491a1d0747fa91f319625e39076232ad4cc274e3257f345ced82dbb2a8565045c49103b521a3827ff64b98889350a22fa9a0b5ccf72b279b1b0000000255928400021a000493e0031a01ad4330048282008200581ca8565045c49103b521a3827ff64b98889350a22fa9a0b5ccf72b279b83028200581ca8565045c49103b521a3827ff64b98889350a22fa9a0b5ccf72b279b581ce54d5f9340218a9816cafafc92dc3d5212b6d149ce75e9637cbcd7e0a0f5f6
    ADATxHash:
      type: object
      required:
        - tx_hash
      properties:
        tx_hash:
          type: string
          description: Hash of the transaction
          example: 7f12d9eacd762d130838289397480e495db0fd268bd3be4fd55c74a74fd8372d
    ADAStake:
      type: object
      required:
        - wallet_addresses
        - stake_address
        - pool_id
        - balance
        - rewards
        - available_rewards
        - delegated_epoch
        - delegated_at
        - activated_epoch
        - activated_at
        - state
        - net_apy
        - updated_at
      properties:
        wallet_addresses:
          type: array
          description: The list of wallet addresses associated to the stake address
          example:
            - addr_test1qqumsdyju8ee4tvee7kyzd6jenkl9jvgdjtzqlf729wqd66eay504fk550rss8ckhksw3t742vf5vy99kyxpz60cxqcqdeu78t
          items:
            type: string
            description: Wallet address associated to the stake address
            example: addr_test1qqumsdyju8ee4tvee7kyzd6jenkl9jvgdjtzqlf729wqd66eay504fk550rss8ckhksw3t742vf5vy99kyxpz60cxqcqdeu78t
        stake_address:
          type: string
          description: The stake address
          example: stake_test1upv7j2865m2283cgruttmg8g4l24xy6xzzjmzrq3d8urqvqla4ngk
        pool_id:
          type: string
          description: The pool id associated to the stake address
          example: pool1u4x4ly6qyx9fs9k2lt7f9hpa2gftd52fee67jcmuhnt7qqae3x0
        balance:
          type: string
          description: Current stake balance in Lovelace
          example: '30004690613'
        rewards:
          type: string
          description: Total stake rewards in Lovelace
          example: '37201548'
        available_rewards:
          type: string
          description: Withdrawal amount of rewards in Lovelace
          example: '4588'
        delegated_epoch:
          description: Epoch of the last delegation
          type: integer
          example: 42
        delegated_at:
          type: string
          description: Date of the last delegation
          format: date-time
          example: '2023-01-06T22:00:00Z'
        activated_epoch:
          description: Epoch at which the stake was registered
          type: integer
          example: 44
        activated_at:
          type: string
          description: Date at which the stake was registered
          format: date-time
          example: '2023-01-16T22:00:00Z'
        state:
          type: string
          description: State of the stake
          example: active
          enum:
            - active
            - inactive
        net_apy:
          type: number
          description: Net annual percentage yield
          example: 0.188014
        updated_at:
          type: string
          description: Last date this data was updated
          format: date-time
          example: '2023-01-14T01:13:59Z'
    ADARewardByEpoch:
      type: object
      required:
        - epoch
        - rewards
        - active_balance
        - net_apy
      properties:
        epoch:
          type: object
          properties:
            nb:
              type: number
              description: Epoch number
              example: 44
            begin_at:
              type: string
              description: Epoch start date
              example: '2023-01-06T22:00:00Z'
        rewards:
          type: string
          description: Reward amount in lovelace
          example: '1000000'
        active_balance:
          type: string
          description: Active balance
          example: '1000000'
        net_apy:
          type: number
          description: Net APY
          example: 3.05
    ADARewardByDay:
      type: object
      required:
        - date
        - rewards
        - active_balance
        - net_apy
      properties:
        rewards:
          type: string
          description: Reward amount in lovelace
          example: '1000000'
        date:
          type: string
          description: Date of reward
          example: '2023-01-06'
        active_balance:
          type: string
          description: Active balance
          example: '1000000'
        net_apy:
          type: number
          description: Net APY
          example: 3.05
        rewards_usd:
          type: number
          description: Estimated value of rewards generated for that day in USD. The exchange rate is the rate at the end of the day provided by CoinGeckko.
        active_balance_usd:
          type: number
          description: Estimated value of the staked balance at the beginning of the day in USD. The exchange rate is the rate at the end of the day provided by CoinGeckko.
    ADAOperationStakeRegistration:
      type: object
      required:
        - type
        - time
        - stake_address
        - epoch
        - block
        - tx_hash
      properties:
        type:
          type: string
          description: stake_registration
          example: stake_registration
        time:
          type: string
          description: Date of the stake registration based on the block.
          format: date-time
          example: '2021-01-03T21:49:34Z'
        stake_address:
          type: string
          description: Stake address
          example: stake1u84uqy85qpsln9a49dtv7mrzzp0246v7s2cj7ypjr555ldqenardf
        epoch:
          type: integer
          description: Epoch number
          example: 239
        block:
          type: integer
          description: Block number
          example: 5162844
        tx_hash:
          type: string
          description: Transaction hash
          example: 052306cc8ded7adee92ccd9e10e31c8352f568408eb1868cf3ca751d67695dc8
    ADAOperationStakeDeregistration:
      type: object
      required:
        - type
        - time
        - stake_address
        - epoch
        - block
        - tx_hash
      properties:
        type:
          type: string
          description: stake_deregistration
          example: stake_deregistration
        time:
          type: string
          description: Date of the stake deregistration based on the block.
          format: date-time
          example: '2021-01-03T21:49:34Z'
        stake_address:
          type: string
          description: Stake address
          example: stake1u84uqy85qpsln9a49dtv7mrzzp0246v7s2cj7ypjr555ldqenardf
        epoch:
          type: integer
          description: Epoch number
          example: 239
        block:
          type: integer
          description: Block number
          example: 5162844
        tx_hash:
          type: string
          description: Transaction hash
          example: 052306cc8ded7adee92ccd9e10e31c8352f568408eb1868cf3ca751d67695dc8
    ADAOperationDelegation:
      type: object
      required:
        - type
        - time
        - stake_address
        - epoch
        - block
        - tx_hash
        - pool_id
      properties:
        type:
          type: string
          description: delegation
          example: delegation
        time:
          type: string
          description: Date of the delegation on a pool based on the block.
          format: date-time
          example: '2021-01-03T21:49:34Z'
        stake_address:
          type: string
          description: Stake address
          example: stake1u84uqy85qpsln9a49dtv7mrzzp0246v7s2cj7ypjr555ldqenardf
        epoch:
          type: integer
          description: Epoch number
          example: 239
        block:
          type: integer
          description: Block number
          example: 5162844
        tx_hash:
          type: string
          description: Transaction hash
          example: 052306cc8ded7adee92ccd9e10e31c8352f568408eb1868cf3ca751d67695dc8
        pool_id:
          type: string
          description: The pool receiving the delegation.
          example: pool1q0a7a94cfk4ph7gugj636tsuhhd98l2sfjv2adhaff2mvs7kmtl
    ADAOperationWithdrawal:
      type: object
      required:
        - type
        - time
        - stake_address
        - epoch
        - block
        - tx_hash
        - amount
      properties:
        type:
          type: string
          description: withdrawal
          example: withdrawal
        time:
          type: string
          description: Date of the withdrawal based on the block.
          format: date-time
          example: '2021-01-03T21:49:34Z'
        stake_address:
          type: string
          description: Stake address
          example: stake1u84uqy85qpsln9a49dtv7mrzzp0246v7s2cj7ypjr555ldqenardf
        epoch:
          type: integer
          description: Epoch number
          example: 239
        block:
          type: integer
          description: Block number
          example: 5162844
        tx_hash:
          type: string
          description: Transaction hash
          example: 052306cc8ded7adee92ccd9e10e31c8352f568408eb1868cf3ca751d67695dc8
        amount:
          type: string
          description: Amount in Lovelace
          example: '305914672095'
    ADAOperationReward:
      type: object
      required:
        - type
        - time
        - stake_address
        - epoch
        - pool_id
        - amount
      properties:
        type:
          type: string
          description: reward
          example: reward
        time:
          type: string
          description: Date the rewards were earned on. It is the earned epoch end date.
          format: date-time
          example: '2021-01-03T21:49:34Z'
        stake_address:
          type: string
          description: Stake address
          example: stake1u84uqy85qpsln9a49dtv7mrzzp0246v7s2cj7ypjr555ldqenardf
        epoch:
          type: integer
          description: Earned epoch number
          example: 239
        pool_id:
          type: string
          description: Pool the rewards come from.
          example: pool1q0a7a94cfk4ph7gugj636tsuhhd98l2sfjv2adhaff2mvs7kmtl
        amount:
          type: string
          description: Amount in Lovelace
          example: '305914672095'
    ADANetworkStats:
      type: object
      required:
        - ada_price_usd
        - nb_validators
        - network_gross_apy
        - supply_staked_percent
        - inflation_rate
        - updated_at
      properties:
        ada_price_usd:
          type: number
          description: Price of ADA in USD
          example: 0.29
        nb_validators:
          type: number
          description: Number of active validators
          example: 3068
        network_gross_apy:
          type: number
          description: Gross annual percentage yield
          example: 3.3
        supply_staked_percent:
          type: number
          description: Percentage of ADA being staked
          example: 62.24
        inflation_rate:
          type: number
          description: ADA inflation rate
          example: 0.3
        updated_at:
          type: string
          description: Last date this data was updated
          format: date-time
          example: '2023-08-09T11:41:36Z'
    BBNUnsignedTx:
      type: object
      required:
        - unsigned_tx_serialized
      properties:
        unsigned_tx_serialized:
          type: string
          description: Unsigned serialized transaction
          example: 70736274ff0100cf02000000016b5253d7d86352e1d3f1eba7a1ebf6216477e4a945d1b879833eb10a3a60653e0200000000fdffffff0350c3000000000000225120b712455a29769599d30a5b589cfea040ca2a5f3b22c403d26667664a442cedfd0000000000000000496a476262623400bb37a6d29e7fc8eb6726243c08a0f85d431602ddcd669bf33c74ec85ee8f42b6053107172a3d5a2715754cd5793efdcf5e54364b855ed2305819e372aa685d7600964aca090000000000160014d21aac5179517528f2f158769086c50ea90c73db000000000001011f5b940a0000000000160014d21aac5179517528f2f158769086c50ea90c73db00000000
    BBNBroadcastTxPayload:
      type: object
      required:
        - tx_serialized
      properties:
        account_id:
          type: string
          description: Kiln Account ID
          example: 92f5bfd4-ea38-4824-84f7-686eddff5539
        tx_serialized:
          type: string
          example: 0300000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000063b2b5ef76d483b695bc3b954d9a372ca5f744e00279c8578bc4268d570b701a037fac575ae16bb3ba5702b8d5bd9930953453e2d628368f83a11ab5896d20bbcae0b4a119860afd99da20f3462ba15d8bd1528d73724b83e8cc4cee00787df28a181783c264113ef1870bae5a90987fc5cfcdffaddf23c7dcfd7585c13d10b0301080c373c6f8e84c6822a9f87035f65cccf899eef3fcdee61077041a93e1805bab24e1bb5f70b4d3ae65feb6d20587f62ccc8d5e720e99abe3d4415972bbf74a8a88a51f5f3871e65b84cc393458d0f23a413184cf2bb7093ae4e2c99d55b39a575c5f98e3135fcb53e71e6fafcb4da3a3cc36af1c76a1a7e72aa12eae1346d724c6c00000000000000000000000000000000000000000000000000000000000000004792650d1e9a4fe99721617c7d47c8712c14c20a76bf043368c6528c9090531a06a1d8179137542a983437bdfe2a7ab2557f535c8a78722b68a49dc00000000006a1d817a502050b680791e6ce6db88e1e5b7150f61fc6790a4eb4d10000000006a7d51718c774c928566398691d5eb68b5eb8a39b4b6d5c73555b210000000006a7d517192c568ee08a845f73d29788cf035c3145b21ab344d8062ea940000006a7d517192c5c51218cc94c3d4af17f58daee089ba1fd44e3dbd98a0000000006a7d517193584d0feed9bb3431d13206be544281b57b8566cc5375ff4000000f0973e76495f3ffc65798a529de5cba4ec7f47f17669c9fa256923f099a1cda304040303090204040000000402000134000000000080c6a47e8d0300c80000000000000006a1d8179137542a983437bdfe2a7ab2557f535c8a78722b68a49dc0000000000602010a7400000000373c6f8e84c6822a9f87035f65cccf899eef3fcdee61077041a93e1805bab24e373c6f8e84c6822a9f87035f65cccf899eef3fcdee61077041a93e1805bab24e00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000006060105080b07000402000000
          description: Signed serialized transaction
    BBNPostStakesPayload:
      type: object
      required:
        - stakes
        - account_id
      properties:
        stakes:
          type: array
          items:
            type: object
            required:
              - tx_id
            properties:
              tx_id:
                type: string
                description: Transaction id of the stake
                example: 2e2127d3697df687b73367c1877fbb3e336d85d5068b822ba9c78a020b00bd88
        account_id:
          type: string
          description: Kiln Account ID
          example: 92f5bfd4-ea38-4824-84f7-686eddff5539
    BBNCraftStakeTxPayload:
      type: object
      required:
        - account_id
        - amount_satoshi
        - time_lock
        - public_key
        - fee_rate
      properties:
        account_id:
          type: string
          example: b7177fd2-fbb3-479f-aa92-db9fb16e229f
          format: uuid
          description: Kiln Account ID to stake into
        public_key:
          type: string
          example: 03bb37a6d29e7fc8eb6726243c08a0f85d431602ddcd669bf33c74ec85ee8f42b6
          description: Wallet public key in compressed 33 bytes format
        amount_satoshi:
          type: integer
          example: 100000
          description: Amount of BTC to lock up in satoshi unit
        time_lock:
          type: integer
          example: 150
          description: Amount of blocks your BTC will remain locked
        fee_rate:
          type: integer
          example: 10
          description: Fee rate for the transaction, in satoshi per byte
    BBNTxHash:
      type: object
      required:
        - tx_id
      properties:
        tx_id:
          type: string
          description: Transaction id
          example: 2e2127d3697df687b73367c1877fbb3e336d85d5068b822ba9c78a020b00bd88
    BBNStake:
      type: object
      required:
        - status
        - staking_tx
        - staker
        - amount
        - finality_provider
        - lock_time
        - activated_at
        - points
      properties:
        status:
          type: string
          description: The status of the stake
          example: status
        staking_tx:
          type: string
          description: The id/hash of the transaction
          example: 2e2127d3697df687b73367c1877fbb3e336d85d5068b822ba9c78a020b00bd88
        staker:
          type: string
          description: The address of the staker
          example: bc1q6gd2c5te296j3uh3tpmfppk9p65scu7m53kx93
        amount:
          type: integer
          description: The amount of the stake in satoshis
          example: 50000
        finality_provider:
          type: string
          description: The public key of the finality provider
          example: 053107172a3d5a2715754cd5793efdcf5e54364b855ed2305819e372aa685d76
        lock_time:
          type: integer
          description: The amount of block for which the stake is blocked
          example: 150
        activated_at:
          type: string
          description: The timestamp of when the stake was activated_at
          example: '2024-12-05T15:36:36+00:00'
        points:
          type: number
          description: The amount of points the stake as earned
          example: 15
    MATICStake:
      type: object
      properties:
        delegator_address:
          type: string
          description: Public key owning shares of a validator
          example: '0xe1f4acc0affB36a805474e3b6ab786738C6900A2'
        validator_index:
          type: integer
          minimum: 1
          description: Validator's index
          example: '1'
        state:
          type: string
          description: State of the MATIC stake
          example: active
          enum:
            - active
            - unstaked
        delegated_block:
          description: Block at which the corresponding staking transaction was executed
          nullable: true
          type: integer
          example: 6307582
        delegated_at:
          type: string
          description: Date of staking transaction on the Ethereum consensus layer
          nullable: true
          format: date-time
          example: '2022-02-02T08:31:07Z'
        balance:
          type: string
          description: Current balance in WEI of the stake
          nullable: true
          example: '11364372934211323407387'
        shares:
          type: string
          description: Amount of validator shares owned by the stake
          nullable: true
          example: '126664878892234995894'
        unbounded_balance:
          type: string
          nullable: true
          description: Balance in wei waiting to be withdrawn
          example: '11364372934211323407387'
        unbounded_epoch:
          type: number
          nullable: true
          description: Epoch at which the withdrawn was requested
          example: 8
        is_unbounding_complete:
          type: boolean
          nullable: true
          description: Whether the withdrawal delay since unbounded_epoch has passed
          example: true
        rewards:
          type: string
          description: Sum of all rewards in WEI earned by this stake
          nullable: true
          example: '689020902235393456944'
        net_apy:
          type: number
          description: Net annual percentage yield
          nullable: true
          example: 4.066307880973232
        available_rewards:
          type: string
          description: Available rewards in WEI that can be withdrawn from this stake
          nullable: true
          example: '659936623311645699'
        updated_at:
          type: string
          description: Last date this data was updated
          nullable: true
          format: date-time
          example: '2023-07-31T13:56:58Z'
        unbounds_with_id:
          description: unbounds, created via sellVoucher_new, currently active on the stakes. ignored if no unbounds are returned
          type: array
          nullable: true
          items:
            type: object
            properties:
              nonce:
                type: number
                description: id of the unbound
                example: 1
              balance:
                type: string
                description: Balance in wei waiting to be withdrawn
                example: '11364372934211323407387'
              epoch:
                type: number
                description: Epoch at which the withdrawn was requested
                example: 8
              is_complete:
                type: boolean
                description: Whether the withdrawal delay since unbounded_epoch has passed
                example: true
    MATICReward:
      type: object
      properties:
        date:
          type: string
          description: Day for this reward entry
          format: date
          example: '2023-01-15'
        rewards:
          type: string
          description: Accumulated rewards in WEI during the day
          example: '2988504000000000'
        active_balance:
          type: string
          description: Staked balance in WEI that contributed to this rewards
          example: '64000000000000000000'
        net_apy:
          type: number
          description: Gross annual percentage yield
          example: 3.407
        rewards_usd:
          type: number
          description: Estimated value of rewards generated for that day in USD. The exchange rate is the rate at the end of the day provided by CoinGeckko.
        stake_balance_usd:
          type: number
          description: Estimated value of the staked balance at the beginning of the day in USD. The exchange rate is the rate at the end of the day provided by CoinGeckko.
    MATICOperationShareMinted:
      type: object
      properties:
        type:
          type: string
          description: |-
            Event emitted by a ValidatorShare contract when minting new shares.
            This can happen through the buyVoucher, restake and migrateIn methods.
          example: share_minted
        block:
          type: integer
          description: Block number containing the transaction
          example: 15955054
        time:
          type: string
          description: Timestamp of the block
          format: date-time
          example: '2023-07-31T13:56:58Z'
        tx_hash:
          type: string
          description: Hash of the transaction
          example: '0x43244f90814b31dec250de24df5bb023a338790c1d5a39244cf1064cf6d98c94'
        tx_index:
          type: integer
          description: Hash of the transaction
          example: 1
        tx_sender:
          type: string
          description: Address of the sender of the transaction
          example: '0x41bf25fc8c52d292bd66d3bcecd8a919ecb9ef88'
        tx_method_name:
          type: string
          nullable: true
          description: Name of the contract method executed by the transaction
          example: buyVoucher
        tx_gas_used:
          type: string
          description: Gas used by the transaction in WEI
          example: '2700999916653262'
        tx_effective_gas_price:
          type: string
          nullable: true
          description: Effective gas price used for this TX in WEI
          example: '1499997889'
        tx_cumulative_gas_used:
          type: string
          nullable: true
          description: Cumulative gas used for this TX in WEI
          example: '1499997889'
        validator_id:
          type: integer
          description: Index of the validator recipient of the delegation
          example: 1
        user:
          type: string
          description: Address receiving the shares
          example: '0xa'
        amount:
          type: string
          description: Amount in WEI deposited by the user
          example: '300000000'
        tokens:
          type: string
          description: Amount of shares received
          example: '300000000'
    MATICOperationShareBurned:
      type: object
      properties:
        type:
          type: string
          example: share_burned
          description: |-
            Event emitted by a ValidatorShare contract when burning shares.
            This can happen through the sellVoucher and migrateOut methods.
        block:
          type: integer
          description: Block number containing the transaction
          example: 15955054
        time:
          type: string
          description: Timestamp of the block
          format: date-time
          example: '2023-07-31T13:56:58Z'
        tx_hash:
          type: string
          description: Hash of the transaction
          example: '0x43244f90814b31dec250de24df5bb023a338790c1d5a39244cf1064cf6d98c94'
        tx_index:
          type: integer
          description: Hash of the transaction
          example: 1
        tx_sender:
          type: string
          description: Address of the sender of the transaction
          example: '0x41bf25fc8c52d292bd66d3bcecd8a919ecb9ef88'
        tx_method_name:
          type: string
          nullable: true
          description: Name of the contract method executed by the transaction
          example: buyVoucher
        tx_gas_used:
          type: string
          description: Gas used by the transaction in WEI
          example: '2700999916653262'
        tx_effective_gas_price:
          type: string
          nullable: true
          description: Effective gas price used for this TX in WEI
          example: '1499997889'
        tx_cumulative_gas_used:
          type: string
          nullable: true
          description: Cumulative gas used for this TX in WEI
          example: '1499997889'
        validator_id:
          type: integer
          description: Index of the validator reducing its shares
          example: 1
        user:
          type: string
          description: Address burning the shares
          example: '0xa'
        amount:
          type: string
          description: Amount in WEI retrieved by the user
          example: '300000000'
        tokens:
          type: string
          description: Amount of shares burnt
          example: '300000000'
    MATICOperationShareBurnedWithID:
      type: object
      properties:
        type:
          type: string
          description: |-
            Event emitted by a ValidatorShare contract when burning shares.
            This can happen through the sellVoucher_new method.
          example: share_burned
        block:
          type: integer
          description: Block number containing the transaction
          example: 15955054
        time:
          type: string
          description: Timestamp of the block
          format: date-time
          example: '2023-07-31T13:56:58Z'
        tx_hash:
          type: string
          description: Hash of the transaction
          example: '0x43244f90814b31dec250de24df5bb023a338790c1d5a39244cf1064cf6d98c94'
        tx_index:
          type: integer
          description: Hash of the transaction
          example: 1
        tx_sender:
          type: string
          description: Address of the sender of the transaction
          example: '0x41bf25fc8c52d292bd66d3bcecd8a919ecb9ef88'
        tx_method_name:
          type: string
          nullable: true
          description: Name of the contract method executed by the transaction
          example: buyVoucher
        tx_gas_used:
          type: string
          description: Gas used by the transaction in WEI
          example: '2700999916653262'
        tx_effective_gas_price:
          type: string
          nullable: true
          description: Effective gas price used for this TX in WEI
          example: '1499997889'
        tx_cumulative_gas_used:
          type: string
          nullable: true
          description: Cumulative gas used for this TX in WEI
          example: '1499997889'
        validator_id:
          type: integer
          description: Index of the validator reducing its shares
          example: 1
        user:
          type: string
          description: Address burning the shares
          example: '0xa'
        amount:
          type: string
          description: Amount in WEI retrieved by the user
          example: '300000000'
        tokens:
          type: string
          description: Amount of shares burnt
          example: '300000000'
        nonce:
          type: integer
          description: Id of the event, matching a DelegatorUnstakedWithID
          example: 1
    MATICOperationDelegatorRestaked:
      type: object
      properties:
        type:
          type: string
          description: |-
            Event emitted by a ValidatorShare contract when one of its delegators restake its rewards.
            This can happen through the restake method.
            It is important to note that this event only shows how much matic the delegator has delegated in total, it doesn't show how many rewards were restaked.
          example: delegator_restaked
        block:
          type: integer
          description: Block number containing the transaction
          example: 15955054
        time:
          type: string
          description: Timestamp of the block
          format: date-time
          example: '2023-07-31T13:56:58Z'
        tx_hash:
          type: string
          description: Hash of the transaction
          example: '0x43244f90814b31dec250de24df5bb023a338790c1d5a39244cf1064cf6d98c94'
        tx_index:
          type: integer
          description: Hash of the transaction
          example: 1
        tx_sender:
          type: string
          description: Address of the sender of the transaction
          example: '0x41bf25fc8c52d292bd66d3bcecd8a919ecb9ef88'
        tx_method_name:
          type: string
          nullable: true
          description: Name of the contract method executed by the transaction
          example: buyVoucher
        tx_gas_used:
          type: string
          description: Gas used by the transaction in WEI
          example: '2700999916653262'
        tx_effective_gas_price:
          type: string
          nullable: true
          description: Effective gas price used for this TX in WEI
          example: '1499997889'
        tx_cumulative_gas_used:
          type: string
          nullable: true
          description: Cumulative gas used for this TX in WEI
          example: '1499997889'
        validator_id:
          type: integer
          description: Index of the validator recipient of the re-delegation
          example: 1
        user:
          type: string
          description: Address re-delegating
          example: '0xa'
        total_staked:
          type: string
          description: Total amount of WEI staked
          example: '300000000'
    MATICOperationDelegatorUnstaked:
      type: object
      properties:
        type:
          type: string
          description: |-
            Event emitted by a ValidatorShare contract when one of its delegators unstake MATIC for which shares were burned previously.
            This can happen through the unstakeClaimTokens and migrateOut methods.
          example: delegator_unstaked
        block:
          type: integer
          description: Block number containing the transaction
          example: 15955054
        time:
          type: string
          description: Timestamp of the block
          format: date-time
          example: '2023-07-31T13:56:58Z'
        tx_hash:
          type: string
          description: Hash of the transaction
          example: '0x43244f90814b31dec250de24df5bb023a338790c1d5a39244cf1064cf6d98c94'
        tx_index:
          type: integer
          description: Hash of the transaction
          example: 1
        tx_sender:
          type: string
          description: Address of the sender of the transaction
          example: '0x41bf25fc8c52d292bd66d3bcecd8a919ecb9ef88'
        tx_method_name:
          type: string
          nullable: true
          description: Name of the contract method executed by the transaction
          example: buyVoucher
        tx_gas_used:
          type: string
          description: Gas used by the transaction in WEI
          example: '2700999916653262'
        tx_effective_gas_price:
          type: string
          nullable: true
          description: Effective gas price used for this TX in WEI
          example: '1499997889'
        tx_cumulative_gas_used:
          type: string
          nullable: true
          description: Cumulative gas used for this TX in WEI
          example: '1499997889'
        validator_id:
          type: integer
          description: Index of the validator from which the user is unstaking
          example: 1
        user:
          type: string
          description: Address unstaking
          example: '0xa'
        amount:
          type: string
          description: Amount of WEI unstaked
          example: '300000000'
    MATICOperationDelegatorUnstakedWithID:
      type: object
      properties:
        type:
          type: string
          description: |-
            Event emitted by a ValidatorShare contract when one of its delegators unstake MATIC for which shares were burned previously.
            This can happen through the unstakeClaimTokens_new.
          example: delegator_unstaked
        block:
          type: integer
          description: Block number containing the transaction
          example: 15955054
        time:
          type: string
          description: Timestamp of the block
          format: date-time
          example: '2023-07-31T13:56:58Z'
        tx_hash:
          type: string
          description: Hash of the transaction
          example: '0x43244f90814b31dec250de24df5bb023a338790c1d5a39244cf1064cf6d98c94'
        tx_index:
          type: integer
          description: Hash of the transaction
          example: 1
        tx_sender:
          type: string
          description: Address of the sender of the transaction
          example: '0x41bf25fc8c52d292bd66d3bcecd8a919ecb9ef88'
        tx_method_name:
          type: string
          nullable: true
          description: Name of the contract method executed by the transaction
          example: buyVoucher
        tx_gas_used:
          type: string
          description: Gas used by the transaction in WEI
          example: '2700999916653262'
        tx_effective_gas_price:
          type: string
          nullable: true
          description: Effective gas price used for this TX in WEI
          example: '1499997889'
        tx_cumulative_gas_used:
          type: string
          nullable: true
          description: Cumulative gas used for this TX in WEI
          example: '1499997889'
        validator_id:
          type: integer
          description: Index of the validator from which the user is unstaking
          example: 1
        user:
          type: string
          description: Address unstaking
          example: '0xa'
        amount:
          type: string
          description: Amount of WEI unstaked
          example: '300000000'
        nonce:
          type: integer
          description: Id of the event, matching a ShareBurnedWithID
          example: 1
    MATICOperationDelegatorClaimedRewards:
      type: object
      properties:
        type:
          type: string
          description: |-
            Event emitted by a ValidatorShare contract when one of its delegators withdraw its rewards.
            This can happen through most interactions with the contract when the delegators has enough rewards.
          example: delegator_claimed_rewards
        block:
          type: integer
          description: Block number containing the transaction
          example: 15955054
        time:
          type: string
          description: Timestamp of the block
          format: date-time
          example: '2023-07-31T13:56:58Z'
        tx_hash:
          type: string
          description: Hash of the transaction
          example: '0x43244f90814b31dec250de24df5bb023a338790c1d5a39244cf1064cf6d98c94'
        tx_index:
          type: integer
          description: Hash of the transaction
          example: 1
        tx_method_name:
          type: string
          nullable: true
          description: Name of the contract method executed by the transaction
          example: buyVoucher
        tx_sender:
          type: string
          description: Address of the sender of the transaction
          example: '0x41bf25fc8c52d292bd66d3bcecd8a919ecb9ef88'
        tx_gas_used:
          type: string
          description: Gas used by the transaction in WEI
          example: '2700999916653262'
        tx_effective_gas_price:
          type: string
          nullable: true
          description: Effective gas price used for this TX in WEI
          example: '1499997889'
        tx_cumulative_gas_used:
          type: string
          nullable: true
          description: Cumulative gas used for this TX in WEI
          example: '1499997889'
        validator_id:
          type: integer
          description: Index of the validator from which the user claims its rewards
          example: 1
        user:
          type: string
          description: Address claiming its rewards
          example: '0xa'
        rewards:
          type: string
          description: Amount claimed in WEI
          example: '300000000'
    MATICOperationSharesTransfer:
      type: object
      properties:
        type:
          type: string
          description: |-
            Event emitted by a ValidatorShare contract when one of its delegators transfers its shares to another address.
            This can happen through the transfer method.
          example: delegator_claimed_rewards
        block:
          type: integer
          description: Block number containing the transaction
          example: 15955054
        time:
          type: string
          description: Timestamp of the block
          format: date-time
          example: '2023-07-31T13:56:58Z'
        tx_hash:
          type: string
          description: Hash of the transaction
          example: '0x43244f90814b31dec250de24df5bb023a338790c1d5a39244cf1064cf6d98c94'
        tx_index:
          type: integer
          description: Hash of the transaction
          example: 1
        tx_sender:
          type: string
          description: Address of the sender of the transaction
          example: '0x41bf25fc8c52d292bd66d3bcecd8a919ecb9ef88'
        tx_method_name:
          type: string
          nullable: true
          description: Name of the contract method executed by the transaction
          example: buyVoucher
        tx_gas_used:
          type: string
          description: Gas used by the transaction in WEI
          example: '2700999916653262'
        tx_effective_gas_price:
          type: string
          nullable: true
          description: Effective gas price used for this TX in WEI
          example: '1499997889'
        tx_cumulative_gas_used:
          type: string
          nullable: true
          description: Cumulative gas used for this TX in WEI
          example: '1499997889'
        validator_id:
          type: integer
          description: Index of the validator from which the user claims its rewards
          example: 1
        from:
          type: string
          description: Address transfering the shares
          example: '0xa'
        to:
          type: string
          description: Address receiving the shares
          example: '0xa'
        value:
          type: string
          description: Amount in WEI
          example: '300000000'
    MATICNetworkStats:
      type: object
      required:
        - matic_price_usd
        - nb_validators
        - network_gross_apy
        - supply_staked_percent
        - inflation_rate
        - updated_at
      properties:
        matic_price_usd:
          type: number
          description: MATIC price in USD
          example: 0.84
        nb_validators:
          type: integer
          description: Size of Polygon's active set
          example: 100
        network_gross_apy:
          type: number
          description: Gross annual percentage yield
          example: 4.5
        supply_staked_percent:
          type: number
          description: Percentage of MATIC being staked
          example: 20.4
        inflation_rate:
          type: number
          description: MATIC inflation rate
          example: 2.5
        updated_at:
          type: string
          description: Last date this data was updated
          nullable: true
          format: date-time
          example: '2023-07-31T13:56:58Z'
    MATICPostStakesPayload:
      type: object
      required:
        - stakes
        - account_id
      properties:
        stakes:
          type: array
          items:
            type: object
            properties:
              stakeId:
                type: string
                description: Stake ID. Format is {validator_index}_{wallet_address}
                example: 1_0x9ce658155a6f05fe4aef83b7fa8f431d5e8ccb55
        account_id:
          type: string
          description: Kiln Account ID
          example: 92f5bfd4-ea38-4824-84f7-686eddff5539
    MATICCraftApproveTxPayload:
      type: object
      required:
        - wallet
        - contract
      properties:
        wallet:
          type: string
          example: '0xe1f4acc0affB36a805474e3b6ab786738C6900A2'
          description: Wallet address to approve
        contract:
          type: string
          example: '0xe1f4acc0affB36a805474e3b6ab786738C6900A2'
          description: Contract address that needs approval
        amount_wei:
          type: string
          example: '32000000000000000000'
          description: Optional amount to approve in WEI. If not specified, an infinite amount will be approved
    MATICUnsignedTx:
      required:
        - unsigned_tx_hash
        - unsigned_tx_serialized
        - to
        - contract_call_data
        - amount_wei
        - nonce
        - gas_limit
        - max_priority_fee_per_gas_wei
        - max_fee_per_gas_wei
        - chain_id
      type: object
      properties:
        unsigned_tx_hash:
          type: string
          description: Hash of the unsigned transaction
          example: '0x43244f90814b31dec250de24df5bb023a338790c1d5a39244cf1064cf6d98c94'
        unsigned_tx_serialized:
          type: string
          description: Unsigned serialized transaction
          example: '0x20a40259b763d549dfa1c082776a036dd8dabbe8b5e32ee721be017512dc'
        to:
          type: string
          description: Contract address of the transaction recipient
          example: '0x0d4a11d5eeaac28ec3f61d100daf4d40471f1852'
        contract_call_data:
          type: string
          description: Hex encoded contract data to be sent with the transaction
          example: '0xca0bfcce0000000000000000000000000000000000000000000000000000000000000080000000000000000000000000000000000000000000000000000000000000012000000000000000000000000000000000000000000000000000000000000001a000000000000000000000000000000000000000000000000000000000000002600000000000000000000000000000000000000000000000000000000000000001000000000000000000000000000000000000000000000000000000000000002000000000000000000000000000000000000000000000000000000000000000309696c02ec4dbb99f714e26ff1acdf6b258d36dcbad7b8b549553bc99b94ea639cd247f31683564995afd48568c1b6edd00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000100000000000000000000000000000000000000000000000000000000000000200000000000000000000000000000000000000000000000000000000000000020010000000000000000000000bc86717bad3f8ccf86d2882a6bc351c94580a994000000000000000000000000000000000000000000000000000000000000000100000000000000000000000000000000000000000000000000000000000000200000000000000000000000000000000000000000000000000000000000000060a3869da2ed5cc558f016d59fc5ceb0cac28e58743836aa3cf146221f1ef0b959e3cc5c589e05e171f1473596aadf36411767ad92edaae421ba0291bd7568267b3faabc3ab6ed9ddfc048ea6640370977f16f4f626a0e567a11ba25acdc520bb000000000000000000000000000000000000000000000000000000000000000012dd65914dda46639df6344701de54ac3ebe34a4b230262d3017fcd6c29954452'
        amount_wei:
          type: string
          nullable: true
          description: Amount of MATIC to send in wei
          example: '32000000000000000000'
        nonce:
          type: integer
          description: Nonce of the transaction
          example: 1
        gas_limit:
          type: integer
          description: Gas limit of the transaction in gas units. We provide a default value of two times the estimated gas limit
          example: 140244
        max_priority_fee_per_gas_wei:
          type: string
          description: Max priority fee per gas in wei. This is basically the miner fee. We provide a default value of 2 gwei so transactions are mined faster.
          example: '2000000000'
        max_fee_per_gas_wei:
          type: string
          description: Max fee per gas in wei. This is the maximum amount of gas that you are willing to pay for the transaction.
          example: '383687469748'
        chain_id:
          type: integer
          description: Chain ID of the network
          example: 1
    MATICCraftBuyVoucherTxPayload:
      type: object
      required:
        - account_id
        - wallet
        - amount_wei
        - validator_share_proxy_address
      properties:
        account_id:
          type: string
          format: uuid
          example: b7177fd2-fbb3-479f-aa92-db9fb16e229f
          description: Kiln Account ID to stake into
        wallet:
          type: string
          example: '0xe1f4acc0affB36a805474e3b6ab786738C6900A2'
          description: Wallet address
        amount_wei:
          type: string
          example: '32000000000000000000'
          description: Amount of MATIC to stake in WEI
        validator_share_proxy_address:
          type: string
          example: '0xD14a87025109013B0a2354a775cB335F926Af65A'
          description: Contract address of the validator share proxy contract
    MATICCraftSellVoucherTxPayload:
      type: object
      required:
        - wallet
        - amount_wei
        - validator_share_proxy_address
      properties:
        wallet:
          type: string
          example: '0xe1f4acc0affB36a805474e3b6ab786738C6900A2'
          description: Wallet address
        amount_wei:
          type: string
          example: '32000000000000000000'
          description: Amount of MATIC to sell in WEI
        validator_share_proxy_address:
          type: string
          example: '0xD14a87025109013B0a2354a775cB335F926Af65A'
          description: Contract address of the validator share proxy contract
    MATICCraftUnstakeClaimTokensTxPayload:
      type: object
      required:
        - wallet
        - validator_share_proxy_address
      properties:
        wallet:
          type: string
          example: '0xe1f4acc0affB36a805474e3b6ab786738C6900A2'
          description: Wallet address
        validator_share_proxy_address:
          type: string
          example: '0xD14a87025109013B0a2354a775cB335F926Af65A'
          description: Contract address of the validator share proxy contract
    MATICCraftWithdrawRewardsTxPayload:
      type: object
      required:
        - wallet
        - validator_share_proxy_address
      properties:
        wallet:
          type: string
          example: '0xe1f4acc0affB36a805474e3b6ab786738C6900A2'
          description: Wallet address
        validator_share_proxy_address:
          type: string
          example: '0xD14a87025109013B0a2354a775cB335F926Af65A'
          description: Contract address of the validator share proxy contract
    MATICCraftRestakeRewardsTxPayload:
      type: object
      required:
        - wallet
        - validator_share_proxy_address
      properties:
        wallet:
          type: string
          example: '0xe1f4acc0affB36a805474e3b6ab786738C6900A2'
          description: Wallet address
        validator_share_proxy_address:
          type: string
          example: '0xD14a87025109013B0a2354a775cB335F926Af65A'
          description: Contract address of the validator share proxy contract
    MATICPrepareTxPayload:
      type: object
      required:
        - unsigned_tx_serialized
        - r
        - s
        - v
      properties:
        unsigned_tx_serialized:
          type: string
          description: Unsigned serialized transaction
          example: '0x20a40259b763d549dfa1c082776a036dd8dabbe8b5e32ee721be017512dc'
        r:
          type: string
          description: r part of the ECDSA signature in hex
          example: de28e9efee4c8de422a3c64bfaaee11a32f7cf12bdd3f00dcce41a79fe776c65
        s:
          type: string
          description: s part of the ECDSA signature in hex
          example: 3f233eb69495fa4741ad28ef0ba40612bacaf08331fd76041c371f5a2ecc2ab5
        v:
          type: number
          description: v part of the ECDSA signature (0 or 1)
          example: 0
    MATICTxStatus:
      type: object
      properties:
        status:
          type: string
          enum:
            - success
            - error
            - pending_confirmation
          description: Transaction status
          example: success
        receipt:
          type: object
          description: Transaction receipt. Object shape can be found [here](https://github.com/web3/web3.js/blob/c5072a35996eb232e2742e92b612c07ba7af98ab/packages/web3-types/src/eth_types.ts#L299)
          example:
            blockHash: '0x54a0603e3f39e5d358623c8cd86a628a2999c993c1bdd6e547c45632784bd1d7'
            blockNumber: 8608123
            contractAddress: null
            cumulativeGasUsed: 8180146
            effectiveGasPrice: 27391741855
            from: '0x9ce658155a6f05fe4aef83b7fa8f431d5e8ccb55'
            gasUsed: 70098
            logs:
              - address: '0xff50ed3d0ec03aC01D4C79aAd74928BFF48a7b2b'
                blockHash: '0x54a0603e3f39e5d358623c8cd86a628a2999c993c1bdd6e547c45632784bd1d7'
                blockNumber: 8608123
                data: '0x00000000000000000000000000000000000000000000000000000000000000a00000000000000000000000000000000000000000000000000000000000000100000000000000000000000000000000000000000000000000000000000000014000000000000000000000000000000000000000000000000000000000000001800000000000000000000000000000000000000000000000000000000000000200000000000000000000000000000000000000000000000000000000000000003093b5ae8053213154d099ed7fc99f571a0c8124601f8a59540335c7c35e0b40aad7b033f84af365185c04812acab257460000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000200100000000000000000000009ce658155a6f05fe4aef83b7fa8f431d5e8ccb550000000000000000000000000000000000000000000000000000000000000008004059730700000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000609395a07d5e7eb073725049ecba8144d850b7a1a58f603fd1fc12049d32c98db47e3d81608074bca20ccdcc94f7f4767d0d6b852edf4f6231532f33242e64d0617ac93465bc4cdabe9cebf0abe6d169830fcf375b28c0641487e5f86df2875a970000000000000000000000000000000000000000000000000000000000000008ecce030000000000000000000000000000000000000000000000000000000000'
                logIndex: 150
                removed: false
                topics:
                  - '0x649bbc62d0e31342afea4e5cd82d4049e7e1ee912fc0889aa790803be39038c5'
                transactionHash: '0x25f259a770539a4be99f972620b74219d67cd990d245bcc8d8ad5cddeaa37375'
                transactionIndex: 33
                id: log_4115d183
              - address: '0x5FaDfdb7eFffd3B4AA03f0F29d9200Cf5F191F31'
                blockHash: '0x54a0603e3f39e5d358623c8cd86a628a2999c993c1bdd6e547c45632784bd1d7'
                blockNumber: 8608123
                data: '0x000000000000000000000000000000000000000000000000000000000000004000000000000000000000000000000000000000000000000000000000000000a0000000000000000000000000000000000000000000000000000000000000003093b5ae8053213154d099ed7fc99f571a0c8124601f8a59540335c7c35e0b40aad7b033f84af365185c04812acab257460000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000200100000000000000000000009ce658155a6f05fe4aef83b7fa8f431d5e8ccb55'
                logIndex: 151
                removed: false
                topics:
                  - '0x737feedde71ce80c08f73125e4350b001be2dfb6a00fb455086c2b0a514cdfac'
                transactionHash: '0x25f259a770539a4be99f972620b74219d67cd990d245bcc8d8ad5cddeaa37375'
                transactionIndex: 33
                id: log_b4bb5ff7
            logsBloom: '0x
            status: true
            to: '0x5fadfdb7efffd3b4aa03f0f29d9200cf5f191f31'
            transactionHash: '0x25f259a770539a4be99f972620b74219d67cd990d245bcc8d8ad5cddeaa37375'
            transactionIndex: 33
            type: '0x2'
    MATICSignedTx:
      type: object
      required:
        - signed_tx_serialized
      properties:
        signed_tx_serialized:
          type: string
          description: Signed serialized transaction
          example: '0x20a40259b763d549dfa1c082776a036dd8dabbe8b5e32ee721be017512dc'
    MATICBroadcastTxPayload:
      type: object
      required:
        - tx_serialized
      properties:
        tx_serialized:
          type: string
          description: Signed serialized transaction
          example: '0x20a40259b763d549dfa1c082776a036dd8dabbe8b5e32ee721be017512dc'
    MATICBroadcastedTx:
      type: object
      properties:
        tx_hash:
          type: string
          description: Hash of the transaction
          example: '0x43244f90814b31dec250de24df5bb023a338790c1d5a39244cf1064cf6d98c94'
    POLStake:
      type: object
      required:
        - delegator_address
        - validator_index
        - state
        - delegated_block
        - delegated_at
        - balance
        - shares
        - updated_at
      properties:
        delegator_address:
          type: string
          description: Public key owning shares of a validator
          example: '0xe1f4acc0affB36a805474e3b6ab786738C6900A2'
        validator_index:
          type: integer
          minimum: 1
          description: Validator's index
          example: '1'
        state:
          type: string
          description: State of the POL stake
          example: active
          enum:
            - active
            - unstaked
        delegated_block:
          description: Block at which the corresponding staking transaction was executed
          type: integer
          example: 6307582
        delegated_at:
          type: string
          description: Date of staking transaction on the Ethereum consensus layer
          format: date-time
          example: '2022-02-02T08:31:07Z'
        balance:
          type: string
          description: Current balance in WEI of the stake
          example: '11364372934211323407387'
        shares:
          type: string
          description: Amount of validator shares owned by the stake
          example: '126664878892234995894'
        unbounded_balance:
          type: string
          description: Balance in wei waiting to be withdrawn
          example: '11364372934211323407387'
        unbounded_epoch:
          type: number
          description: Epoch at which the withdrawn was requested
          example: 8
        is_unbounding_complete:
          type: boolean
          description: Whether the withdrawal delay since unbounded_epoch has passed
          example: true
        rewards:
          type: string
          description: Sum of all rewards in WEI earned by this stake
          example: '689020902235393456944'
        net_apy:
          type: number
          description: Net annual percentage yield
          example: 4.066307880973232
        available_rewards:
          type: string
          description: Available rewards in WEI that can be withdrawn from this stake
          example: '659936623311645699'
        updated_at:
          type: string
          description: Last date this data was updated
          format: date-time
          example: '2023-07-31T13:56:58Z'
        unbounds_with_id:
          description: unbounds, created via sellVoucher_new, currently active on the stakes. ignored if no unbounds are returned
          type: array
          items:
            type: object
            required:
              - nonce
              - balance
              - epoch
              - is_complete
            properties:
              nonce:
                type: number
                description: id of the unbound
                example: 1
              balance:
                type: string
                description: Balance in wei waiting to be withdrawn
                example: '11364372934211323407387'
              epoch:
                type: number
                description: Epoch at which the withdrawn was requested
                example: 8
              is_complete:
                type: boolean
                description: Whether the withdrawal delay since unbounded_epoch has passed
                example: true
    POLReward:
      type: object
      required:
        - date
        - rewards
        - active_balance
        - net_apy
      properties:
        date:
          type: string
          description: Day for this reward entry
          format: date
          example: '2023-01-15'
        rewards:
          type: string
          description: Accumulated rewards in WEI during the day
          example: '2988504000000000'
        active_balance:
          type: string
          description: Staked balance in WEI that contributed to this rewards
          example: '64000000000000000000'
        net_apy:
          type: number
          description: Gross annual percentage yield
          example: 3.407
        rewards_usd:
          type: number
          description: Estimated value of rewards generated for that day in USD. The exchange rate is the rate at the end of the day provided by CoinGeckko.
        active_balance_usd:
          type: number
          description: Estimated value of the staked balance at the beginning of the day in USD. The exchange rate is the rate at the end of the day provided by CoinGeckko.
    POLOperationShareMinted:
      type: object
      required:
        - type
        - block
        - time
        - tx_hash
        - tx_index
        - tx_sender
        - tx_gas_used
        - validator_id
        - user
        - amount
        - tokens
      properties:
        type:
          type: string
          description: |-
            Event emitted by a ValidatorShare contract when minting new shares.
            This can happen through the buyVoucher, restake and migrateIn methods.
          example: share_minted
        block:
          type: integer
          description: Block number containing the transaction
          example: 15955054
        time:
          type: string
          description: Timestamp of the block
          format: date-time
          example: '2023-07-31T13:56:58Z'
        tx_hash:
          type: string
          description: Hash of the transaction
          example: '0x43244f90814b31dec250de24df5bb023a338790c1d5a39244cf1064cf6d98c94'
        tx_index:
          type: integer
          description: Hash of the transaction
          example: 1
        tx_sender:
          type: string
          description: Address of the sender of the transaction
          example: '0x41bf25fc8c52d292bd66d3bcecd8a919ecb9ef88'
        tx_method_name:
          type: string
          description: Name of the contract method executed by the transaction
          example: buyVoucher
        tx_gas_used:
          type: string
          description: Gas used by the transaction in WEI
          example: '2700999916653262'
        tx_effective_gas_price:
          type: string
          description: Effective gas price used for this TX in WEI
          example: '1499997889'
        tx_cumulative_gas_used:
          type: string
          description: Cumulative gas used for this TX in WEI
          example: '1499997889'
        validator_id:
          type: integer
          description: Index of the validator recipient of the delegation
          example: 1
        user:
          type: string
          description: Address receiving the shares
          example: '0xa'
        amount:
          type: string
          description: Amount in WEI deposited by the user
          example: '300000000'
        tokens:
          type: string
          description: Amount of shares received
          example: '300000000'
    POLOperationShareBurned:
      type: object
      required:
        - type
        - block
        - time
        - tx_hash
        - tx_index
        - tx_sender
        - tx_gas_used
        - validator_id
        - user
        - amount
        - tokens
      properties:
        type:
          type: string
          example: share_burned
          description: |-
            Event emitted by a ValidatorShare contract when burning shares.
            This can happen through the sellVoucher and migrateOut methods.
        block:
          type: integer
          description: Block number containing the transaction
          example: 15955054
        time:
          type: string
          description: Timestamp of the block
          format: date-time
          example: '2023-07-31T13:56:58Z'
        tx_hash:
          type: string
          description: Hash of the transaction
          example: '0x43244f90814b31dec250de24df5bb023a338790c1d5a39244cf1064cf6d98c94'
        tx_index:
          type: integer
          description: Hash of the transaction
          example: 1
        tx_sender:
          type: string
          description: Address of the sender of the transaction
          example: '0x41bf25fc8c52d292bd66d3bcecd8a919ecb9ef88'
        tx_method_name:
          type: string
          description: Name of the contract method executed by the transaction
          example: buyVoucher
        tx_gas_used:
          type: string
          description: Gas used by the transaction in WEI
          example: '2700999916653262'
        tx_effective_gas_price:
          type: string
          description: Effective gas price used for this TX in WEI
          example: '1499997889'
        tx_cumulative_gas_used:
          type: string
          description: Cumulative gas used for this TX in WEI
          example: '1499997889'
        validator_id:
          type: integer
          description: Index of the validator reducing its shares
          example: 1
        user:
          type: string
          description: Address burning the shares
          example: '0xa'
        amount:
          type: string
          description: Amount in WEI retrieved by the user
          example: '300000000'
        tokens:
          type: string
          description: Amount of shares burnt
          example: '300000000'
    POLOperationShareBurnedWithID:
      type: object
      required:
        - type
        - block
        - time
        - tx_hash
        - tx_index
        - tx_sender
        - tx_gas_used
        - validator_id
        - user
        - amount
        - tokens
        - nonce
      properties:
        type:
          type: string
          description: |-
            Event emitted by a ValidatorShare contract when burning shares.
            This can happen through the sellVoucher_new method.
          example: share_burned
        block:
          type: integer
          description: Block number containing the transaction
          example: 15955054
        time:
          type: string
          description: Timestamp of the block
          format: date-time
          example: '2023-07-31T13:56:58Z'
        tx_hash:
          type: string
          description: Hash of the transaction
          example: '0x43244f90814b31dec250de24df5bb023a338790c1d5a39244cf1064cf6d98c94'
        tx_index:
          type: integer
          description: Hash of the transaction
          example: 1
        tx_sender:
          type: string
          description: Address of the sender of the transaction
          example: '0x41bf25fc8c52d292bd66d3bcecd8a919ecb9ef88'
        tx_method_name:
          type: string
          description: Name of the contract method executed by the transaction
          example: buyVoucher
        tx_gas_used:
          type: string
          description: Gas used by the transaction in WEI
          example: '2700999916653262'
        tx_effective_gas_price:
          type: string
          description: Effective gas price used for this TX in WEI
          example: '1499997889'
        tx_cumulative_gas_used:
          type: string
          description: Cumulative gas used for this TX in WEI
          example: '1499997889'
        validator_id:
          type: integer
          description: Index of the validator reducing its shares
          example: 1
        user:
          type: string
          description: Address burning the shares
          example: '0xa'
        amount:
          type: string
          description: Amount in WEI retrieved by the user
          example: '300000000'
        tokens:
          type: string
          description: Amount of shares burnt
          example: '300000000'
        nonce:
          type: integer
          description: Id of the event, matching a DelegatorUnstakedWithID
          example: 1
    POLOperationDelegatorRestaked:
      type: object
      required:
        - type
        - block
        - time
        - tx_hash
        - tx_index
        - tx_sender
        - tx_gas_used
        - validator_id
        - user
        - total_staked
      properties:
        type:
          type: string
          description: |-
            Event emitted by a ValidatorShare contract when one of its delegators restake its rewards.
            This can happen through the restake method.
            It is important to note that this event only shows how much POL the delegator has delegated in total, it doesn't show how many rewards were restaked.
          example: delegator_restaked
        block:
          type: integer
          description: Block number containing the transaction
          example: 15955054
        time:
          type: string
          description: Timestamp of the block
          format: date-time
          example: '2023-07-31T13:56:58Z'
        tx_hash:
          type: string
          description: Hash of the transaction
          example: '0x43244f90814b31dec250de24df5bb023a338790c1d5a39244cf1064cf6d98c94'
        tx_index:
          type: integer
          description: Hash of the transaction
          example: 1
        tx_sender:
          type: string
          description: Address of the sender of the transaction
          example: '0x41bf25fc8c52d292bd66d3bcecd8a919ecb9ef88'
        tx_method_name:
          type: string
          description: Name of the contract method executed by the transaction
          example: buyVoucher
        tx_gas_used:
          type: string
          description: Gas used by the transaction in WEI
          example: '2700999916653262'
        tx_effective_gas_price:
          type: string
          description: Effective gas price used for this TX in WEI
          example: '1499997889'
        tx_cumulative_gas_used:
          type: string
          description: Cumulative gas used for this TX in WEI
          example: '1499997889'
        validator_id:
          type: integer
          description: Index of the validator recipient of the re-delegation
          example: 1
        user:
          type: string
          description: Address re-delegating
          example: '0xa'
        total_staked:
          type: string
          description: Total amount of WEI staked
          example: '300000000'
    POLOperationDelegatorUnstaked:
      type: object
      required:
        - type
        - block
        - time
        - tx_hash
        - tx_index
        - tx_sender
        - tx_gas_used
        - validator_id
        - user
        - amount
      properties:
        type:
          type: string
          description: |-
            Event emitted by a ValidatorShare contract when one of its delegators unstake POL for which shares were burned previously.
            This can happen through the unstakeClaimTokens and migrateOut methods.
          example: delegator_unstaked
        block:
          type: integer
          description: Block number containing the transaction
          example: 15955054
        time:
          type: string
          description: Timestamp of the block
          format: date-time
          example: '2023-07-31T13:56:58Z'
        tx_hash:
          type: string
          description: Hash of the transaction
          example: '0x43244f90814b31dec250de24df5bb023a338790c1d5a39244cf1064cf6d98c94'
        tx_index:
          type: integer
          description: Hash of the transaction
          example: 1
        tx_sender:
          type: string
          description: Address of the sender of the transaction
          example: '0x41bf25fc8c52d292bd66d3bcecd8a919ecb9ef88'
        tx_method_name:
          type: string
          description: Name of the contract method executed by the transaction
          example: buyVoucher
        tx_gas_used:
          type: string
          description: Gas used by the transaction in WEI
          example: '2700999916653262'
        tx_effective_gas_price:
          type: string
          description: Effective gas price used for this TX in WEI
          example: '1499997889'
        tx_cumulative_gas_used:
          type: string
          description: Cumulative gas used for this TX in WEI
          example: '1499997889'
        validator_id:
          type: integer
          description: Index of the validator from which the user is unstaking
          example: 1
        user:
          type: string
          description: Address unstaking
          example: '0xa'
        amount:
          type: string
          description: Amount of WEI unstaked
          example: '300000000'
    POLOperationDelegatorUnstakedWithID:
      type: object
      required:
        - type
        - block
        - time
        - tx_hash
        - tx_index
        - tx_sender
        - tx_gas_used
        - validator_id
        - user
        - amount
        - nonce
      properties:
        type:
          type: string
          description: |-
            Event emitted by a ValidatorShare contract when one of its delegators unstake POL for which shares were burned previously.
            This can happen through the unstakeClaimTokens_new.
          example: delegator_unstaked
        block:
          type: integer
          description: Block number containing the transaction
          example: 15955054
        time:
          type: string
          description: Timestamp of the block
          format: date-time
          example: '2023-07-31T13:56:58Z'
        tx_hash:
          type: string
          description: Hash of the transaction
          example: '0x43244f90814b31dec250de24df5bb023a338790c1d5a39244cf1064cf6d98c94'
        tx_index:
          type: integer
          description: Hash of the transaction
          example: 1
        tx_sender:
          type: string
          description: Address of the sender of the transaction
          example: '0x41bf25fc8c52d292bd66d3bcecd8a919ecb9ef88'
        tx_method_name:
          type: string
          description: Name of the contract method executed by the transaction
          example: buyVoucher
        tx_gas_used:
          type: string
          description: Gas used by the transaction in WEI
          example: '2700999916653262'
        tx_effective_gas_price:
          type: string
          description: Effective gas price used for this TX in WEI
          example: '1499997889'
        tx_cumulative_gas_used:
          type: string
          description: Cumulative gas used for this TX in WEI
          example: '1499997889'
        validator_id:
          type: integer
          description: Index of the validator from which the user is unstaking
          example: 1
        user:
          type: string
          description: Address unstaking
          example: '0xa'
        amount:
          type: string
          description: Amount of WEI unstaked
          example: '300000000'
        nonce:
          type: integer
          description: Id of the event, matching a ShareBurnedWithID
          example: 1
    POLOperationDelegatorClaimedRewards:
      type: object
      required:
        - type
        - block
        - time
        - tx_hash
        - tx_index
        - tx_sender
        - tx_gas_used
        - validator_id
        - user
        - rewards
      properties:
        type:
          type: string
          description: |-
            Event emitted by a ValidatorShare contract when one of its delegators withdraw its rewards.
            This can happen through most interactions with the contract when the delegators has enough rewards.
          example: delegator_claimed_rewards
        block:
          type: integer
          description: Block number containing the transaction
          example: 15955054
        time:
          type: string
          description: Timestamp of the block
          format: date-time
          example: '2023-07-31T13:56:58Z'
        tx_hash:
          type: string
          description: Hash of the transaction
          example: '0x43244f90814b31dec250de24df5bb023a338790c1d5a39244cf1064cf6d98c94'
        tx_index:
          type: integer
          description: Hash of the transaction
          example: 1
        tx_method_name:
          type: string
          description: Name of the contract method executed by the transaction
          example: buyVoucher
        tx_sender:
          type: string
          description: Address of the sender of the transaction
          example: '0x41bf25fc8c52d292bd66d3bcecd8a919ecb9ef88'
        tx_gas_used:
          type: string
          description: Gas used by the transaction in WEI
          example: '2700999916653262'
        tx_effective_gas_price:
          type: string
          description: Effective gas price used for this TX in WEI
          example: '1499997889'
        tx_cumulative_gas_used:
          type: string
          description: Cumulative gas used for this TX in WEI
          example: '1499997889'
        validator_id:
          type: integer
          description: Index of the validator from which the user claims its rewards
          example: 1
        user:
          type: string
          description: Address claiming its rewards
          example: '0xa'
        rewards:
          type: string
          description: Amount claimed in WEI
          example: '300000000'
    POLOperationSharesTransfer:
      type: object
      required:
        - type
        - block
        - time
        - tx_hash
        - tx_index
        - tx_sender
        - tx_gas_used
        - validator_id
        - from
        - to
        - value
      properties:
        type:
          type: string
          description: |-
            Event emitted by a ValidatorShare contract when one of its delegators transfers its shares to another address.
            This can happen through the transfer method.
          example: delegator_claimed_rewards
        block:
          type: integer
          description: Block number containing the transaction
          example: 15955054
        time:
          type: string
          description: Timestamp of the block
          format: date-time
          example: '2023-07-31T13:56:58Z'
        tx_hash:
          type: string
          description: Hash of the transaction
          example: '0x43244f90814b31dec250de24df5bb023a338790c1d5a39244cf1064cf6d98c94'
        tx_index:
          type: integer
          description: Hash of the transaction
          example: 1
        tx_sender:
          type: string
          description: Address of the sender of the transaction
          example: '0x41bf25fc8c52d292bd66d3bcecd8a919ecb9ef88'
        tx_method_name:
          type: string
          description: Name of the contract method executed by the transaction
          example: buyVoucher
        tx_gas_used:
          type: string
          description: Gas used by the transaction in WEI
          example: '2700999916653262'
        tx_effective_gas_price:
          type: string
          description: Effective gas price used for this TX in WEI
          example: '1499997889'
        tx_cumulative_gas_used:
          type: string
          description: Cumulative gas used for this TX in WEI
          example: '1499997889'
        validator_id:
          type: integer
          description: Index of the validator from which the user claims its rewards
          example: 1
        from:
          type: string
          description: Address transfering the shares
          example: '0xa'
        to:
          type: string
          description: Address receiving the shares
          example: '0xa'
        value:
          type: string
          description: Amount in WEI
          example: '300000000'
    POLNetworkStats:
      type: object
      required:
        - pol_price_usd
        - nb_validators
        - network_gross_apy
        - supply_staked_percent
        - inflation_rate
        - updated_at
      properties:
        pol_price_usd:
          type: number
          description: POL price in USD
          example: 0.84
        nb_validators:
          type: integer
          description: Size of Polygon's active set
          example: 100
        network_gross_apy:
          type: number
          description: Gross annual percentage yield
          example: 4.5
        supply_staked_percent:
          type: number
          description: Percentage of POL being staked
          example: 20.4
        inflation_rate:
          type: number
          description: POL inflation rate
          example: 2.5
        updated_at:
          type: string
          description: Last date this data was updated
          nullable: true
          format: date-time
          example: '2023-07-31T13:56:58Z'
    POLPostStakesPayload:
      type: object
      required:
        - stakes
        - account_id
      properties:
        stakes:
          type: array
          items:
            type: object
            properties:
              stakeId:
                type: string
                description: Stake ID. Format is {validator_index}_{wallet_address}
                example: 1_0x9ce658155a6f05fe4aef83b7fa8f431d5e8ccb55
        account_id:
          type: string
          description: Kiln Account ID
          example: 92f5bfd4-ea38-4824-84f7-686eddff5539
    POLCraftApproveTxPayload:
      type: object
      required:
        - wallet
        - contract
      properties:
        wallet:
          type: string
          example: '0xe1f4acc0affB36a805474e3b6ab786738C6900A2'
          description: Wallet address to approve
        contract:
          type: string
          example: '0xe1f4acc0affB36a805474e3b6ab786738C6900A2'
          description: Contract address that needs approval
        amount_wei:
          type: string
          example: '32000000000000000000'
          description: Optional amount to approve in WEI. If not specified, an infinite amount will be approved
    POLUnsignedTx:
      type: object
      required:
        - unsigned_tx_hash
        - unsigned_tx_serialized
        - to
        - contract_call_data
        - amount_wei
        - nonce
        - gas_limit
        - max_priority_fee_per_gas_wei
        - max_fee_per_gas_wei
        - chain_id
      properties:
        unsigned_tx_hash:
          type: string
          description: Hash of the unsigned transaction
          example: '0x43244f90814b31dec250de24df5bb023a338790c1d5a39244cf1064cf6d98c94'
        unsigned_tx_serialized:
          type: string
          description: Unsigned serialized transaction
          example: '0x20a40259b763d549dfa1c082776a036dd8dabbe8b5e32ee721be017512dc'
        to:
          type: string
          description: Contract address of the transaction recipient
          example: '0x0d4a11d5eeaac28ec3f61d100daf4d40471f1852'
        contract_call_data:
          type: string
          description: Hex encoded contract data to be sent with the transaction
          example: '0xca0bfcce0000000000000000000000000000000000000000000000000000000000000080000000000000000000000000000000000000000000000000000000000000012000000000000000000000000000000000000000000000000000000000000001a000000000000000000000000000000000000000000000000000000000000002600000000000000000000000000000000000000000000000000000000000000001000000000000000000000000000000000000000000000000000000000000002000000000000000000000000000000000000000000000000000000000000000309696c02ec4dbb99f714e26ff1acdf6b258d36dcbad7b8b549553bc99b94ea639cd247f31683564995afd48568c1b6edd00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000100000000000000000000000000000000000000000000000000000000000000200000000000000000000000000000000000000000000000000000000000000020010000000000000000000000bc86717bad3f8ccf86d2882a6bc351c94580a994000000000000000000000000000000000000000000000000000000000000000100000000000000000000000000000000000000000000000000000000000000200000000000000000000000000000000000000000000000000000000000000060a3869da2ed5cc558f016d59fc5ceb0cac28e58743836aa3cf146221f1ef0b959e3cc5c589e05e171f1473596aadf36411767ad92edaae421ba0291bd7568267b3faabc3ab6ed9ddfc048ea6640370977f16f4f626a0e567a11ba25acdc520bb000000000000000000000000000000000000000000000000000000000000000012dd65914dda46639df6344701de54ac3ebe34a4b230262d3017fcd6c29954452'
        amount_wei:
          type: string
          nullable: true
          description: Amount of POL to send in wei
          example: '32000000000000000000'
        nonce:
          type: integer
          description: Nonce of the transaction
          example: 1
        gas_limit:
          type: integer
          description: Gas limit of the transaction in gas units. We provide a default value of two times the estimated gas limit
          example: 140244
        max_priority_fee_per_gas_wei:
          type: string
          description: Max priority fee per gas in wei. This is basically the miner fee. We provide a default value of 2 gwei so transactions are mined faster.
          example: '2000000000'
        max_fee_per_gas_wei:
          type: string
          description: Max fee per gas in wei. This is the maximum amount of gas that you are willing to pay for the transaction.
          example: '383687469748'
        chain_id:
          type: integer
          description: Chain ID of the network
          example: 1
    POLCraftBuyVoucherTxPayload:
      type: object
      required:
        - account_id
        - wallet
        - amount_wei
        - validator_share_proxy_address
      properties:
        account_id:
          type: string
          format: uuid
          example: b7177fd2-fbb3-479f-aa92-db9fb16e229f
          description: Kiln Account ID to stake into
        wallet:
          type: string
          example: '0xe1f4acc0affB36a805474e3b6ab786738C6900A2'
          description: Wallet address
        amount_wei:
          type: string
          example: '32000000000000000000'
          description: Amount of POL to stake in WEI
        validator_share_proxy_address:
          type: string
          example: '0xD14a87025109013B0a2354a775cB335F926Af65A'
          description: Contract address of the validator share proxy contract
    POLCraftSellVoucherTxPayload:
      type: object
      required:
        - wallet
        - amount_wei
        - validator_share_proxy_address
      properties:
        wallet:
          type: string
          example: '0xe1f4acc0affB36a805474e3b6ab786738C6900A2'
          description: Wallet address
        amount_wei:
          type: string
          example: '32000000000000000000'
          description: Amount of POL to sell in WEI
        validator_share_proxy_address:
          type: string
          example: '0xD14a87025109013B0a2354a775cB335F926Af65A'
          description: Contract address of the validator share proxy contract
    POLCraftUnstakeClaimTokensTxPayload:
      type: object
      required:
        - wallet
        - validator_share_proxy_address
      properties:
        wallet:
          type: string
          example: '0xe1f4acc0affB36a805474e3b6ab786738C6900A2'
          description: Wallet address
        validator_share_proxy_address:
          type: string
          example: '0xD14a87025109013B0a2354a775cB335F926Af65A'
          description: Contract address of the validator share proxy contract
    POLCraftWithdrawRewardsTxPayload:
      type: object
      required:
        - wallet
        - validator_share_proxy_address
      properties:
        wallet:
          type: string
          example: '0xe1f4acc0affB36a805474e3b6ab786738C6900A2'
          description: Wallet address
        validator_share_proxy_address:
          type: string
          example: '0xD14a87025109013B0a2354a775cB335F926Af65A'
          description: Contract address of the validator share proxy contract
    POLCraftRestakeRewardsTxPayload:
      type: object
      required:
        - wallet
        - validator_share_proxy_address
      properties:
        wallet:
          type: string
          example: '0xe1f4acc0affB36a805474e3b6ab786738C6900A2'
          description: Wallet address
        validator_share_proxy_address:
          type: string
          example: '0xD14a87025109013B0a2354a775cB335F926Af65A'
          description: Contract address of the validator share proxy contract
    POLPrepareTxPayload:
      type: object
      required:
        - unsigned_tx_serialized
        - r
        - s
        - v
      properties:
        unsigned_tx_serialized:
          type: string
          description: Unsigned serialized transaction
          example: '0x20a40259b763d549dfa1c082776a036dd8dabbe8b5e32ee721be017512dc'
        r:
          type: string
          description: r part of the ECDSA signature in hex
          example: de28e9efee4c8de422a3c64bfaaee11a32f7cf12bdd3f00dcce41a79fe776c65
        s:
          type: string
          description: s part of the ECDSA signature in hex
          example: 3f233eb69495fa4741ad28ef0ba40612bacaf08331fd76041c371f5a2ecc2ab5
        v:
          type: number
          description: v part of the ECDSA signature (0 or 1)
          example: 0
    POLTxStatus:
      type: object
      properties:
        status:
          type: string
          enum:
            - success
            - error
            - pending_confirmation
          description: Transaction status
          example: success
        receipt:
          type: object
          description: Transaction receipt. Object shape can be found [here](https://github.com/web3/web3.js/blob/c5072a35996eb232e2742e92b612c07ba7af98ab/packages/web3-types/src/eth_types.ts#L299)
          example:
            blockHash: '0x54a0603e3f39e5d358623c8cd86a628a2999c993c1bdd6e547c45632784bd1d7'
            blockNumber: 8608123
            contractAddress: null
            cumulativeGasUsed: 8180146
            effectiveGasPrice: 27391741855
            from: '0x9ce658155a6f05fe4aef83b7fa8f431d5e8ccb55'
            gasUsed: 70098
            logs:
              - address: '0xff50ed3d0ec03aC01D4C79aAd74928BFF48a7b2b'
                blockHash: '0x54a0603e3f39e5d358623c8cd86a628a2999c993c1bdd6e547c45632784bd1d7'
                blockNumber: 8608123
                data: '0x00000000000000000000000000000000000000000000000000000000000000a00000000000000000000000000000000000000000000000000000000000000100000000000000000000000000000000000000000000000000000000000000014000000000000000000000000000000000000000000000000000000000000001800000000000000000000000000000000000000000000000000000000000000200000000000000000000000000000000000000000000000000000000000000003093b5ae8053213154d099ed7fc99f571a0c8124601f8a59540335c7c35e0b40aad7b033f84af365185c04812acab257460000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000200100000000000000000000009ce658155a6f05fe4aef83b7fa8f431d5e8ccb550000000000000000000000000000000000000000000000000000000000000008004059730700000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000609395a07d5e7eb073725049ecba8144d850b7a1a58f603fd1fc12049d32c98db47e3d81608074bca20ccdcc94f7f4767d0d6b852edf4f6231532f33242e64d0617ac93465bc4cdabe9cebf0abe6d169830fcf375b28c0641487e5f86df2875a970000000000000000000000000000000000000000000000000000000000000008ecce030000000000000000000000000000000000000000000000000000000000'
                logIndex: 150
                removed: false
                topics:
                  - '0x649bbc62d0e31342afea4e5cd82d4049e7e1ee912fc0889aa790803be39038c5'
                transactionHash: '0x25f259a770539a4be99f972620b74219d67cd990d245bcc8d8ad5cddeaa37375'
                transactionIndex: 33
                id: log_4115d183
              - address: '0x5FaDfdb7eFffd3B4AA03f0F29d9200Cf5F191F31'
                blockHash: '0x54a0603e3f39e5d358623c8cd86a628a2999c993c1bdd6e547c45632784bd1d7'
                blockNumber: 8608123
                data: '0x000000000000000000000000000000000000000000000000000000000000004000000000000000000000000000000000000000000000000000000000000000a0000000000000000000000000000000000000000000000000000000000000003093b5ae8053213154d099ed7fc99f571a0c8124601f8a59540335c7c35e0b40aad7b033f84af365185c04812acab257460000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000200100000000000000000000009ce658155a6f05fe4aef83b7fa8f431d5e8ccb55'
                logIndex: 151
                removed: false
                topics:
                  - '0x737feedde71ce80c08f73125e4350b001be2dfb6a00fb455086c2b0a514cdfac'
                transactionHash: '0x25f259a770539a4be99f972620b74219d67cd990d245bcc8d8ad5cddeaa37375'
                transactionIndex: 33
                id: log_b4bb5ff7
            logsBloom: '0x
            status: true
            to: '0x5fadfdb7efffd3b4aa03f0f29d9200cf5f191f31'
            transactionHash: '0x25f259a770539a4be99f972620b74219d67cd990d245bcc8d8ad5cddeaa37375'
            transactionIndex: 33
            type: '0x2'
    POLSignedTx:
      type: object
      required:
        - signed_tx_serialized
      properties:
        signed_tx_serialized:
          type: string
          description: Signed serialized transaction
          example: '0x20a40259b763d549dfa1c082776a036dd8dabbe8b5e32ee721be017512dc'
    POLBroadcastTxPayload:
      type: object
      required:
        - tx_serialized
      properties:
        tx_serialized:
          type: string
          description: Signed serialized transaction
          example: '0x20a40259b763d549dfa1c082776a036dd8dabbe8b5e32ee721be017512dc'
    POLBroadcastedTx:
      type: object
      properties:
        tx_hash:
          type: string
          description: Hash of the transaction
          example: '0x43244f90814b31dec250de24df5bb023a338790c1d5a39244cf1064cf6d98c94'
    NEARStake:
      type: object
      required:
        - stake_account
        - account
        - validator
        - balance
        - rewards
        - unstaked_balance
        - can_withdraw
        - activated_at
        - activated_epoch
        - activated_block
        - updated_at
        - net_apy
      properties:
        stake_account:
          type: string
          description: Kiln internal stake account ID
          example: validator.testnet_account.testnet
        account:
          type: string
          description: NEAR account ID
          example: account.testnet
        validator:
          type: string
          description: NEAR validator ID
          example: validator.testnet
        balance:
          type: string
          description: Current balance in Yocto
          example: '1000000000'
        rewards:
          type: string
          description: Sum of rewards rewards in Yocto earned by this stake
          example: '1000000000'
        unstaked_balance:
          type: string
          description: Current unstaked balance in Yocto
          example: '1000000000'
        can_withdraw:
          type: boolean
          description: Whether the stake can be withdrawn
          example: true
        activated_at:
          type: string
          description: Timestamp of the block at which the corresponding staking transaction was executed
          format: date-time
          example: '2023-01-14T01:13:59Z'
        activated_epoch:
          type: integer
          description: Epoch at which the corresponding staking transaction was executed
          example: 123
        activated_block:
          type: integer
          description: Block at which the corresponding staking transaction was executed
          example: 123
        net_apy:
          type: number
          description: Net annual percentage yield
          example: 3.407
        updated_at:
          type: string
          description: Last date this data was updated
          format: date-time
          example: '2023-01-14T01:13:59Z'
    NEAROperation:
      type: object
      properties:
        receipt_id:
          type: string
          description: Receipt ID
          example: 5f5tskdja3MP4YajQuvhz9bmvY4CqJsYunVKbPcEUEFw
        type:
          type: string
          description: Operation type
          example: unstake, unstake_all, withdraw, withdraw_all, withdraw, stake, stake_all
        time:
          type: string
          description: Date of the block containing the receipt
          format: date-time
          example: '2023-06-22T15:35:01.892644Z'
        block:
          type: number
          description: Block containing the receipt
          example: 15828207
        tx_hash:
          type: string
          description: Hash of the transaction containing the receipt
          example: DvzvJVCsm63RiRo8iEdZUEtTwDty2Wb14yqrUr5v9naa
        tx_fees:
          type: string
          description: Fee paid by the transaction at the origin of the receipt in Yocto
          example: '17304'
        validator:
          type: string
          description: Validator ID
          example: validator.testnet
        account:
          type: string
          description: Account ID
          example: account.testnet
        amount:
          type: string
          description: Amount of the operation in Yocto
          example: '1000000000000000000000000'
    NEARRewardByDay:
      type: object
      required:
        - date
        - rewards
        - active_balance
        - net_apy
      properties:
        date:
          type: string
          description: Day for this reward entry
          format: date
          example: '2023-01-15'
        rewards:
          type: string
          description: Accumulated rewards in Yocto during the day. The sum of rewards computed on the epochs of that day.
          example: '1000'
        active_balance:
          type: string
          description: Active balance in Yocto in the block before the last reward computation that occured that day.
          example: '1000'
        net_apy:
          type: number
          description: Net annual percentage yield
          example: 3.407
        rewards_usd:
          type: number
          description: Estimated value of rewards generated for that day in USD. The exchange rate is the rate at the end of the day provided by CoinGeckko.
        active_balance_usd:
          type: number
          description: Estimated value of the staked balance at the beginning of the day in USD. The exchange rate is the rate at the end of the day provided by CoinGeckko.
    NEARRewardByEpoch:
      type: object
      required:
        - epoch
        - epoch_ts
        - rewards
        - active_balance
        - net_apy
      properties:
        epoch:
          type: integer
          description: Epoch for this reward entry
          example: 120
        epoch_ts:
          type: string
          description: Epoch timestamp for this reward entry
          format: date-time
          example: '2023-01-14T01:13:59Z'
        rewards:
          type: string
          description: Accumulated rewards in Yocto during the epoch
          example: '1000'
        active_balance:
          type: string
          description: Active balance in Yocto in the block before rewards computation.
          example: '1000'
        net_apy:
          type: number
          description: Net annual percentage yield
          example: 3.407
    NEARNetworkStats:
      type: object
      required:
        - near_price_usd
        - nb_validators
        - network_gross_apy
        - supply_staked_percent
        - inflation_rate
        - updated_at
      properties:
        near_price_usd:
          type: number
          description: NEAR price in USD
          example: 3.5
        nb_validators:
          type: integer
          description: Number of active bakers
          example: 402
        network_gross_apy:
          type: number
          description: Gross annual percentage yield
          example: 4.5
        supply_staked_percent:
          type: number
          description: Supply percentage of NEAR currently staked
          example: 12.4
        inflation_rate:
          type: number
          description: NEAR inflation rate
          example: 5
        updated_at:
          type: string
          description: Last date this data was updated
          nullable: true
          format: date-time
          example: '2023-01-14T01:13:59Z'
    PostNEARStakesPayload:
      type: object
      required:
        - stakes
        - account_id
      properties:
        stakes:
          type: array
          items:
            type: object
            properties:
              stakeAccount:
                type: string
                description: Kiln internal stake account ID
                example: validator.testnet_account.testnet
              account:
                type: string
                description: Kiln organization account ID
                example: account
              balance:
                type: string
                description: Balance to delegate in Yocto
                example: '1000000000'
        account_id:
          type: string
          description: Kiln Account ID
          example: 92f5bfd4-ea38-4824-84f7-686eddff5539
    NEARStakeTxPayload:
      type: object
      required:
        - account_id
        - wallet
        - pool_id
        - amount_yocto
      properties:
        account_id:
          type: string
          description: Kiln Account ID
          example: 92f5bfd4-ea38-4824-84f7-686eddff5539
        wallet:
          type: string
          description: NEAR wallet address
          example: c36b1a5da2e60d1fd5d3a6b46f7399eb26571457f3272f3c978bc9527ad2335f
        pool_id:
          type: string
          description: NEAR pool ID
          example: kiln.pool.f863973.m0
        amount_yocto:
          type: string
          description: Amount to stake in Yocto (1 NEAR = 10^24 Yocto)
          example: '1000000000000000000000000'
    NEARUnstakeTxPayload:
      type: object
      required:
        - wallet
        - pool_id
      properties:
        wallet:
          type: string
          description: NEAR wallet address
          example: c36b1a5da2e60d1fd5d3a6b46f7399eb26571457f3272f3c978bc9527ad2335f
        pool_id:
          type: string
          description: NEAR pool ID
          example: kiln.pool.f863973.m0
        amount_yocto:
          type: string
          description: Amount to unstake in Yocto (1 NEAR = 10^24 Yocto). If not specified, all the stake will be unstaked.
          example: '1000000000000000000000000'
    NEARWithdrawTxPayload:
      type: object
      required:
        - wallet
        - pool_id
      properties:
        wallet:
          type: string
          description: NEAR wallet address
          example: c36b1a5da2e60d1fd5d3a6b46f7399eb26571457f3272f3c978bc9527ad2335f
        pool_id:
          type: string
          description: NEAR pool ID
          example: kiln.pool.f863973.m0
        amount_yocto:
          type: string
          description: Amount to withdraw in Yocto (1 NEAR = 10^24 Yocto). If not specified, all the stake will be withdrawn.
          example: '1000000000000000000000000'
    NEARPrepareTxPayload:
      type: object
      required:
        - unsigned_tx_serialized
        - signature
      properties:
        unsigned_tx_serialized:
          type: string
          description: Unsigned transaction serialized
          example: 400000006333366231613564613265363064316664356433613662343666373339396562323635373134353766333237326633633937386263393532376164323333356600c36b1a5da2e60d1fd5d3a6b46f7399eb26571457f3272f3c978bc9527ad2335f0cc2dad0ea920000140000006b696c6e2e706f6f6c2e663836333937332e6d3037ce9c68061b12cc551a33496f858157ec5fb1e509179e69acfce58d7245aa6801000000020c00000077697468647261775f616c6c020000007b7d00c06e31d910010000000000000000000000000000000000
        signature:
          type: string
          description: Signature of the transaction
          example: c36b1a5da2e60d1fd5d3a6b46f7399eb26571457f3272f3c978bc9527ad2335f
    NEARBroadcastTxPayload:
      type: object
      required:
        - signed_tx_serialized
      properties:
        signed_tx_serialized:
          type: string
          description: Signed transaction serialized
          example: 400000006333366231613564613265363064316664356433613662343666373339396562323635373134353766333237326633633937386263393532376164323333356600c36b1a5da2e60d1fd5d3a6b46f7399eb26571457f3272f3c978bc9527ad2335f0cc2dad0ea920000140000006b696c6e2e706f6f6c2e663836333937332e6d3037ce9c68061b12cc551a33496f858157ec5fb1e509179e69acfce58d7245aa6801000000020c00000077697468647261775f616c6c020000007b7d00c06e31d910010
    NEARSignedTx:
      type: object
      required:
        - signed_tx_serialized
      properties:
        signed_tx_serialized:
          type: string
          description: Signed transaction serialized
          example: 400000006333366231613564613265363064316664356433613662343666373339396562323635373134353766333237326633633937386263393532376164323333356600c36b1a5da2e60d1fd5d3a6b46f7399eb26571457f3272f3c978bc9527ad2335f0cc2dad0ea920000140000006b696c6e2e706f6f6c2e663836333937332e6d3037ce9c68061b12cc551a33496f858157ec5fb1e509179e69acfce58d7245aa6801000000020c00000077697468647261775f616c6c020000007b7d00c06e31d910010
    NEARBroadcastedTx:
      type: object
      required:
        - tx_hash
      properties:
        tx_hash:
          type: string
          description: Hash of the broadcasted transaction
          example: c36b1a5da2e60d1fd5d3a6b46f7399eb26571457f3272f3c978bc9527ad2335f
    NEARTxStatus:
      type: object
      properties:
        status:
          type: string
          description: Transaction status
          enum:
            - success
            - error
          example: success
        receipt:
          type: object
          description: Transaction receipt. Object shape can be found [here](https://github.com/near/near-api-js/blob/c49fd67535baa5163b29ca7a43f585bfcfbe16e6/packages/types/src/provider/response.ts#L79)
          example:
            final_execution_status: FINAL
            receipts_outcome:
              - block_hash: GWvGFZW6yFk2wbcm1nks4BDisSANiRkD1yVQN1FQvwgo
                id: EP52R2jvvqz131WZeSjkDL2562eHHaeRABBTKunqAHbx
                outcome:
                  executor_id: ognuf.testnet
                  gas_burnt: 1047451194208
                  logs: []
                  metadata:
                    gas_profile:
                      - cost: BASE
                        cost_category: WASM_HOST_COST
                        gas_used: '2647681110'
                      - cost: CONTRACT_LOADING_BASE
                        cost_category: WASM_HOST_COST
                        gas_used: '35445963'
                      - cost: CONTRACT_LOADING_BYTES
                        cost_category: WASM_HOST_COST
                        gas_used: '9139185050'
                      - cost: READ_MEMORY_BASE
                        cost_category: WASM_HOST_COST
                        gas_used: '5219726400'
                      - cost: READ_MEMORY_BYTE
                        cost_category: WASM_HOST_COST
                        gas_used: '7602666'
                      - cost: READ_REGISTER_BASE
                        cost_category: WASM_HOST_COST
                        gas_used: '7551495558'
                      - cost: READ_REGISTER_BYTE
                        cost_category: WASM_HOST_COST
                        gas_used: '48689628'
                      - cost: STORAGE_HAS_KEY_BASE
                        cost_category: WASM_HOST_COST
                        gas_used: '54039896625'
                      - cost: STORAGE_HAS_KEY_BYTE
                        cost_category: WASM_HOST_COST
                        gas_used: '30790845'
                      - cost: STORAGE_READ_BASE
                        cost_category: WASM_HOST_COST
                        gas_used: '56356845749'
                      - cost: STORAGE_READ_KEY_BYTE
                        cost_category: WASM_HOST_COST
                        gas_used: '30952533'
                      - cost: STORAGE_READ_VALUE_BYTE
                        cost_category: WASM_HOST_COST
                        gas_used: '72943052'
                      - cost: WASM_INSTRUCTION
                        cost_category: WASM_HOST_COST
                        gas_used: '2919138288'
                      - cost: WRITE_MEMORY_BASE
                        cost_category: WASM_HOST_COST
                        gas_used: '8411384583'
                      - cost: WRITE_MEMORY_BYTE
                        cost_category: WASM_HOST_COST
                        gas_used: '1345543368'
                      - cost: WRITE_REGISTER_BASE
                        cost_category: WASM_HOST_COST
                        gas_used: '8596567458'
                      - cost: WRITE_REGISTER_BYTE
                        cost_category: WASM_HOST_COST
                        gas_used: '1877972616'
                    version: 3
                  receipt_ids:
                    - 8RzWUcubqXZYvVTjJUTJptx7ggh5DXEMA86J6B3P5odQ
                  status:
                    SuccessValue: ''
                  tokens_burnt: '104745119420800000000'
                proof:
                  - direction: Left
                    hash: 2jzRXjWTCVR3ZBhMg4Lg3NzG2BUXxVd5PmazKPxGi5Ri
                  - direction: Right
                    hash: 8n5m2mMZso44PV696BVFyKSkC8RKqQSuF2QdjQBwKSP1
              - block_hash: Dp3Ra6eEbWwaVueDUDxGsvU6os2RtKTmMPxbQUF1jccm
                id: 8RzWUcubqXZYvVTjJUTJptx7ggh5DXEMA86J6B3P5odQ
                outcome:
                  executor_id: ognuf.testnet
                  gas_burnt: 223182562500
                  logs: []
                  metadata:
                    gas_profile: []
                    version: 3
                  receipt_ids: []
                  status:
                    SuccessValue: ''
                  tokens_burnt: '0'
                proof:
                  - direction: Right
                    hash: F6EbMPDCmbCQcETysyY64SP6wWn9PeiVXd7UvYgL41Ws
            status:
              SuccessValue: ''
            transaction:
              actions:
                - FunctionCall:
                    args: AQEBAAAAygEAAArFAwqCAgoCCAsQ4qcDGLPbz7C3u76AGCIg7c4UiAafMSjANXcZnXF+qiYsZ8T13WsVlZb4zljSyTQqIPBf\/7yKE9GX9+RWD9lgD58gGs1I\/Lks9hDpOFlbflBHMiBuNAuc\/7N6mJylROa7eAoseJAdP7M3OHaFEaMGF6+gHTogAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAABCIN6zZHR5a8o1BmGlOOQHhQwNmSuCwwBl\/Nf861pRpRwZUhSrbPuuNT\/OdRZRpiGGh1dGWu5LelogmaPcCwS114x7FyVESiXxEtoO6Nv1n4YkGXn8bV44jJ5iDG1pbml0aWEtdGVzdBJAPp\/i5lZVxvHHoT5uLn3J+0qYJIhP9Wvf+PnO09c8GetU1ipLI1MrDFVHkcPDQmywTTb7e+hOCBeiKlaEB5nrBxp8CjwKFKts+641P851FlGmIYaHV0Za7kt6EiIKIAQUikAhf8C3GBlyykKRuZGB8EkIICrh77u8L7e1IZfCGAESPAoUq2z7rjU\/znUWUaYhhodXRlruS3oSIgogBBSKQCF\/wLcYGXLKQpG5kYHwSQggKuHvu7wvt7Uhl8IYARIA
                    deposit: '0'
                    gas: 20000000000000
                    method_name: submit
              hash: 3SjLFkpdymyyF4asqkBaRStoJCVxc72ovZkEzFHMCGY5
              nonce: 175227951646938
              priority_fee: 0
              public_key: ed25519:4m7opXRc5hEpQvUFtseFedtvN6uVKfJtzht428xxtZq1
              receiver_id: ognuf.testnet
              signature: ed25519:3TpmHAoLNMGXo69XhoP2UtZkWcet9VxKyYJ8iCyY2RdxngcimUfrgSDPrCvakLMTUdChdxwBLJv7RPV5yT9vqt3U
              signer_id: ognuf.testnet
            transaction_outcome:
              block_hash: GWvGFZW6yFk2wbcm1nks4BDisSANiRkD1yVQN1FQvwgo
              id: 3SjLFkpdymyyF4asqkBaRStoJCVxc72ovZkEzFHMCGY5
              outcome:
                executor_id: ognuf.testnet
                gas_burnt: 309119332716
                logs: []
                metadata:
                  gas_profile: null
                  version: 1
                receipt_ids:
                  - EP52R2jvvqz131WZeSjkDL2562eHHaeRABBTKunqAHbx
                status:
                  SuccessReceiptId: EP52R2jvvqz131WZeSjkDL2562eHHaeRABBTKunqAHbx
                tokens_burnt: '30911933271600000000'
              proof:
                - direction: Right
                  hash: 7y9tJ8nbh3QWT2ASECNtJFx8C1M8ao2bC5JqYv5DK7fm
                - direction: Right
                  hash: 8n5m2mMZso44PV696BVFyKSkC8RKqQSuF2QdjQBwKSP1
    NEARTx:
      type: object
      required:
        - unsigned_tx_serialized
        - unsigned_tx_hash
        - tx
      properties:
        unsigned_tx_serialized:
          type: string
          description: Unsigned transaction serialized
          example: 400000006333366231613564613265363064316664356433613662343666373339396562323635373134353766333237326633633937386263393532376164323333356600c36b1a5da2e60d1fd5d3a6b46f7399eb26571457f3272f3c978bc9527ad2335f0cc2dad0ea920000140000006b696c6e2e706f6f6c2e663836333937332e6d3037ce9c68061b12cc551a33496f858157ec5fb1e509179e69acfce58d7245aa6801000000020c00000077697468647261775f616c6c020000007b7d00c06e31d910010000000000000000000000000000000000
        unsigned_tx_hash:
          type: string
          description: Unsigned transaction hash to sign
          example: c36b1a5da2e60d1fd5d3a6b46f7399eb26571457f3272f3c978bc9527ad2335f
        tx:
          type: object
          description: Parsed transaction
          example:
            signerId: c36b1a5da2e60d1fd5d3a6b46f7399eb26571457f3272f3c978bc9527ad2335f
            publicKey:
              ed25519Key:
                keyType: 0
                data:
                  - 195
                  - 107
                  - 26
                  - 93
                  - 162
                  - 230
                  - 13
                  - 31
                  - 213
                  - 211
                  - 166
                  - 180
                  - 111
                  - 115
                  - 153
                  - 235
                  - 38
                  - 87
                  - 20
                  - 87
                  - 243
                  - 39
                  - 47
                  - 60
                  - 151
                  - 139
                  - 201
                  - 82
                  - 122
                  - 210
                  - 51
                  - 95
              enum: ed25519Key
            nonce: '161537224000012'
            receiverId: kiln.pool.f863973.m0
            actions:
              - functionCall:
                  methodName: withdraw_all
                  args:
                    type: Buffer
                    data:
                      - 123
                      - 125
                  gas: '300000000000000'
                  deposit: '0'
                enum: functionCall
            blockHash:
              - 92
              - 235
              - 96
              - 73
              - 5
              - 142
              - 190
              - 166
              - 118
              - 248
              - 71
              - 141
              - 118
              - 93
              - 206
              - 84
              - 209
              - 33
              - 196
              - 62
              - 180
              - 199
              - 65
              - 131
              - 28
              - 161
              - 140
              - 43
              - 144
              - 134
              - 244
              - 245
    OSMOStake:
      type: object
      required:
        - validator_address
        - delegator_address
        - rewards
        - available_rewards
        - balance
        - state
        - net_apy
        - unbondings
        - permissions
      properties:
        validator_address:
          type: string
          description: Public key of the validator
          example: osmovaloper146mj09yzu3mvz7pmy4dvs4z9wr2mst7rq8p8gy
        delegator_address:
          type: string
          description: Public key of the delegator
          example: osmo1mfdn23y2ydnp6j3l3f8rw6r2gzazrmprgxn5xl
        delegated_at:
          type: string
          description: Date of first delegation ever for the stake. Unavailable for stakes older than [Theta v7 (12/04/2022)](https://github.com/cosmos/gaia/tree/main/docs/roadmap#cosmos-hub-summary).
          format: date-time
          example: '2023-06-16T03:13:23.058547Z'
        delegated_block:
          type: number
          description: Block of first delegation ever for the stake. Unavailable for stakes older than [Theta v7 (12/04/2022)](https://github.com/cosmos/gaia/tree/main/docs/roadmap#cosmos-hub-summary).
          example: 15739267
        undelegated_at:
          type: string
          description: Date of undelegation for the stake
          format: date-time
          example: '2023-07-14T03:56:13.561156Z'
        undelegated_block:
          type: number
          description: Block of undelegation for the stake
          example: 16126416
        rewards:
          type: string
          description: Total rewards accumulated by this stake since its first ever delegation in uOSMO. Includes currently available rewards not yet withdrawn.
          example: '735573808534727891000000'
        available_rewards:
          type: string
          description: Available rewards in uOSMO that can be withdrawn from this stake
          example: '36748808534727891000000'
        balance:
          type: string
          description: Staked balance on this stake in uOSMO
          example: '6300000000000000000000000'
        net_apy:
          type: number
          description: Net annual percentage yield. Unavailable for stakes older than [Theta v7 (12/04/2022)](https://github.com/cosmos/gaia/tree/main/docs/roadmap#cosmos-hub-summary).
          example: 5.76
        state:
          type: string
          description: State of the Osmosis stake
          example: active
          enum:
            - active
            - deactivating
            - inactive
        updated_at:
          type: string
          description: Last date this data was updated
          format: date-time
          example: '2023-01-14T01:13:59Z'
        permissions:
          description: permissions related to the stake currently active, ignored if there is no ongoing grants
          type: array
          items:
            type: object
            properties:
              source:
                type: string
                description: whether the stake is recipient (grantee) or the giver (granter) of the permissions
                example: granter
              creation_height:
                type: number
                description: Block at which the unbonding was created
                example: 15000000
              permission:
                type: string
                description: 'Kind of permission been grantee, can be: "Staking.MsgDelegate", "Staking.MsgUndelegate", "Staking.MsgRedelegate" or "Distribution.MsgWithdrawDelegatorReward"'
                example: Staking.MsgDelegate
              expires_at:
                type: string
                description: Exact time at which the permissions will be revoked
                format: date-time
                example: '2023-01-10T01:12:34Z'
                nullable: true
              allow_list:
                type: array
                items:
                  type: string
                nullable: true
                description: List of address on which the granted permission can be applied (ie validator on which delegation is allowed)
                example:
                  - osmovaloper1xyz
                  - osmovaloper1abc
              deny_list:
                type: array
                items:
                  type: string
                nullable: true
                description: List of address on which the granted permission cannot be applied (ie validator on which delegation is allowed)
                example:
                  - osmovaloper1xyz
                  - osmovaloper1abc
        unbondings:
          description: unbondings currently active on the stakes. ignored if no unbondings are returned
          type: array
          items:
            type: object
            required:
              - creation_height
              - completion_time
              - balance
              - initial_balance
            properties:
              creation_height:
                type: number
                description: Block at which the unbonding was created
                example: 15000000
              completion_time:
                type: string
                description: Exact time at which the unbonding will take effect
                format: date-time
                example: '2023-01-10T01:12:34Z'
              balance:
                type: string
                description: Amount currently associated with the unbonding (slashes included)
                example: '129300'
              initial_balance:
                type: string
                description: Amount expected at creation (slashes non-included)
                example: '150300'
    PostOSMOStakesPayload:
      type: object
      required:
        - stakes
        - account_id
      properties:
        stakes:
          type: array
          items:
            type: object
            properties:
              stakeId:
                type: string
                description: Stake id {validator_address}_{delegator_address}
                example: osmovaloper146mj09yzu3mvz7pmy4dvs4z9wr2mst7rq8p8gy_osmo1lnc548nmxqukrvd9czw4tq5vn6kapndg2hzhr3}
        account_id:
          type: string
          description: Kiln Account ID
          example: 92f5bfd4-ea38-4824-84f7-686eddff5539
    OSMOStakeMessage:
      type: object
      properties:
        typeUrl:
          type: string
          description: Type URL of the message
          example: /cosmos.staking.v1beta1.MsgDelegate
        value:
          type: object
          description: Message value
          example:
            delegatorAddress: osmo1lnc548nmxqukrvd9czw4tq5vn6kapndg2hzhr3
            validatorAddress: osmovaloper146mj09yzu3mvz7pmy4dvs4z9wr2mst7rq8p8gy
            amount:
              denom: uosmo
              amount: '1000000'
    OSMOStakeMessageRestake:
      type: object
      properties:
        typeUrl:
          type: string
          description: Type URL of the message
          example: /cosmos.staking.v1beta1.StakeAuthorization
        value:
          type: object
          description: Message value
          example:
            allowList:
              address:
                - osmovaloper146mj09yzu3mvz7pmy4dvs4z9wr2mst7rq8p8gy
            AuthorizationType: 1
    OSMOStakeUnsignedTx:
      type: object
      required:
        - unsigned_tx_serialized
        - unsigned_tx_hash
        - tx_body
        - tx_auth_info
        - pubkey
        - messages
        - fee
        - chain_id
        - account_number
      properties:
        unsigned_tx_serialized:
          type: string
          description: Unsigned serialized transaction
          example: 0adf010adc010a2a2f636f736d6f732e7374616b696e672e763162657461312e4d7367426567696e526564656c656761746512ad010a2d636f736d6f733139633966646834383876716a636c6c74777036386a6d3530796477796833366a7165617465761234636f736d6f7376616c6f70657231307636777664656e65653872396c36776c73706863677572326c746c387a746b6672766a39611a34636f736d6f7376616c6f70657231796d7a336b6a7466397a6b666d6d3273326c7279376568307a6439657a33766335797030306622100a057561746f6d12073433313030303012670a500a460a1f2f636f736d6f732e63727970746f2e736563703235366b312e5075624b657912230a21039ce47b2a813d13876131a9c3be77e8c4afa49e948744abbee11f939e2a420f4612040a020801186d12130a0d0a057561746f6d1204353030301080897a1a1174686574612d746573746e65742d30303120e0cd2a
        unsigned_tx_hash:
          type: string
          description: Hash of the unsigned transaction
          example: b6ce1c8185416ce7d42a8c39566a9a2b6b2361a55c04a1dba3dd7445a0e1e364
        tx_body:
          type: string
          description: Transaction body serialized in hex
          example: 0a9e010a232f636f736d6f732e7374616b696e672e763162657461312e4d736744656c656761746512770a2d636f736d6f733139633966646834383876716a636c6c74777036386a6d3530796477796833366a7165617465761234636f736d6f7376616c6f706572313679733065673933356d6b71706b79646b6766636a39616765326175386c39366e61657265391a100a057561746f6d120731303030303030
        tx_auth_info:
          type: string
          description: Transaction auth info serialized in hex
          example: 0a2c0a2a0a28636f736d6f733139633966646834383876716a636c6c74777036386a6d3530796477796833366a716561746576120a2d636f736d6f733139633966646834383876716a636c6c74777036386a6d3530796477796833366a7165617465761234636f736d6f7376616c6f706572313679733065673933356d6b71706b79646b6766636a39616765326175386c39366e6165726539
        pubkey:
          type: string
          description: Wallet compressed public key, this is different than the wallet address
          example: 039ce47b2a813d13876131a9c3be77e8c4afa49e948744abbee11f939e2a420f46
        fee:
          type: object
          description: Fee included in the transaction. Object shape can be found [here](https://github.com/cosmos/cosmjs/blob/72da7971ee4fd77fec1bfef2ec1ba4f14f8c319d/packages/amino/src/signdoc.ts#L12)
          example:
            amount:
              - denom: uosmo
                amount: '5000'
            gas: '200000'
        messages:
          type: array
          description: List of messages included in the transaction. The list contains one message for the staking delegation and one more message for rewards restaking in case specified as a parameter (`restake_rewards=true`).
          items:
            oneOf:
              - $ref: '#/components/schemas/OSMOStakeMessage'
              - $ref: '#/components/schemas/OSMOStakeMessageRestake'
          example:
            - typeUrl: /cosmos.staking.v1beta1.MsgDelegate
              value:
                delegatorAddress: osmo1lnc548nmxqukrvd9czw4tq5vn6kapndg2hzhr3
                validatorAddress: osmovaloper146mj09yzu3mvz7pmy4dvs4z9wr2mst7rq8p8gy
                amount:
                  denom: uosmo
                  amount: '1000000'
            - typeUrl: /cosmos.staking.v1beta1.StakeAuthorization
              allowList:
                address:
                  - osmovaloper146mj09yzu3mvz7pmy4dvs4z9wr2mst7rq8p8gy
              AuthorizationType: 1
        chain_id:
          type: string
          description: Chain ID
          example: cosmoshub-4
        account_number:
          type: number
          description: Account number
          example: 1234
    OSMOUnsignedTx:
      type: object
      required:
        - unsigned_tx_serialized
        - unsigned_tx_hash
        - tx_body
        - tx_auth_info
        - pubkey
        - message
        - fee
        - chain_id
        - account_number
      properties:
        unsigned_tx_serialized:
          type: string
          description: Unsigned serialized transaction
          example: 0adf010adc010a2a2f636f736d6f732e7374616b696e672e763162657461312e4d7367426567696e526564656c656761746512ad010a2d636f736d6f733139633966646834383876716a636c6c74777036386a6d3530796477796833366a7165617465761234636f736d6f7376616c6f70657231307636777664656e65653872396c36776c73706863677572326c746c387a746b6672766a39611a34636f736d6f7376616c6f70657231796d7a336b6a7466397a6b666d6d3273326c7279376568307a6439657a33766335797030306622100a057561746f6d12073433313030303012670a500a460a1f2f636f736d6f732e63727970746f2e736563703235366b312e5075624b657912230a21039ce47b2a813d13876131a9c3be77e8c4afa49e948744abbee11f939e2a420f4612040a020801186d12130a0d0a057561746f6d1204353030301080897a1a1174686574612d746573746e65742d30303120e0cd2a
        unsigned_tx_hash:
          type: string
          description: Hash of the unsigned transaction
          example: b6ce1c8185416ce7d42a8c39566a9a2b6b2361a55c04a1dba3dd7445a0e1e364
        tx_body:
          type: string
          description: Transaction body serialized in hex
          example: 0a9e010a232f636f736d6f732e7374616b696e672e763162657461312e4d736744656c656761746512770a2d636f736d6f733139633966646834383876716a636c6c74777036386a6d3530796477796833366a7165617465761234636f736d6f7376616c6f706572313679733065673933356d6b71706b79646b6766636a39616765326175386c39366e61657265391a100a057561746f6d120731303030303030
        tx_auth_info:
          type: string
          description: Transaction auth info serialized in hex
          example: 0a2c0a2a0a28636f736d6f733139633966646834383876716a636c6c74777036386a6d3530796477796833366a716561746576120a2d636f736d6f733139633966646834383876716a636c6c74777036386a6d3530796477796833366a7165617465761234636f736d6f7376616c6f706572313679733065673933356d6b71706b79646b6766636a39616765326175386c39366e6165726539
        pubkey:
          type: string
          description: Wallet compressed public key, this is different than the wallet address
          example: 039ce47b2a813d13876131a9c3be77e8c4afa49e948744abbee11f939e2a420f46
        message:
          type: object
          description: Message included in the transaction
          example:
            typeUrl: /cosmos.staking.v1beta1.MsgDelegate
            value:
              delegatorAddress: osmo1lnc548nmxqukrvd9czw4tq5vn6kapndg2hzhr3
              validatorAddress: osmovaloper146mj09yzu3mvz7pmy4dvs4z9wr2mst7rq8p8gy
              amount:
                denom: uosmo
                amount: '1000000'
        fee:
          type: object
          description: Fee included in the transaction. Object shape can be found [here](https://github.com/cosmos/cosmjs/blob/72da7971ee4fd77fec1bfef2ec1ba4f14f8c319d/packages/amino/src/signdoc.ts#L12)
          example:
            amount:
              - denom: uosmo
                amount: '5000'
            gas: '200000'
        chain_id:
          type: string
          description: Chain ID
          example: cosmoshub-4
        account_number:
          type: number
          description: Account number
          example: 1234
    OSMOSignedTx:
      type: object
      required:
        - signed_tx_serialized
      properties:
        signed_tx_serialized:
          type: string
          description: Serialized signed transaction in hex
          example: 0aa1010a9e010a232f636f736d6f732e7374616b696e672e763162657461312e4d736744656c656761746512770a2d636f736d6f733139633966646834383876716a636c6c74777036386a6d3530796477796833366a7165617465761234636f736d6f7376616c6f706572313679733065673933356d6b71706b79646b6766636a39616765326175386c39366e61657265391a100a057561746f6d12073130303030303012670a500a460a1f2f636f736d6f732e63727970746f2e736563703235366b312e5075624b657912230a21039ce47b2a813d13876131a9c3be77e8c4afa49e948744abbee11f939e2a420f4612040a020801182012130a0d0a057561746f6d12043530303010e0a7121a40191f87a54dceafb6ab9a5f112a13444ca37e49a029e531bb21301fd72e9d390304c763cca5a9760a631dc85705dd6b08b50f5fff7d5de8d73b2cebd1f4c3b6a0
    OSMOTxHash:
      type: object
      required:
        - tx_hash
      properties:
        tx_hash:
          type: string
          description: Hash of the transaction
          example: 2B4F732E12D5D5AF1F907AD03B199167A718EDC6201DE5713143AB80990420CB
    OSMOPrepareTxPayload:
      type: object
      required:
        - pubkey
        - tx_body
        - tx_auth_info
        - signature
      properties:
        pubkey:
          type: string
          description: Wallet public key (compressed or uncompressed), this is different than the wallet address
          example: 039ce47b2a813d13876131a9c3be77e8c4afa49e948744abbee11f939e2a420f46
        tx_body:
          type: string
          description: Transaction body serialized in hex
          example: 0a9e010a232f636f736d6f732e7374616b696e672e763162657461312e4d736744656c656761746512770a2d636f736d6f733139633966646834383876716a636c6c74777036386a6d3530796477796833366a7165617465761234636f736d6f7376616c6f706572313679733065673933356d6b71706b79646b6766636a39616765326175386c39366e61657265391a100a057561746f6d120731303030303030
        tx_auth_info:
          type: string
          description: Transaction auth info serialized in hex
          example: 0a2c0a2a0a28636f736d6f733139633966646834383876716a636c6c74777036386a6d3530796477796833366a716561746576120a2d636f736d6f733139633966646834383876716a636c6c74777036386a6d3530796477796833366a7165617465761234636f736d6f7376616c6f706572313679733065673933356d6b71706b79646b6766636a39616765326175386c39366e6165726539
        signature:
          type: string
          description: Transaction signature serialized in hex
          example: 191f87a54dceafb6ab9a5f112a13444ca37e49a029e531bb21301fd72e9d390304c763cca5a9760a631dc85705dd6b08b50f5fff7d5de8d73b2cebd1f4c3b6a0
    OSMOBroadcastTxPayload:
      type: object
      required:
        - tx_serialized
      properties:
        tx_serialized:
          type: string
          description: Signed transaction serialized in hex
          example: 0aa1010a9e010a232f636f736d6f732e7374616b696e672e763162657461312e4d736744656c656761746512770a2d636f736d6f733139633966646834383876716a636c6c74777036386a6d3530796477796833366a7165617465761234636f736d6f7376616c6f706572313679733065673933356d6b71706b79646b6766636a39616765326175386c39366e61657265391a100a057561746f6d12073130303030303012670a500a460a1f2f636f736d6f732e63727970746f2e736563703235366b312e5075624b657912230a21039ce47b2a813d13876131a9c3be77e8c4afa49e948744abbee11f939e2a420f4612040a020801182012130a0d0a057561746f6d12043530303010e0a7121a40191f87a54dceafb6ab9a5f112a13444ca37e49a029e531bb21301fd72e9d390304c763cca5a9760a631dc85705dd6b08b50f5fff7d5de8d73b2cebd1f4c3b6a0
    OSMOTxStatus:
      type: object
      properties:
        status:
          type: string
          enum:
            - success
            - error
          description: Transaction status
          example: success
        receipt:
          type: object
          description: Transaction receipt. Only present if status is success. Object shape can be found [here](https://github.com/cosmos/cosmjs/blob/e8e65aa0c145616ccb58625c32bffe08b46ff574/packages/stargate/src/stargateclient.ts#L67)
          example:
            height: 16007296
            txIndex: 0
            hash: 2B4F732E12D5D5AF1F907AD03B199167A718EDC6201DE5713143AB80990420CB
            code: 0
            events:
              - type: coin_spent
                attributes:
                  - key: spender
                    value: osmo19c9fdh488vqjclltwp68jm50ydwyh36jqeatev
                  - key: amount
                    value: 5000uosmo
              - type: coin_received
                attributes:
                  - key: receiver
                    value: osmo17xpfvakm2amg962yls6f84z3kell8c5lserqta
                  - key: amount
                    value: 5000uosmo
              - type: transfer
                attributes:
                  - key: recipient
                    value: osmo17xpfvakm2amg962yls6f84z3kell8c5lserqta
                  - key: sender
                    value: osmo19c9fdh488vqjclltwp68jm50ydwyh36jqeatev
                  - key: amount
                    value: 5000uosmo
              - type: message
                attributes:
                  - key: sender
                    value: osmo19c9fdh488vqjclltwp68jm50ydwyh36jqeatev
              - type: tx
                attributes:
                  - key: fee
                    value: 5000uosmo
                  - key: fee_payer
                    value: osmo19c9fdh488vqjclltwp68jm50ydwyh36jqeatev
              - type: tx
                attributes:
                  - key: acc_seq
                    value: osmo19c9fdh488vqjclltwp68jm50ydwyh36jqeatev/33
              - type: tx
                attributes:
                  - key: signature
                    value: GR+HpU3Or7arml8RKhNETKN+SaAp5TG7ITAf1y6dOQMEx2PMpal2CmMdyFcF3WsItQ9f/31d6Nc7LOvR9MO2oA==
              - type: message
                attributes:
                  - key: action
                    value: /cosmos.staking.v1beta1.MsgDelegate
              - type: coin_spent
                attributes:
                  - key: spender
                    value: osmo1jv65s3grqf6v6jl3dp4t6c9t9rk99cd88lyufl
                  - key: amount
                    value: 5uosmo
              - type: coin_received
                attributes:
                  - key: receiver
                    value: osmo19c9fdh488vqjclltwp68jm50ydwyh36jqeatev
                  - key: amount
                    value: 5uosmo
              - type: transfer
                attributes:
                  - key: recipient
                    value: osmo19c9fdh488vqjclltwp68jm50ydwyh36jqeatev
                  - key: sender
                    value: osmo1jv65s3grqf6v6jl3dp4t6c9t9rk99cd88lyufl
                  - key: amount
                    value: 5uosmo
              - type: message
                attributes:
                  - key: sender
                    value: osmo1jv65s3grqf6v6jl3dp4t6c9t9rk99cd88lyufl
              - type: withdraw_rewards
                attributes:
                  - key: amount
                    value: 5uosmo
                  - key: validator
                    value: osmovaloper146mj09yzu3mvz7pmy4dvs4z9wr2mst7rq8p8gy
              - type: coin_spent
                attributes:
                  - key: spender
                    value: osmo19c9fdh488vqjclltwp68jm50ydwyh36jqeatev
                  - key: amount
                    value: 100000uosmo
              - type: coin_received
                attributes:
                  - key: receiver
                    value: osmo1fl48vsnmsdzcv85q5d2q4z5ajdha8yu34mf0eh
                  - key: amount
                    value: 100000uosmo
              - type: delegate
                attributes:
                  - key: validator
                    value: osmovaloper146mj09yzu3mvz7pmy4dvs4z9wr2mst7rq8p8gy
                  - key: amount
                    value: 100000uosmo
                  - key: new_shares
                    value: '100000.000000000000000000'
              - type: message
                attributes:
                  - key: module
                    value: staking
                  - key: sender
                    value: osmo19c9fdh488vqjclltwp68jm50ydwyh36jqeatev
            rawLog: '[{"events":[{"type":"coin_received","attributes":[{"key":"receiver","value":"osmo19c9fdh488vqjclltwp68jm50ydwyh36jqeatev"},{"key":"amount","value":"5uosmo"},{"key":"receiver","value":"osmo1fl48vsnmsdzcv85q5d2q4z5ajdha8yu34mf0eh"},{"key":"amount","value":"100000uosmo"}]},{"type":"coin_spent","attributes":[{"key":"spender","value":"osmo1jv65s3grqf6v6jl3dp4t6c9t9rk99cd88lyufl"},{"key":"amount","value":"5uosmo"},{"key":"spender","value":"osmo19c9fdh488vqjclltwp68jm50ydwyh36jqeatev"},{"key":"amount","value":"100000uosmo"}]},{"type":"delegate","attributes":[{"key":"validator","value":"osmovaloper146mj09yzu3mvz7pmy4dvs4z9wr2mst7rq8p8gy"},{"key":"amount","value":"100000uosmo"},{"key":"new_shares","value":"100000.000000000000000000"}]},{"type":"message","attributes":[{"key":"action","value":"/cosmos.staking.v1beta1.MsgDelegate"},{"key":"sender","value":"osmo1jv65s3grqf6v6jl3dp4t6c9t9rk99cd88lyufl"},{"key":"module","value":"staking"},{"key":"sender","value":"osmo19c9fdh488vqjclltwp68jm50ydwyh36jqeatev"}]},{"type":"transfer","attributes":[{"key":"recipient","value":"osmo19c9fdh488vqjclltwp68jm50ydwyh36jqeatev"},{"key":"sender","value":"osmo1jv65s3grqf6v6jl3dp4t6c9t9rk99cd88lyufl"},{"key":"amount","value":"5uosmo"}]},{"type":"withdraw_rewards","attributes":[{"key":"amount","value":"5uosmo"},{"key":"validator","value":"osmovaloper146mj09yzu3mvz7pmy4dvs4z9wr2mst7rq8p8gy"}]}]}]'
            tx:
              '0': 10
              '1': 160
              '2': 1
              '3': 10
              '4': 157
              '5': 1
              '6': 10
              '7': 35
              '8': 47
              '9': 99
              '10': 111
              '11': 115
              '12': 109
              '13': 111
              '14': 115
              '15': 46
              '16': 115
              '17': 116
              '18': 97
              '19': 107
              '20': 105
              '21': 110
              '22': 103
              '23': 46
              '24': 118
              '25': 49
              '26': 98
              '27': 101
              '28': 116
              '29': 97
              '30': 49
              '31': 46
              '32': 77
              '33': 115
              '34': 103
              '35': 68
              '36': 101
              '37': 108
              '38': 101
              '39': 103
              '40': 97
              '41': 116
              '42': 101
              '43': 18
              '44': 118
              '45': 10
              '46': 45
              '47': 99
              '48': 111
              '49': 115
              '50': 109
              '51': 111
              '52': 115
              '53': 49
              '54': 57
              '55': 99
              '56': 57
              '57': 102
              '58': 100
              '59': 104
              '60': 52
              '61': 56
              '62': 56
              '63': 118
              '64': 113
              '65': 106
              '66': 99
              '67': 108
              '68': 108
              '69': 116
              '70': 119
              '71': 112
              '72': 54
              '73': 56
              '74': 106
              '75': 109
              '76': 53
              '77': 48
              '78': 121
              '79': 100
              '80': 119
              '81': 121
              '82': 104
              '83': 51
              '84': 54
              '85': 106
              '86': 113
              '87': 101
              '88': 97
              '89': 116
              '90': 101
              '91': 118
              '92': 18
              '93': 52
              '94': 99
              '95': 111
              '96': 115
              '97': 109
              '98': 111
              '99': 115
              '100': 118
              '101': 97
              '102': 108
              '103': 111
              '104': 112
              '105': 101
              '106': 114
              '107': 49
              '108': 54
              '109': 121
              '110': 115
              '111': 48
              '112': 101
              '113': 103
              '114': 57
              '115': 51
              '116': 53
              '117': 109
              '118': 107
              '119': 113
              '120': 112
              '121': 107
              '122': 121
              '123': 100
              '124': 107
              '125': 103
              '126': 102
              '127': 99
              '128': 106
              '129': 57
              '130': 97
              '131': 103
              '132': 101
              '133': 50
              '134': 97
              '135': 117
              '136': 56
              '137': 108
              '138': 57
              '139': 54
              '140': 110
              '141': 97
              '142': 101
              '143': 114
              '144': 101
              '145': 57
              '146': 26
              '147': 15
              '148': 10
              '149': 5
              '150': 117
              '151': 97
              '152': 116
              '153': 111
              '154': 109
              '155': 18
              '156': 6
              '157': 49
              '158': 48
              '159': 48
              '160': 48
              '161': 48
              '162': 48
              '163': 18
              '164': 103
              '165': 10
              '166': 80
              '167': 10
              '168': 70
              '169': 10
              '170': 31
              '171': 47
              '172': 99
              '173': 111
              '174': 115
              '175': 109
              '176': 111
              '177': 115
              '178': 46
              '179': 99
              '180': 114
              '181': 121
              '182': 112
              '183': 116
              '184': 111
              '185': 46
              '186': 115
              '187': 101
              '188': 99
              '189': 112
              '190': 50
              '191': 53
              '192': 54
              '193': 107
              '194': 49
              '195': 46
              '196': 80
              '197': 117
              '198': 98
              '199': 75
              '200': 101
              '201': 121
              '202': 18
              '203': 35
              '204': 10
              '205': 33
              '206': 3
              '207': 156
              '208': 228
              '209': 123
              '210': 42
              '211': 129
              '212': 61
              '213': 19
              '214': 135
              '215': 97
              '216': 49
              '217': 169
              '218': 195
              '219': 190
              '220': 119
              '221': 232
              '222': 196
              '223': 175
              '224': 164
              '225': 158
              '226': 148
              '227': 135
              '228': 68
              '229': 171
              '230': 190
              '231': 225
              '232': 31
              '233': 147
              '234': 158
              '235': 42
              '236': 66
              '237': 15
              '238': 70
              '239': 18
              '240': 4
              '241': 10
              '242': 2
              '243': 8
              '244': 1
              '245': 24
              '246': 33
              '247': 18
              '248': 19
              '249': 10
              '250': 13
              '251': 10
              '252': 5
              '253': 117
              '254': 97
              '255': 116
              '256': 111
              '257': 109
              '258': 18
              '259': 4
              '260': 53
              '261': 48
              '262': 48
              '263': 48
              '264': 16
              '265': 224
              '266': 167
              '267': 18
              '268': 26
              '269': 64
              '270': 25
              '271': 31
              '272': 135
              '273': 165
              '274': 77
              '275': 206
              '276': 175
              '277': 182
              '278': 171
              '279': 154
              '280': 95
              '281': 17
              '282': 42
              '283': 19
              '284': 68
              '285': 76
              '286': 163
              '287': 126
              '288': 73
              '289': 160
              '290': 41
              '291': 229
              '292': 49
              '293': 187
              '294': 33
              '295': 48
              '296': 31
              '297': 215
              '298': 46
              '299': 157
              '300': 57
              '301': 3
              '302': 4
              '303': 199
              '304': 99
              '305': 204
              '306': 165
              '307': 169
              '308': 118
              '309': 10
              '310': 99
              '311': 29
              '312': 200
              '313': 87
              '314': 5
              '315': 221
              '316': 107
              '317': 8
              '318': 181
              '319': 15
              '320': 95
              '321': 255
              '322': 125
              '323': 93
              '324': 232
              '325': 215
              '326': 59
              '327': 44
              '328': 235
              '329': 209
              '330': 244
              '331': 195
              '332': 182
              '333': 160
            gasUsed: 167798
            gasWanted: 300000
    OSMOCraftUnstakeTxPayload:
      type: object
      required:
        - pubkey
        - validator
      properties:
        pubkey:
          type: string
          example: 039ce47b2a813d13876131a9c3be77e8c4afa49e948744abbee11f939e2a420f46
          description: Wallet public key (compressed or uncompressed), this is different than the wallet address
        validator:
          type: string
          example: osmovaloper146mj09yzu3mvz7pmy4dvs4z9wr2mst7rq8p8gy
          description: Validator address
        amount_uosmo:
          type: string
          example: '1000000000000000000000000'
          description: Amount to unstake in uOSMO. Omit to unstake all the delegated amount
    OSMOCraftRedelegateTxPayload:
      type: object
      required:
        - account_id
        - pubkey
        - validator_source
        - validator_destination
      properties:
        account_id:
          type: string
          example: b7177fd2-fbb3-479f-aa92-db9fb16e229f
          format: uuid
          description: Kiln Account ID to which the new stake will be linked
        pubkey:
          type: string
          example: 039ce47b2a813d13876131a9c3be77e8c4afa49e948744abbee11f939e2a420f46
          description: Wallet public key (compressed or uncompressed), this is different than the wallet address
        validator_source:
          type: string
          example: osmovaloper146mj09yzu3mvz7pmy4dvs4z9wr2mst7rq8p8gy
          description: Validator source address of current stake
        validator_destination:
          type: string
          example: osmovaloper146mj09yzu3mvz7pmy4dvs4z9wr2mst7rq8p8gy
          description: Validator destination address to which redelegate the stake
        amount_uosmo:
          type: string
          example: '1000000000000000000000000'
          description: Amount to redelegate in uOSMO
    OSMOCraftStakeTxPayload:
      type: object
      required:
        - account_id
        - pubkey
        - validator
        - amount_uosmo
      properties:
        account_id:
          type: string
          example: b7177fd2-fbb3-479f-aa92-db9fb16e229f
          format: uuid
          description: Kiln Account ID to stake into
        pubkey:
          type: string
          example: 039ce47b2a813d13876131a9c3be77e8c4afa49e948744abbee11f939e2a420f46
          description: Wallet public key (compressed or uncompressed), this is different than the wallet address
        validator:
          type: string
          example: osmovaloper146mj09yzu3mvz7pmy4dvs4z9wr2mst7rq8p8gy
          description: Validator address
        amount_uosmo:
          type: string
          example: '1000000000000000000000000'
          description: Amount to stake in uosmo
        restake_rewards:
          type: boolean
          default: false
          description: If enabled, the rewards will be automatically restaked
        grantee_address:
          type: string
          example: cosmos1u4whe0pwlgt7q7ph37qxalq2wfq4pkcdze5fmd
          description: 'Grantee address, this address is specific to each validator. Kiln grantee addresses are found here: https://github.com/eco-stake/validator-registry/blob/master/Kiln/chains.json https://github.com/eco-stake/validator-registry/blob/master/interop/chains.json'
    OSMOCraftRestakeRewardsTxPayload:
      type: object
      required:
        - pubkey
        - validator_address
        - grantee_address
      properties:
        pubkey:
          type: string
          example: 039ce47b2a813d13876131a9c3be77e8c4afa49e948744abbee11f939e2a420f46
          description: Wallet public key (compressed or uncompressed), this is different than the wallet address
        validator_address:
          type: string
          example: osmovaloper146mj09yzu3mvz7pmy4dvs4z9wr2mst7rq8p8gy
          description: Validator address
        grantee_address:
          type: string
          example: cosmos1u4whe0pwlgt7q7ph37qxalq2wfq4pkcdze5fmd
          description: 'Grantee address, this address is specific to each validator. Kiln grantee addresses are found here: https://github.com/eco-stake/validator-registry/blob/master/Kiln/chains.json https://github.com/eco-stake/validator-registry/blob/master/interop/chains.json'
    OSMOCraftWithdrawRewardsTxPayload:
      type: object
      required:
        - pubkey
        - validator
      properties:
        pubkey:
          type: string
          example: 039ce47b2a813d13876131a9c3be77e8c4afa49e948744abbee11f939e2a420f46
          description: Wallet public key (compressed or uncompressed), this is different than the wallet address
        validator:
          type: string
          example: osmovaloper146mj09yzu3mvz7pmy4dvs4z9wr2mst7rq8p8gy
          description: Validator address
    OSMOReward:
      type: object
      required:
        - date
        - rewards
        - balance
        - net_apy
      properties:
        date:
          type: string
          description: Day for this reward entry
          format: date
          example: '2023-01-15'
        rewards:
          type: string
          description: Accumulated rewards in uOSMO during the day
          example: '3575891083876864200000'
        balance:
          type: string
          description: Staked balance in uOSMO at the end of the day
          example: '6300000000000000000000000'
        net_apy:
          type: number
          description: Net annual percentage yield
          example: 20.76
        rewards_usd:
          type: number
          description: Estimated value of rewards generated for that day in USD. The exchange rate is the rate at the end of the day provided by CoinGeckko.
        balance_usd:
          type: number
          description: Estimated value of the staked balance at the beginning of the day in USD. The exchange rate is the rate at the end of the day provided by CoinGeckko.
    OSMOOperationDelegate:
      type: object
      properties:
        type:
          type: string
          description: Operation type
          example: staking.MsgDelegate
        time:
          type: string
          description: Date of the operation
          format: date-time
          example: '2023-06-22T15:35:01.892644Z'
        block:
          type: number
          description: Transaction block
          example: 15828207
        tx_hash:
          type: string
          description: Transaction hash
          example: 7DBC7C481A9A28961BDDF5BCDD47217A126EC0497017908453D71FACA9FA3506
        tx_gas_used:
          type: string
          description: Gas used for the whole transaction in uOSMO
          example: '186733'
        message_index:
          type: number
          description: Index of the message in the transaction
          example: 0
        validator_address:
          type: string
          description: Validator address
          example: osmovaloper146mj09yzu3mvz7pmy4dvs4z9wr2mst7rq8p8gy
        delegator_address:
          type: string
          description: Delegator address
          example: osmo1lnc548nmxqukrvd9czw4tq5vn6kapndg2hzhr3
        amount:
          type: string
          description: Amount added to the staked balance in uOSMO
          example: '3000000'
        withdraw_rewards:
          type: string
          description: Rewards auto-claimed alongside the operation in uOSMO
          example: '10841'
    OSMOOperationUndelegate:
      type: object
      properties:
        type:
          type: string
          description: Operation type
          example: staking.MsgUndelegate
        time:
          type: string
          description: Date of the operation
          format: date-time
          example: '2023-06-22T15:35:01.892644Z'
        block:
          type: number
          description: Transaction block
          example: 15828207
        tx_hash:
          type: string
          description: Transaction hash
          example: 7DBC7C481A9A28961BDDF5BCDD47217A126EC0497017908453D71FACA9FA3506
        tx_gas_used:
          type: string
          description: Gas used for the whole transaction in uOSMO
          example: '186733'
        message_index:
          type: number
          description: Index of the message in the transaction
          example: 0
        validator_address:
          type: string
          description: Validator address
          example: osmovaloper146mj09yzu3mvz7pmy4dvs4z9wr2mst7rq8p8gy
        delegator_address:
          type: string
          description: Delegator address
          example: osmo1lnc548nmxqukrvd9czw4tq5vn6kapndg2hzhr3
        amount:
          type: string
          description: Amount removed from the staked balance in uOSMO
          example: '3000000'
        withdraw_rewards:
          type: string
          description: Rewards auto-claimed alongside the operation in uOSMO
          example: '10841'
    OSMOOperationRedelegate:
      type: object
      properties:
        type:
          type: string
          description: Operation type
          example: staking.MsgBeginRedelegate
        time:
          type: string
          description: Date of the operation
          format: date-time
          example: '2023-06-22T15:35:01.892644Z'
        block:
          type: number
          description: Transaction block
          example: 15828207
        tx_hash:
          type: string
          description: Transaction hash
          example: 7DBC7C481A9A28961BDDF5BCDD47217A126EC0497017908453D71FACA9FA3506
        tx_gas_used:
          type: string
          description: Gas used for the whole transaction in uOSMO
          example: '186733'
        message_index:
          type: number
          description: Index of the message in the transaction
          example: 0
        validator_address:
          type: string
          description: Destination validator address
          example: osmovaloper146mj09yzu3mvz7pmy4dvs4z9wr2mst7rq8p8gy
        validator_address_source:
          type: string
          description: Source validator address
          example: osmovaloper146mj09yzu3mvz7pmy4dvs4z9wr2mst7rq8p8gy
        delegator_address:
          type: string
          description: Delegator address
          example: osmo1lnc548nmxqukrvd9czw4tq5vn6kapndg2hzhr3
        amount:
          type: string
          description: Amount moved from the source validator staked balance to the destination validator staked balance in uOSMO
          example: '3000000'
        withdraw_rewards:
          type: string
          description: Rewards auto-claimed from the destination validator alongside the operation in uOSMO
          example: '10841'
        withdraw_rewards_source:
          type: string
          description: Rewards auto-claimed from the source validator alongside the operation in uOSMO
          example: '10841'
    OSMOOperationWithdrawRewards:
      type: object
      properties:
        type:
          type: string
          description: Operation type
          example: distr.MsgWithdrawDelegatorReward
        time:
          type: string
          description: Date of the operation
          format: date-time
          example: '2023-06-22T15:35:01.892644Z'
        block:
          type: number
          description: Transaction block
          example: 15828207
        tx_hash:
          type: string
          description: Transaction hash
          example: 7DBC7C481A9A28961BDDF5BCDD47217A126EC0497017908453D71FACA9FA3506
        tx_gas_used:
          type: string
          description: Gas used for the whole transaction in uOSMO
          example: '186733'
        message_index:
          type: number
          description: Index of the message in the transaction
          example: 0
        validator_address:
          type: string
          description: Validator address
          example: osmovaloper146mj09yzu3mvz7pmy4dvs4z9wr2mst7rq8p8gy
        delegator_address:
          type: string
          description: Delegator address
          example: osmo1lnc548nmxqukrvd9czw4tq5vn6kapndg2hzhr3
        withdraw_rewards:
          type: string
          description: Rewards claimed alongside the operation in uOSMO
          example: '10841'
    OSMOOperationGrant:
      type: object
      properties:
        type:
          type: string
          description: Operation type
          example: Authz.Grant
        time:
          type: string
          description: Date of the operation
          format: date-time
          example: '2023-06-22T15:35:01.892644Z'
        block:
          type: number
          description: Transaction block
          example: 15828207
        tx_hash:
          type: string
          description: Transaction hash
          example: 7DBC7C481A9A28961BDDF5BCDD47217A126EC0497017908453D71FACA9FA3506
        tx_gas_used:
          type: string
          description: Gas used for the whole transaction in uOSMO
          example: '186733'
        message_index:
          type: number
          description: Index of the message in the transaction
          example: 0
        grantee:
          type: string
          description: Recipient of the permissions
          example: osmo1lnc548nmxqukrvd9czw4tq5vn6kapndg2hzhr3
        granter:
          type: string
          description: Owner of the stake giving the permissions
          example: osmo1lnc548nmxqukrvd9czw4tq5vn6kapndg2hzhr3
        permission:
          type: string
          description: 'Kind of permission been grantee, can be: "Staking.MsgDelegate", "Staking.MsgUndelegate", "Staking.MsgRedelegate" or "Distribution.MsgWithdrawDelegatorReward"'
          example: Staking.MsgDelegate
        allow_list:
          type: array
          items:
            type: string
          nullable: true
          description: List of address on which the granted permission can be applied (ie validator on which delegation is allowed)
          example:
            - osmo1lnc548nmxqukrvd9czw4tq5vn6kapndg2hzhr3
            - osmo1lnc548nmxqukrvd9czw4tq5vn6kapndg2hzhr3
        deny_list:
          type: array
          items:
            type: string
          nullable: true
          description: List of address on which the granted permission cannot be applied (ie validator on which delegation is allowed)
          example:
            - osmo1lnc548nmxqukrvd9czw4tq5vn6kapndg2hzhr3
            - osmo1lnc548nmxqukrvd9czw4tq5vn6kapndg2hzhr3
    OSMOOperationExec:
      type: object
      properties:
        type:
          type: string
          description: Operation type
          example: Authz.Exec
        time:
          type: string
          description: Date of the operation
          format: date-time
          example: '2023-06-22T15:35:01.892644Z'
        block:
          type: number
          description: Transaction block
          example: 15828207
        tx_hash:
          type: string
          description: Transaction hash
          example: 7DBC7C481A9A28961BDDF5BCDD47217A126EC0497017908453D71FACA9FA3506
        tx_gas_used:
          type: string
          description: Gas used for the whole transaction in uOSMO
          example: '186733'
        message_index:
          type: number
          description: Index of the message in the transaction
          example: 0
        executed_operations:
          type: array
          nullable: true
          items:
            type: object
            properties:
              type:
                type: string
                description: Operation type
                example: staking.Delegate
              validator_address:
                type: string
                description: Destination validator address
                example: osmovaloper146mj09yzu3mvz7pmy4dvs4z9wr2mst7rq8p8gy
              validator_address_source:
                type: string
                description: Source validator address
                example: osmovaloper146mj09yzu3mvz7pmy4dvs4z9wr2mst7rq8p8gy
              delegator_address:
                type: string
                description: Delegator address
                example: osmo1lnc548nmxqukrvd9czw4tq5vn6kapndg2hzhr3
              amount:
                type: string
                description: Amount moved from the source validator staked balance to the destination validator staked balance in uOSMO
                example: '3000000'
              withdraw_rewards:
                type: string
                description: Rewards auto-claimed from the destination validator alongside the operation in uOSMO
                example: '10841'
              withdraw_rewards_source:
                type: string
                description: Rewards auto-claimed from the source validator alongside the operation in uOSMO
                example: '10841'
    OSMONetworkStats:
      type: object
      required:
        - osmo_price_usd
        - nb_validators
        - network_gross_apy
        - supply_staked_percent
        - inflation_rate
        - updated_at
      properties:
        osmo_price_usd:
          type: number
          description: Price of Osmosis in USD
          example: 10.53
        nb_validators:
          type: number
          description: Number of validators in the network
          example: 100
        network_gross_apy:
          type: number
          description: Gross annual percentage yield
          example: 4.5
        supply_staked_percent:
          type: number
          description: Supply of Osmosis currently staked
          example: 12.4
        inflation_rate:
          type: number
          description: Osmosis inflation rate
          example: 3.5
        updated_at:
          type: string
          description: Last date this data was updated
          format: date-time
          example: '2023-01-14T01:13:59Z'
    OSMOTxDecoding:
      type: object
      description: Decoded transaction
      example:
        authInfo:
          signerInfos:
            - publicKey:
                typeUrl: /cosmos.crypto.secp256k1.PubKey
                value:
                  '0': 10
                  '1': 33
                  '2': 3
                  '3': 156
                  '4': 228
                  '5': 123
                  '6': 42
                  '7': 129
                  '8': 61
                  '9': 19
                  '10': 135
                  '11': 97
                  '12': 49
                  '13': 169
                  '14': 195
                  '15': 190
                  '16': 119
                  '17': 232
                  '18': 196
                  '19': 175
                  '20': 164
                  '21': 158
                  '22': 148
                  '23': 135
                  '24': 68
                  '25': 171
                  '26': 190
                  '27': 225
                  '28': 31
                  '29': 147
                  '30': 158
                  '31': 42
                  '32': 66
                  '33': 15
                  '34': 70
              modeInfo:
                single:
                  mode: 1
              sequence:
                low: 102
                high: 0
                unsigned: true
          fee:
            amount:
              - denom: uosmo
                amount: '5000'
            gasLimit:
              low: 2000000
              high: 0
              unsigned: true
            payer: ''
            granter: ''
        body:
          messages:
            - typeUrl: /cosmos.staking.v1beta1.MsgDelegate
              value:
                '0': 10
                '1': 45
                '2': 99
                '3': 111
                '4': 115
                '5': 109
                '6': 111
                '7': 115
                '8': 49
                '9': 57
                '10': 99
                '11': 57
                '12': 102
                '13': 100
                '14': 104
                '15': 52
                '16': 56
                '17': 56
                '18': 118
                '19': 113
                '20': 106
                '21': 99
                '22': 108
                '23': 108
                '24': 116
                '25': 119
                '26': 112
                '27': 54
                '28': 56
                '29': 106
                '30': 109
                '31': 53
                '32': 48
                '33': 121
                '34': 100
                '35': 119
                '36': 121
                '37': 104
                '38': 51
                '39': 54
                '40': 106
                '41': 113
                '42': 101
                '43': 97
                '44': 116
                '45': 101
                '46': 118
                '47': 18
                '48': 52
                '49': 99
                '50': 111
                '51': 115
                '52': 109
                '53': 111
                '54': 115
                '55': 118
                '56': 97
                '57': 108
                '58': 111
                '59': 112
                '60': 101
                '61': 114
                '62': 49
                '63': 54
                '64': 121
                '65': 115
                '66': 48
                '67': 101
                '68': 103
                '69': 57
                '70': 51
                '71': 53
                '72': 109
                '73': 107
                '74': 113
                '75': 112
                '76': 107
                '77': 121
                '78': 100
                '79': 107
                '80': 103
                '81': 102
                '82': 99
                '83': 106
                '84': 57
                '85': 97
                '86': 103
                '87': 101
                '88': 50
                '89': 97
                '90': 117
                '91': 56
                '92': 108
                '93': 57
                '94': 54
                '95': 110
                '96': 97
                '97': 101
                '98': 114
                '99': 101
                '100': 57
                '101': 26
                '102': 16
                '103': 10
                '104': 5
                '105': 117
                '106': 97
                '107': 116
                '108': 111
                '109': 109
                '110': 18
                '111': 7
                '112': 49
                '113': 48
                '114': 48
                '115': 48
                '116': 48
                '117': 48
                '118': 48
          memo: ''
          timeoutHeight:
            low: 0
            high: 0
            unsigned: true
          extensionOptions: []
          nonCriticalExtensionOptions: []
        signatures:
          - '0': 116
            '1': 104
            '2': 101
            '3': 116
            '4': 97
            '5': 45
            '6': 116
            '7': 101
            '8': 115
            '9': 116
            '10': 110
            '11': 101
            '12': 116
            '13': 45
            '14': 48
            '15': 48
            '16': 49
    OSMOCraftSendTxPayload:
      type: object
      required:
        - pubkey
        - to
        - amount_uosmo
      properties:
        pubkey:
          type: string
          description: Wallet public key (compressed or uncompressed), this is different than the wallet address
          example: 039ce47b2a813d13876131a9c3be77e8c4afa49e948744abbee11f939e2a420f46
        to:
          type: string
          description: Recipient address
          example: osmo1mfdn23y2ydnp6j3l3f8rw6r2gzazrmprgxn5xl
        amount_uosmo:
          type: string
          description: Amount to send in uosmo
          example: '1000000000000000000000000'
    EGLDStake:
      type: object
      required:
        - wallet
        - validator
        - state
        - delegated_at
        - delegated_epoch
        - balance
        - rewards
        - grr
        - updated_at
      properties:
        wallet:
          type: string
          description: Wallet address of the delegator
          example: erd12mu6jt25v8cqvknug5yxqul8cgmnxf9t3kh7sa2ycphm29kqrlts552srv
        validator:
          type: string
          description: Contract address of the validator
          example: erd1qqqqqqqqqqqqqqqpqqqqqqqqqqqqqqqqqqqqqqqqqqqqqrhlllls062tu4
        state:
          type: string
          description: State of the MultiversX stake
          example: ACTIVE
          enum:
            - ACTIVATING
            - ACTIVE
            - INACTIVE
        delegated_at:
          type: string
          description: Date at which the staking transaction was made, corresponds to the block it was part of.
          format: date-time
          example: '2023-01-14T01:13:59Z'
        delegated_epoch:
          type: integer
          description: Epoch in which the delegation transaction was made
          example: 1105
        undelegated_at:
          type: string
          description: Block time at which the undelegation transaction was made
          format: date-time
          example: '2023-01-14T01:13:59Z'
        undelegated_epoch:
          type: integer
          description: Epoch in which the unstaking transaction was made, corresponds to the block it was part of.
          example: 1105
        balance:
          type: string
          description: Current active balance earning rewards
          example: '32076187808000000000'
        rewards:
          type: string
          description: Sum of rewards earned by this stake since delegation
          example: '76187808000000000'
        grr:
          type: number
          description: Gross annual reward rate
          example: 0.03407
        updated_at:
          type: string
          description: Last date this data was updated
          format: date-time
          example: '2023-01-14T01:13:59Z'
    EGLDRewards:
      type: object
      required:
        - date
        - rewards
        - active_balance
        - grr
      properties:
        date:
          type: string
          description: Day for this reward entry
          format: date
          example: '2023-01-15'
        rewards:
          type: string
          description: Rewards earned for that day
          example: '27098488'
        active_balance:
          type: string
          description: Wallet balance for that day
          example: '420000000000'
        grr:
          type: number
          description: Gross annual reward rate
          example: 0.0342
        rewards_usd:
          type: number
          description: Estimated value of rewards generated for that day in USD. The exchange rate is the rate at the end of the day provided by CoinGeckko.
          example: 2344.36
        active_balance_usd:
          type: number
          description: Estimated value of the active balance of that day in USD. The exchange rate is the rate at the end of the day provided by CoinGeckko.
          example: 4407596.22
    EGLDOperations:
      type: object
      required:
        - sender
        - receiver
        - tx_hash
        - tx_timestamp
        - gas_used
        - type
      properties:
        sender:
          type: string
          description: Wallet address of the sender
          example: erd1exqua32r233fwsxv074dhmp5yw4nz3xnn2kkdayp2wg566janpeqhdayjd
        receiver:
          type: string
          description: Wallet address of the receiver
          example: erd1qqqqqqqqqqqqqqqpqqqqqqqqqqqqqqqqqqqqqqqqqqqqqrhlllls062tu4
        tx_hash:
          type: string
          description: Transaction hash
          example: c03a95f5d9d3c8d6a99c0a22faf78f246b3da6a1d564e52c184b38e735de95a1
        tx_timestamp:
          type: string
          description: Transaction timestamp
          format: date-time
          example: '2024-03-29T11:55:18Z'
        amount:
          type: string
          description: Amount of the operation when applicable
          example: '1120594360000000001'
        gas_used:
          type: string
          description: Gas used for the operation
          example: '6062000'
        type:
          type: string
          description: Type of the operation. i.e. delegate, undelegate, claimRewards, etc.
          example: delegate
          enum:
            - addNodes
            - changeOwner
            - changeServiceFee
            - getAllNodeStates
            - modifyTotalDelegationCap
            - removeNodes
            - reStakeUnStakedNodes
            - setAutomaticActivation
            - setCheckCapOnReDelegateRewards
            - setMetaData
            - stakeNodes
            - synchronizeOwner
            - unBondNodes
            - unJailNodes
            - delegate
            - unStakeNodes
            - whitelistForMerge
            - unDelegate
            - claimRewards
            - reDelegateRewards
            - reward
            - withdraw
    EgldNetworkStats:
      type: object
      required:
        - egld_price_usd
        - nb_validators
        - network_gross_apy
        - supply_staked_percent
        - inflation_rate
        - updated_at
      properties:
        egld_price_usd:
          type: number
          description: MutiversX price in USD
          example: 3.5
        nb_validators:
          type: integer
          description: Number of active validators
          example: 402
        network_gross_apy:
          type: number
          description: Gross annual percentage yield
          example: 4.5
        supply_staked_percent:
          type: number
          description: Supply percentage of EGLD currently staked
          example: 12.4
        inflation_rate:
          type: number
          description: MutiversX inflation rate
          example: 3.5
        updated_at:
          type: string
          description: Last date this data was updated
          nullable: true
          format: date-time
          example: '2023-01-14T01:13:59Z'
    DOTStake:
      type: object
      required:
        - address
        - active_balance
        - net_rewards
        - gross_rewards
        - state
        - net_apy
      properties:
        address:
          type: string
          description: The stake address
          example: 1nXBtBPt3PV35m7Dfgp32xXgrC9tm1Pw7Hk7MDuGAejvB7J
        pool_id:
          type: integer
          description: The pool id associated to the stake address
          example: 118
        active_balance:
          type: string
          description: Current stake balance in Planck
          example: '30004690613'
        unbonding_balance:
          type: string
          description: Current unbonding balance in Planck. Only available for pool members.
          example: '30004690613'
        withdrawable_balance:
          type: string
          description: Current withdrawable balance in Planck. Only available for pool members.
          example: '30004690613'
        net_rewards:
          type: string
          description: Total stake rewards in Planck
          example: '37201548'
        gross_rewards:
          type: string
          description: Total gross rewards in Planck. Only available for kiln pool members. Default to 0.
          example: '37201548'
        withdrawable_rewards:
          type: string
          description: Total withdrawable rewards in Planck. Only available for pool members. Total of rewards that can be claimed from the pool.
          example: '37201548'
        state:
          type: string
          description: State of the stake
          example: active
          enum:
            - active
            - inactive
        net_apy:
          type: number
          description: Annual percentage yield
          example: 0.188014
        delegated_at:
          type: string
          description: Date of the fist delegation
          format: date-time
          example: '2023-01-06T22:00:00Z'
        updated_at:
          type: string
          description: Last date the stake made a bonding operation (bond/unbond)
          format: date-time
          example: '2023-01-14T01:13:59Z'
        undelegated_at:
          type: string
          description: Date of the last undelegation
          format: date-time
          example: '2023-01-06T22:00:00Z'
    DOTRewardByEra:
      type: object
      required:
        - era
        - net_rewards
        - gross_rewards
        - active_balance
        - net_apy
        - gross_apy
      properties:
        net_rewards:
          type: string
          description: Net reward amount in Plancks. This can be verified on chain in an explorer.
          example: '1000000'
        gross_rewards:
          type: string
          description: Gross reward amount in Plancks. This is the amount generated before validator fees. Only available for kiln validator's nominators. Default to 0 if not available.
          example: '1000000'
        era:
          type: integer
          description: Era at which the reward was earned.
          example: 1471
        active_balance:
          type: string
          description: Stake balance in Plancks at the time of reward.
          example: '1000000'
        net_apy:
          type: number
          description: Annual percentage yield projected at the time of reward.
          example: 3.05
        active_balance_usd:
          type: number
          description: Stake balance in USD at the time of reward.
          example: 0.0001
        net_rewards_usd:
          type: number
          description: Net reward amount in USD. This can be verified on chain in an explorer.
          example: 0.0001
        gross_rewards_usd:
          type: number
          description: Gross reward amount in USD. This is the amount generated before validator fees. Only available for kiln validator's nominators. Default to 0 if not available.
          example: 0.0001
    DOTRewardByDay:
      type: object
      required:
        - date
        - net_rewards
        - gross_rewards
        - active_balance
        - net_apy
        - gross_apy
      properties:
        net_rewards:
          type: string
          description: Net reward amount in Plancks. This can be verified on chain in an explorer.
          example: '1000000'
        gross_rewards:
          type: string
          description: Gross reward amount in Plancks. This is the amount generated before validator fees. Only available for kiln validator's nominators. Default to 0 if not available.
          example: '1000000'
        date:
          type: string
          description: Date at which the reward was earned.
          example: '2023-01-06'
        active_balance:
          type: string
          description: Stake balance in Plancks at the time of reward.
          example: '1000000'
        net_apy:
          type: number
          description: Annual percentage yield projected at the time of reward minus validator fees.
          example: 3.05
        gross_apy:
          type: number
          description: Annual percentage yield projected at the time of reward before validator fees. Only available for kiln validator's nominators. Default to 0 if not available.
          example: 3.05
        active_balance_usd:
          type: number
          description: Stake balance in USD at the time of reward.
          example: 0.0001
        net_rewards_usd:
          type: number
          description: Net reward amount in USD. This can be verified on chain in an explorer.
          example: 0.0001
        gross_rewards_usd:
          type: number
          description: Gross reward amount in USD. This is the amount generated before validator fees. Only available for kiln validator's nominators. Default to 0 if not available.
          example: 0.0001
    DOTOperationStaking:
      type: object
      required:
        - type
        - block_number
        - block_time
        - tx_hash
        - extrinsic_seq_id
        - event_seq_id
        - amount
        - address
      properties:
        type:
          type: string
          description: The operation type
          example: staking.bonded
        block_number:
          type: number
          description: Block number of the event
          example: 15828207
        block_time:
          type: string
          description: Block timestamp of the event
          format: date-time
          example: '2023-06-22T15:35:01.892644Z'
        tx_hash:
          type: string
          description: Hash of the transaction. Also named extrinsinc_hash.
          example: '0xf476bc1b633528a2cfbb1c959755318bed1c6825d7bb6b89d7ffc1026066f17c'
        extrinsic_seq_id:
          type: number
          description: Extrinsic sequence id of the event
          example: 4
        event_seq_id:
          type: number
          description: Event sequence id of the event
          example: 42
        amount:
          type: string
          description: Amount added or removed from the staked balance in Planck
          example: '3000000'
        address:
          type: string
          description: Address that originated the operation
          example: 13UVJyLnbVp8c4FQeiGL1CZxAHdBYCemjgkAyN8AcRcDJtNr
        validator:
          type: string
          description: Validator address
          example: 1497QNdycmxqMi3VJDxZDhaJh4s9tytr5RFWyrLcNse2xqPD
        pool_id:
          type: integer
          description: Pool id associated. Only available for pool members
          example: '118'
        earned_era:
          type: integer
          description: Era at which the reward was earned. Only available for nominators rewards (solo or pool).
          example: '1403'
        era:
          type: integer
          description: Era at which the operation was executed. Only available for rewards.
          example: '1404'
    DOTNetworkStats:
      type: object
      required:
        - dot_price_usd
        - inflation_rate
        - nb_validators
        - network_gross_apy
        - supply_staked_percent
        - updated_at
      properties:
        dot_price_usd:
          type: number
          description: Polkadot price in USD
          example: 3.5
        nb_validators:
          type: number
          description: Number of validators in the network
          example: 100
        network_gross_apy:
          type: number
          description: Gross annual percentage yield
          example: 4.5
        supply_staked_percent:
          type: number
          description: Supply of Polkadot currently staked
          example: 12.4
        inflation_rate:
          type: number
          description: Polkadot inflation rate
          example: 3.5
        updated_at:
          type: string
          description: Last date this data was updated
          format: date-time
          example: '2023-01-14T01:13:59Z'
    DOTSignedTx:
      type: object
      required:
        - signed_tx_serialized
      properties:
        signed_tx_serialized:
          type: string
          description: Signed serialized transaction
          example: '0xc1018400373c6f8e84c6822a9f87035f65cccf899eef3fcdee61077041a93e1805bab24e00ce178c21ced7677c58ebfb93496dd0a305581bfead9d1e1d7834dd8448dd81612a24548a8650650bb75747b5bfd5fc9373903cacf81bfabed7ae05e53dd5ae0fc5001901000601070010a5d4e8'
    DOTBroadcastTxPayload:
      type: object
      required:
        - tx_serialized
      properties:
        tx_serialized:
          type: string
          description: Signed serialized transaction
          example: '0xc1018400373c6f8e84c6822a9f87035f65cccf899eef3fcdee61077041a93e1805bab24e00ce178c21ced7677c58ebfb93496dd0a305581bfead9d1e1d7834dd8448dd81612a24548a8650650bb75747b5bfd5fc9373903cacf81bfabed7ae05e53dd5ae0fc5001901000601070010a5d4e8'
    DOTBroadcastedTx:
      type: object
      required:
        - tx_hash
      properties:
        tx_hash:
          type: string
          description: Hash of the transaction
          example: '0x1b9097a6e3d50066348cb173f3150546457a6188fada6a3a40d571798da1a53c'
    DOTTxStatus:
      type: object
      properties:
        code:
          type: integer
          description: Request status code
          example: 0
        message:
          type: string
          description: Request status message
          example: Success
        generated_at:
          type: integer
          description: Timestamp at which the request was generated
          example: 1697471079
        data:
          type: object
          description: Transaction data
          example:
            block_timestamp: 1697211912
            block_num: 17860727
            extrinsic_index: 17860727-2
            call_module_function: join
            call_module: nominationpools
            account_id: 5DK8ShqtyuVk2w4qrF9HwaBJoiZV1byQs5ARZ3df2Pt8V6Vj
            signature: '0x3e80f71312c759ebffeea594f48c0f66cd276e821b37496bef98ef760ee58a6c6289a9656c32a3f23146cdf6d07f9ef9d046c669570d4e4e778b87de43106b06'
            nonce: 80
            extrinsic_hash: '0x1b9097a6e3d50066348cb173f3150546457a6188fada6a3a40d571798da1a53c'
            success: false
            params:
              - name: amount
                type: compact<U128>
                type_name: BalanceOf
                value: '100000000000'
              - name: pool_id
                type: U32
                type_name: PoolId
                value: 1
            transfer: null
            event:
              - event_index: 17860727-2
                block_num: 17860727
                extrinsic_idx: 2
                module_id: balances
                event_id: Withdraw
                params: '[{"type":"[U8; 32]","type_name":"AccountId","value":"0x373c6f8e84c6822a9f87035f65cccf899eef3fcdee61077041a93e1805bab24e","name":"who"},{"type":"U128","type_name":"Balance","value":"14717944072","name":"amount"}]'
                phase: 0
                event_idx: 5
                extrinsic_hash: '0x1b9097a6e3d50066348cb173f3150546457a6188fada6a3a40d571798da1a53c'
                finalized: true
                block_timestamp: 0
              - event_index: 17860727-2
                block_num: 17860727
                extrinsic_idx: 2
                module_id: balances
                event_id: Deposit
                params: '[{"type":"[U8; 32]","type_name":"AccountId","value":"0x767f36484b1e2acf5c265c7a64bfb46e95259c66a8189bbcd216195def436852","name":"who"},{"type":"U128","type_name":"Balance","value":"14717944072","name":"amount"}]'
                phase: 0
                event_idx: 6
                extrinsic_hash: '0x1b9097a6e3d50066348cb173f3150546457a6188fada6a3a40d571798da1a53c'
                finalized: true
                block_timestamp: 0
              - event_index: 17860727-2
                block_num: 17860727
                extrinsic_idx: 2
                module_id: transactionpayment
                event_id: TransactionFeePaid
                params: '[{"type":"[U8; 32]","type_name":"AccountId","value":"0x373c6f8e84c6822a9f87035f65cccf899eef3fcdee61077041a93e1805bab24e","name":"who"},{"type":"U128","type_name":"BalanceOf","value":"14717944072","name":"actual_fee"},{"type":"U128","type_name":"BalanceOf","value":"0","name":"tip"}]'
                phase: 0
                event_idx: 7
                extrinsic_hash: '0x1b9097a6e3d50066348cb173f3150546457a6188fada6a3a40d571798da1a53c'
                finalized: true
                block_timestamp: 0
              - event_index: 17860727-2
                block_num: 17860727
                extrinsic_idx: 2
                module_id: system
                event_id: ExtrinsicFailed
                params: '[{"type":"sp_runtime:DispatchError","type_name":"DispatchError","value":{"Module":{"error":"0x04000000","index":29}},"name":"dispatch_error"},{"type":"frame_support:dispatch:DispatchInfo","type_name":"DispatchInfo","value":{"class":"Normal","pays_fee":"Yes","weight":{"proof_size":8877,"ref_time":1949112000}},"name":"dispatch_info"}]'
                phase: 0
                event_idx: 8
                extrinsic_hash: '0x1b9097a6e3d50066348cb173f3150546457a6188fada6a3a40d571798da1a53c'
                finalized: true
                block_timestamp: 0
            event_count: 4
            fee: '14717944072'
            fee_used: '14717944072'
            error:
              module: NominationPools
              name: AccountBelongsToOtherPool
              doc: An account is already delegating in another pool. An account may only belong to one,pool at a time.
              value: ''
              batch_index: -1
            finalized: true
            lifetime:
              birth: 17860724
              death: 17860788
            tip: '0'
            account_display:
              address: 5DK8ShqtyuVk2w4qrF9HwaBJoiZV1byQs5ARZ3df2Pt8V6Vj
            block_hash: '0x60f526ec0e82a958f6d72e9b9b9d1be392c079bf0c7248e309dd899134add9ee'
            pending: false
    DOTPrepareTxPayload:
      type: object
      required:
        - unsigned_tx_serialized
        - signature
      properties:
        unsigned_tx_serialized:
          type: string
          description: Unsigned serialized transaction
          example: '0x20a40259b763d549dfa1c082776a036dd8dabbe8b5e32ee721be017512dc'
        signature:
          type: string
          description: Signature of the transaction
          example: '0x00ce178c21ced7677c58ebfb93496dd0a305581bfead9d1e1d7834dd8448dd81612a24548a8650650bb75747b5bfd5fc9373903cacf81bfabed7ae05e53dd5ae0f'
    DOTUnsignedTx:
      type: object
      required:
        - unsigned_tx_payload
        - unsigned_tx_serialized
        - unsigned_tx
      properties:
        unsigned_tx_payload:
          type: string
          description: Hash of the unsigned transaction payload to sign
          example: '0x0600070010a5d4e803373c6f8e84c6822a9f87035f65cccf899eef3fcdee61077041a93e1805bab24eb5001d0100d624000016000000e143f23803ac50e8f6f8e62695d1ce9e4e1d68aa36c1cd2cfd15340213f3423e28c36af0145fcb9c878851016179049f057988bc805990732fda56d45c48e125'
        unsigned_tx_serialized:
          type: string
          description: Unsigned serialized transaction
          example: 7b2261646472657373223a2235444b38536871747975566b32773471724639487761424a6f695a5631627951733541525a336466325074385636566a222c2261737365744964223a302c22626c6f636b48617368223a22307832386333366166303134356663623963383738383531303136313739303439663035373938386263383035393930373332666461353664343563343865313235222c22626c6f636b4e756d626572223a2230783031313035303862222c22657261223a22307862353030222c2267656e6573697348617368223a22307865313433663233383033616335306538663666386536323639356431636539653465316436386161333663316364326366643135333430323133663334323365222c226d65746164617461527063223a223078222c226d6574686f64223a22307830363030303730303130613564346538303333373363366638653834633638323261396638373033356636356363636638393965656633666364656536313037373034316139336531383035626162323465222c226e6f6e6365223a2230783030303030303437222c227369676e6564457874656e73696f6e73223a5b22436865636b4e6f6e5a65726f53656e646572222c22436865636b5370656356657273696f6e222c22436865636b547856657273696f6e222c22436865636b47656e65736973222c22436865636b4d6f7274616c697479222c22436865636b4e6f6e6365222c22436865636b576569676874222c224368617267655472616e73616374696f6e5061796d656e74225d2c227370656356657273696f6e223a2230783030303032346436222c22746970223a2230783030303030303030303030303030303030303030303030303030303030303030222c227472616e73616374696f6e56657273696f6e223a2230783030303030303136222c2276657273696f6e223a347d
        unsigned_tx:
          type: object
          description: Transaction payload
          example:
            blockHash: '0x28c36af0145fcb9c878851016179049f057988bc805990732fda56d45c48e125'
            eraPeriod: 64
            genesisHash: '0xe143f23803ac50e8f6f8e62695d1ce9e4e1d68aa36c1cd2cfd15340213f3423e'
            metadataRpc: 0x
            method:
              args:
                value: '1000000000000'
                payee:
                  account: 5DK8ShqtyuVk2w4qrF9HwaBJoiZV1byQs5ARZ3df2Pt8V6Vj
              name: bond
              pallet: staking
            nonce: 71
            specVersion: 9430
            tip: 0
            transactionVersion: 22
    DOTCraftBondTxPayload:
      type: object
      required:
        - account_id
        - stash_account
        - amount_planck
        - reward_destination
      properties:
        account_id:
          type: string
          format: uuid
          example: b7177fd2-fbb3-479f-aa92-db9fb16e229f
          description: Kiln Account ID to stake into
        stash_account:
          type: string
          example: 5DK8ShqtyuVk2w4qrF9HwaBJoiZV1byQs5ARZ3df2Pt8V6Vj
          description: Wallet address controlling the stake
        amount_planck:
          type: string
          example: '100000'
          description: Amount in planck
        reward_destination:
          type: string
          example: Staked
          description: Reward destination address. You can also set it to "Stash" to accumulate rewards in the stash account or "Staked" to accumulate rewards in the stash account and stake them (auto-compounding).
    DOTCraftBondExtraTxPayload:
      type: object
      required:
        - stash_account
        - amount_planck
      properties:
        stash_account:
          type: string
          example: 5DK8ShqtyuVk2w4qrF9HwaBJoiZV1byQs5ARZ3df2Pt8V6Vj
          description: Wallet address controlling the stake
        amount_planck:
          type: string
          example: '100000'
          description: Amount in planck
    DOTCraftRebondTxPayload:
      type: object
      required:
        - stash_account
        - amount_planck
      properties:
        stash_account:
          type: string
          example: 5DK8ShqtyuVk2w4qrF9HwaBJoiZV1byQs5ARZ3df2Pt8V6Vj
          description: Wallet address controlling the stake
        amount_planck:
          type: string
          example: '100000'
          description: Amount in planck
    DOTCraftUnbondTxPayload:
      type: object
      required:
        - stash_account
        - amount_planck
      properties:
        stash_account:
          type: string
          example: 5DK8ShqtyuVk2w4qrF9HwaBJoiZV1byQs5ARZ3df2Pt8V6Vj
          description: Wallet address controlling the stake
        amount_planck:
          type: string
          example: '100000'
          description: Amount in planck
    DOTCraftNominateTxPayload:
      type: object
      required:
        - stash_account
        - validator_addresses
      properties:
        stash_account:
          type: string
          example: 5DK8ShqtyuVk2w4qrF9HwaBJoiZV1byQs5ARZ3df2Pt8V6Vj
          description: Wallet address controlling the stake
        validator_addresses:
          type: array
          description: List of validator addresses to nominate
          items:
            type: string
            example: 5FEjMPSs4X2XNes7QRH6eLmaYCskHdnYM8Zv2kKrBrhnzGbR
    DOTCraftWithdrawUnbondedTxPayload:
      type: object
      required:
        - stash_account
      properties:
        stash_account:
          type: string
          example: 5DK8ShqtyuVk2w4qrF9HwaBJoiZV1byQs5ARZ3df2Pt8V6Vj
          description: Wallet address controlling the stake
    DOTCraftChillTxPayload:
      type: object
      required:
        - stash_account
      properties:
        stash_account:
          type: string
          example: 5DK8ShqtyuVk2w4qrF9HwaBJoiZV1byQs5ARZ3df2Pt8V6Vj
          description: Wallet address controlling the stake
    DOTCraftSetPayeeTxPayload:
      type: object
      required:
        - stash_account
        - reward_destination
      properties:
        stash_account:
          type: string
          example: 5DK8ShqtyuVk2w4qrF9HwaBJoiZV1byQs5ARZ3df2Pt8V6Vj
          description: Wallet address controlling the stake
        reward_destination:
          type: string
          example: Staked
          description: Reward destination address. You can also set it to "Stash" to accumulate rewards in the stash account or "Staked" to accumulate rewards in the stash account and stake them (auto-compounding).
    DOTCraftJoinPoolTxPayload:
      type: object
      required:
        - account_id
        - member_account
        - amount_planck
        - pool_id
      properties:
        account_id:
          type: string
          format: uuid
          example: b7177fd2-fbb3-479f-aa92-db9fb16e229f
          description: Kiln Account ID to stake into
        member_account:
          type: string
          example: 5DK8ShqtyuVk2w4qrF9HwaBJoiZV1byQs5ARZ3df2Pt8V6Vj
          description: Wallet address controlling the stake
        amount_planck:
          type: string
          example: '100000'
          description: Amount in planck
        pool_id:
          type: string
          example: '118'
          description: Id of the pool to join. This can be found on explorers like [Subscan](https://polkadot.subscan.io/nomination_pool/118)
    DOTCraftBondExtraToPoolTxPayload:
      type: object
      required:
        - member_account
        - amount_planck
      properties:
        member_account:
          type: string
          example: 5DK8ShqtyuVk2w4qrF9HwaBJoiZV1byQs5ARZ3df2Pt8V6Vj
          description: Wallet address controlling the stake
        amount_planck:
          type: string
          example: '100000'
          description: Amount in planck
    DOTCraftBondRewardsToPoolTxPayload:
      type: object
      required:
        - member_account
      properties:
        member_account:
          type: string
          example: 5DK8ShqtyuVk2w4qrF9HwaBJoiZV1byQs5ARZ3df2Pt8V6Vj
          description: Wallet address controlling the stake
    DOTCraftClaimPayoutFromPoolTxPayload:
      type: object
      required:
        - member_account
      properties:
        member_account:
          type: string
          example: 5DK8ShqtyuVk2w4qrF9HwaBJoiZV1byQs5ARZ3df2Pt8V6Vj
          description: Wallet address controlling the stake
    DOTCraftUnbondFromPoolTxPayload:
      type: object
      required:
        - member_account
        - amount_planck
      properties:
        member_account:
          type: string
          example: 5DK8ShqtyuVk2w4qrF9HwaBJoiZV1byQs5ARZ3df2Pt8V6Vj
          description: Wallet address controlling the stake
        amount_planck:
          type: string
          example: '100000'
          description: Amount in planck
    DOTCraftWithdrawUnbondedFromPoolTxPayload:
      type: object
      required:
        - member_account
      properties:
        member_account:
          type: string
          example: 5DK8ShqtyuVk2w4qrF9HwaBJoiZV1byQs5ARZ3df2Pt8V6Vj
          description: Wallet address controlling the stake
    KSMStake:
      type: object
      required:
        - address
        - active_balance
        - net_rewards
        - gross_rewards
        - state
        - net_apy
      properties:
        address:
          type: string
          description: The stake address
          example: 1nXBtBPt3PV35m7Dfgp32xXgrC9tm1Pw7Hk7MDuGAejvB7J
        pool_id:
          type: integer
          description: The pool id associated to the stake address
          example: 118
        active_balance:
          type: string
          description: Current stake balance in Planck
          example: '30004690613'
        unbonding_balance:
          type: string
          description: Current unbonding balance in Planck. Only available for pool members.
          example: '30004690613'
        withdrawable_balance:
          type: string
          description: Current withdrawable balance in Planck. Only available for pool members.
          example: '30004690613'
        net_rewards:
          type: string
          description: Total stake rewards in Planck
          example: '37201548'
        gross_rewards:
          type: string
          description: Total gross rewards in Planck. Only available for kiln pool members. Default to 0.
          example: '37201548'
        withdrawable_rewards:
          type: string
          description: Total withdrawable rewards in Planck. Only available for pool members. Total of rewards that can be claimed from the pool.
          example: '37201548'
        state:
          type: string
          description: State of the stake
          example: active
          enum:
            - active
            - inactive
        net_apy:
          type: number
          description: Annual percentage yield
          example: 0.188014
        delegated_at:
          type: string
          description: Date of the fist delegation
          format: date-time
          example: '2023-01-06T22:00:00Z'
        updated_at:
          type: string
          description: Last date the stake made a bonding operation (bond/unbond)
          format: date-time
          example: '2023-01-14T01:13:59Z'
        undelegated_at:
          type: string
          description: Date of the last undelegation
          format: date-time
          example: '2023-01-06T22:00:00Z'
    KSMRewardByEra:
      type: object
      required:
        - era
        - net_rewards
        - gross_rewards
        - active_balance
        - net_apy
        - gross_apy
      properties:
        net_rewards:
          type: string
          description: Net reward amount in Plancks. This can be verified on chain in an explorer.
          example: '1000000'
        gross_rewards:
          type: string
          description: Gross reward amount in Plancks. This is the amount generated before validator fees. Only available for kiln validator's nominators. Default to 0 if not available.
          example: '1000000'
        era:
          type: integer
          description: Era at which the reward was earned.
          example: 1471
        active_balance:
          type: string
          description: Stake balance in Plancks at the time of reward.
          example: '1000000'
        net_apy:
          type: number
          description: Annual percentage yield projected at the time of reward.
          example: 3.05
        active_balance_usd:
          type: number
          description: Stake balance in USD at the time of reward.
          example: 0.0001
        net_rewards_usd:
          type: number
          description: Net reward amount in USD. This can be verified on chain in an explorer.
          example: 0.0001
        gross_rewards_usd:
          type: number
          description: Gross reward amount in USD. This is the amount generated before validator fees. Only available for kiln validator's nominators. Default to 0 if not available.
          example: 0.0001
    KSMRewardByDay:
      type: object
      required:
        - date
        - net_rewards
        - gross_rewards
        - active_balance
        - net_apy
        - gross_apy
      properties:
        net_rewards:
          type: string
          description: Net reward amount in Plancks. This can be verified on chain in an explorer.
          example: '1000000'
        gross_rewards:
          type: string
          description: Gross reward amount in Plancks. This is the amount generated before validator fees. Only available for kiln validator's nominators. Default to 0 if not available.
          example: '1000000'
        date:
          type: string
          description: Date at which the reward was earned.
          example: '2023-01-06'
        active_balance:
          type: string
          description: Stake balance in Plancks at the time of reward.
          example: '1000000'
        net_apy:
          type: number
          description: Annual percentage yield projected at the time of reward minus validator fees.
          example: 3.05
        gross_apy:
          type: number
          description: Annual percentage yield projected at the time of reward before validator fees. Only available for kiln validator's nominators. Default to 0 if not available.
          example: 3.05
        active_balance_usd:
          type: number
          description: Stake balance in USD at the time of reward.
          example: 0.0001
        net_rewards_usd:
          type: number
          description: Net reward amount in USD. This can be verified on chain in an explorer.
          example: 0.0001
        gross_rewards_usd:
          type: number
          description: Gross reward amount in USD. This is the amount generated before validator fees. Only available for kiln validator's nominators. Default to 0 if not available.
          example: 0.0001
    KSMOperationStaking:
      type: object
      required:
        - type
        - block_number
        - block_time
        - tx_hash
        - extrinsic_seq_id
        - event_seq_id
        - amount
        - address
      properties:
        type:
          type: string
          description: The operation type
          example: staking.bonded
        block_number:
          type: number
          description: Block number of the event
          example: 15828207
        block_time:
          type: string
          description: Block timestamp of the event
          format: date-time
          example: '2023-06-22T15:35:01.892644Z'
        tx_hash:
          type: string
          description: Hash of the transaction. Also named extrinsinc_hash.
          example: '0xf476bc1b633528a2cfbb1c959755318bed1c6825d7bb6b89d7ffc1026066f17c'
        extrinsic_seq_id:
          type: number
          description: Extrinsic sequence id of the event
          example: 4
        event_seq_id:
          type: number
          description: Event sequence id of the event
          example: 42
        amount:
          type: string
          description: Amount added or removed from the staked balance in Planck
          example: '3000000'
        address:
          type: string
          description: Address that originated the operation
          example: F3opxRbN5ZavB4LTn2PZNFRrF6pirwvYPbXnJKYNAmutiPY
        validator:
          type: string
          description: Validator address
          example: FV3za2fceAXtw4KwVnPJK4c4Y2ph8VNMEA26MkgjTaEA76u
        pool_id:
          type: integer
          description: Pool id associated. Only available for pool members
          example: '131'
        earned_era:
          type: integer
          description: Era at which the reward was earned. Only available for nominators rewards (solo or pool).
          example: '1403'
        era:
          type: integer
          description: Era at which the operation was executed. Only available for rewards.
          example: '1404'
    KSMNetworkStats:
      type: object
      required:
        - ksm_price_usd
        - inflation_rate
        - nb_validators
        - network_gross_apy
        - supply_staked_percent
        - updated_at
      properties:
        ksm_price_usd:
          type: number
          description: Kusama price in USD
          example: 3.5
        nb_validators:
          type: number
          description: Number of validators in the network
          example: 100
        network_gross_apy:
          type: number
          description: Gross annual percentage yield
          example: 4.5
        supply_staked_percent:
          type: number
          description: Supply of Kusama currently staked
          example: 12.4
        inflation_rate:
          type: number
          description: Kusama inflation rate
          example: 3.5
        updated_at:
          type: string
          description: Last date this data was updated
          format: date-time
          example: '2023-01-14T01:13:59Z'
    KSMSignedTx:
      type: object
      required:
        - signed_tx_serialized
      properties:
        signed_tx_serialized:
          type: string
          description: Signed serialized transaction
          example: '0xc1018400373c6f8e84c6822a9f87035f65cccf899eef3fcdee61077041a93e1805bab24e00ce178c21ced7677c58ebfb93496dd0a305581bfead9d1e1d7834dd8448dd81612a24548a8650650bb75747b5bfd5fc9373903cacf81bfabed7ae05e53dd5ae0fc5001901000601070010a5d4e8'
    KSMBroadcastTxPayload:
      type: object
      required:
        - tx_serialized
      properties:
        tx_serialized:
          type: string
          description: Signed serialized transaction
          example: '0xc1018400373c6f8e84c6822a9f87035f65cccf899eef3fcdee61077041a93e1805bab24e00ce178c21ced7677c58ebfb93496dd0a305581bfead9d1e1d7834dd8448dd81612a24548a8650650bb75747b5bfd5fc9373903cacf81bfabed7ae05e53dd5ae0fc5001901000601070010a5d4e8'
    KSMBroadcastedTx:
      type: object
      required:
        - tx_hash
      properties:
        tx_hash:
          type: string
          description: Hash of the transaction
          example: '0x1b9097a6e3d50066348cb173f3150546457a6188fada6a3a40d571798da1a53c'
    KSMTxStatus:
      type: object
      properties:
        code:
          type: integer
          description: Request status code
          example: 0
        message:
          type: string
          description: Request status message
          example: Success
        generated_at:
          type: integer
          description: Timestamp at which the request was generated
          example: 1697471079
        data:
          type: object
          description: Transaction data
          example:
            block_timestamp: 1697211912
            block_num: 17860727
            extrinsic_index: 17860727-2
            call_module_function: join
            call_module: nominationpools
            account_id: 5DK8ShqtyuVk2w4qrF9HwaBJoiZV1byQs5ARZ3df2Pt8V6Vj
            signature: '0x3e80f71312c759ebffeea594f48c0f66cd276e821b37496bef98ef760ee58a6c6289a9656c32a3f23146cdf6d07f9ef9d046c669570d4e4e778b87de43106b06'
            nonce: 80
            extrinsic_hash: '0x1b9097a6e3d50066348cb173f3150546457a6188fada6a3a40d571798da1a53c'
            success: false
            params:
              - name: amount
                type: compact<U128>
                type_name: BalanceOf
                value: '100000000000'
              - name: pool_id
                type: U32
                type_name: PoolId
                value: 1
            transfer: null
            event:
              - event_index: 17860727-2
                block_num: 17860727
                extrinsic_idx: 2
                module_id: balances
                event_id: Withdraw
                params: '[{"type":"[U8; 32]","type_name":"AccountId","value":"0x373c6f8e84c6822a9f87035f65cccf899eef3fcdee61077041a93e1805bab24e","name":"who"},{"type":"U128","type_name":"Balance","value":"14717944072","name":"amount"}]'
                phase: 0
                event_idx: 5
                extrinsic_hash: '0x1b9097a6e3d50066348cb173f3150546457a6188fada6a3a40d571798da1a53c'
                finalized: true
                block_timestamp: 0
              - event_index: 17860727-2
                block_num: 17860727
                extrinsic_idx: 2
                module_id: balances
                event_id: Deposit
                params: '[{"type":"[U8; 32]","type_name":"AccountId","value":"0x767f36484b1e2acf5c265c7a64bfb46e95259c66a8189bbcd216195def436852","name":"who"},{"type":"U128","type_name":"Balance","value":"14717944072","name":"amount"}]'
                phase: 0
                event_idx: 6
                extrinsic_hash: '0x1b9097a6e3d50066348cb173f3150546457a6188fada6a3a40d571798da1a53c'
                finalized: true
                block_timestamp: 0
              - event_index: 17860727-2
                block_num: 17860727
                extrinsic_idx: 2
                module_id: transactionpayment
                event_id: TransactionFeePaid
                params: '[{"type":"[U8; 32]","type_name":"AccountId","value":"0x373c6f8e84c6822a9f87035f65cccf899eef3fcdee61077041a93e1805bab24e","name":"who"},{"type":"U128","type_name":"BalanceOf","value":"14717944072","name":"actual_fee"},{"type":"U128","type_name":"BalanceOf","value":"0","name":"tip"}]'
                phase: 0
                event_idx: 7
                extrinsic_hash: '0x1b9097a6e3d50066348cb173f3150546457a6188fada6a3a40d571798da1a53c'
                finalized: true
                block_timestamp: 0
              - event_index: 17860727-2
                block_num: 17860727
                extrinsic_idx: 2
                module_id: system
                event_id: ExtrinsicFailed
                params: '[{"type":"sp_runtime:DispatchError","type_name":"DispatchError","value":{"Module":{"error":"0x04000000","index":29}},"name":"dispatch_error"},{"type":"frame_support:dispatch:DispatchInfo","type_name":"DispatchInfo","value":{"class":"Normal","pays_fee":"Yes","weight":{"proof_size":8877,"ref_time":1949112000}},"name":"dispatch_info"}]'
                phase: 0
                event_idx: 8
                extrinsic_hash: '0x1b9097a6e3d50066348cb173f3150546457a6188fada6a3a40d571798da1a53c'
                finalized: true
                block_timestamp: 0
            event_count: 4
            fee: '14717944072'
            fee_used: '14717944072'
            error:
              module: NominationPools
              name: AccountBelongsToOtherPool
              doc: An account is already delegating in another pool. An account may only belong to one,pool at a time.
              value: ''
              batch_index: -1
            finalized: true
            lifetime:
              birth: 17860724
              death: 17860788
            tip: '0'
            account_display:
              address: 5DK8ShqtyuVk2w4qrF9HwaBJoiZV1byQs5ARZ3df2Pt8V6Vj
            block_hash: '0x60f526ec0e82a958f6d72e9b9b9d1be392c079bf0c7248e309dd899134add9ee'
            pending: false
    KSMPrepareTxPayload:
      type: object
      required:
        - unsigned_tx_serialized
        - signature
      properties:
        unsigned_tx_serialized:
          type: string
          description: Unsigned serialized transaction
          example: '0x20a40259b763d549dfa1c082776a036dd8dabbe8b5e32ee721be017512dc'
        signature:
          type: string
          description: Signature of the transaction
          example: '0x00ce178c21ced7677c58ebfb93496dd0a305581bfead9d1e1d7834dd8448dd81612a24548a8650650bb75747b5bfd5fc9373903cacf81bfabed7ae05e53dd5ae0f'
    KSMUnsignedTx:
      type: object
      required:
        - unsigned_tx_payload
        - unsigned_tx_serialized
        - unsigned_tx
      properties:
        unsigned_tx_payload:
          type: string
          description: Hash of the unsigned transaction payload to sign
          example: '0x0600070010a5d4e803373c6f8e84c6822a9f87035f65cccf899eef3fcdee61077041a93e1805bab24eb5001d0100d624000016000000e143f23803ac50e8f6f8e62695d1ce9e4e1d68aa36c1cd2cfd15340213f3423e28c36af0145fcb9c878851016179049f057988bc805990732fda56d45c48e125'
        unsigned_tx_serialized:
          type: string
          description: Unsigned serialized transaction
          example: 7b2261646472657373223a2235444b38536871747975566b32773471724639487761424a6f695a5631627951733541525a336466325074385636566a222c2261737365744964223a302c22626c6f636b48617368223a22307832386333366166303134356663623963383738383531303136313739303439663035373938386263383035393930373332666461353664343563343865313235222c22626c6f636b4e756d626572223a2230783031313035303862222c22657261223a22307862353030222c2267656e6573697348617368223a22307865313433663233383033616335306538663666386536323639356431636539653465316436386161333663316364326366643135333430323133663334323365222c226d65746164617461527063223a223078222c226d6574686f64223a22307830363030303730303130613564346538303333373363366638653834633638323261396638373033356636356363636638393965656633666364656536313037373034316139336531383035626162323465222c226e6f6e6365223a2230783030303030303437222c227369676e6564457874656e73696f6e73223a5b22436865636b4e6f6e5a65726f53656e646572222c22436865636b5370656356657273696f6e222c22436865636b547856657273696f6e222c22436865636b47656e65736973222c22436865636b4d6f7274616c697479222c22436865636b4e6f6e6365222c22436865636b576569676874222c224368617267655472616e73616374696f6e5061796d656e74225d2c227370656356657273696f6e223a2230783030303032346436222c22746970223a2230783030303030303030303030303030303030303030303030303030303030303030222c227472616e73616374696f6e56657273696f6e223a2230783030303030303136222c2276657273696f6e223a347d
        unsigned_tx:
          type: object
          description: Transaction payload
          example:
            blockHash: '0x28c36af0145fcb9c878851016179049f057988bc805990732fda56d45c48e125'
            eraPeriod: 64
            genesisHash: '0xe143f23803ac50e8f6f8e62695d1ce9e4e1d68aa36c1cd2cfd15340213f3423e'
            metadataRpc: 0x
            method:
              args:
                value: '1000000000000'
                payee:
                  account: 5DK8ShqtyuVk2w4qrF9HwaBJoiZV1byQs5ARZ3df2Pt8V6Vj
              name: bond
              pallet: staking
            nonce: 71
            specVersion: 9430
            tip: 0
            transactionVersion: 22
    KSMCraftBondTxPayload:
      type: object
      required:
        - account_id
        - stash_account
        - amount_planck
        - reward_destination
      properties:
        account_id:
          type: string
          format: uuid
          example: b7177fd2-fbb3-479f-aa92-db9fb16e229f
          description: Kiln Account ID to stake into
        stash_account:
          type: string
          example: 5DK8ShqtyuVk2w4qrF9HwaBJoiZV1byQs5ARZ3df2Pt8V6Vj
          description: Wallet address controlling the stake
        amount_planck:
          type: string
          example: '100000'
          description: Amount in planck
        reward_destination:
          type: string
          example: Staked
          description: Reward destination address. You can also set it to "Stash" to accumulate rewards in the stash account or "Staked" to accumulate rewards in the stash account and stake them (auto-compounding).
    KSMCraftBondExtraTxPayload:
      type: object
      required:
        - stash_account
        - amount_planck
      properties:
        stash_account:
          type: string
          example: 5DK8ShqtyuVk2w4qrF9HwaBJoiZV1byQs5ARZ3df2Pt8V6Vj
          description: Wallet address controlling the stake
        amount_planck:
          type: string
          example: '100000'
          description: Amount in planck
    KSMCraftRebondTxPayload:
      type: object
      required:
        - stash_account
        - amount_planck
      properties:
        stash_account:
          type: string
          example: 5DK8ShqtyuVk2w4qrF9HwaBJoiZV1byQs5ARZ3df2Pt8V6Vj
          description: Wallet address controlling the stake
        amount_planck:
          type: string
          example: '100000'
          description: Amount in planck
    KSMCraftUnbondTxPayload:
      type: object
      required:
        - stash_account
        - amount_planck
      properties:
        stash_account:
          type: string
          example: 5DK8ShqtyuVk2w4qrF9HwaBJoiZV1byQs5ARZ3df2Pt8V6Vj
          description: Wallet address controlling the stake
        amount_planck:
          type: string
          example: '100000'
          description: Amount in planck
    KSMCraftNominateTxPayload:
      type: object
      required:
        - stash_account
        - validator_addresses
      properties:
        stash_account:
          type: string
          example: 5DK8ShqtyuVk2w4qrF9HwaBJoiZV1byQs5ARZ3df2Pt8V6Vj
          description: Wallet address controlling the stake
        validator_addresses:
          type: array
          description: List of validator addresses to nominate
          items:
            type: string
            example: 5FEjMPSs4X2XNes7QRH6eLmaYCskHdnYM8Zv2kKrBrhnzGbR
    KSMCraftWithdrawUnbondedTxPayload:
      type: object
      required:
        - stash_account
      properties:
        stash_account:
          type: string
          example: 5DK8ShqtyuVk2w4qrF9HwaBJoiZV1byQs5ARZ3df2Pt8V6Vj
          description: Wallet address controlling the stake
    KSMCraftChillTxPayload:
      type: object
      required:
        - stash_account
      properties:
        stash_account:
          type: string
          example: 5DK8ShqtyuVk2w4qrF9HwaBJoiZV1byQs5ARZ3df2Pt8V6Vj
          description: Wallet address controlling the stake
    KSMCraftSetPayeeTxPayload:
      type: object
      required:
        - stash_account
        - reward_destination
      properties:
        stash_account:
          type: string
          example: 5DK8ShqtyuVk2w4qrF9HwaBJoiZV1byQs5ARZ3df2Pt8V6Vj
          description: Wallet address controlling the stake
        reward_destination:
          type: string
          example: Staked
          description: Reward destination address. You can also set it to "Stash" to accumulate rewards in the stash account or "Staked" to accumulate rewards in the stash account and stake them (auto-compounding).
    KSMCraftJoinPoolTxPayload:
      type: object
      required:
        - account_id
        - member_account
        - amount_planck
        - pool_id
      properties:
        account_id:
          type: string
          format: uuid
          example: b7177fd2-fbb3-479f-aa92-db9fb16e229f
          description: Kiln Account ID to stake into
        member_account:
          type: string
          example: 5DK8ShqtyuVk2w4qrF9HwaBJoiZV1byQs5ARZ3df2Pt8V6Vj
          description: Wallet address controlling the stake
        amount_planck:
          type: string
          example: '100000'
          description: Amount in planck
        pool_id:
          type: string
          example: '131'
          description: Id of the pool to join. This can be found on explorers like [Subscan](https://kusama.subscan.io/nomination_pool/131)
    KSMCraftBondExtraToPoolTxPayload:
      type: object
      required:
        - member_account
        - amount_planck
      properties:
        member_account:
          type: string
          example: 5DK8ShqtyuVk2w4qrF9HwaBJoiZV1byQs5ARZ3df2Pt8V6Vj
          description: Wallet address controlling the stake
        amount_planck:
          type: string
          example: '100000'
          description: Amount in planck
    KSMCraftBondRewardsToPoolTxPayload:
      type: object
      required:
        - member_account
      properties:
        member_account:
          type: string
          example: 5DK8ShqtyuVk2w4qrF9HwaBJoiZV1byQs5ARZ3df2Pt8V6Vj
          description: Wallet address controlling the stake
    KSMCraftClaimPayoutFromPoolTxPayload:
      type: object
      required:
        - member_account
      properties:
        member_account:
          type: string
          example: 5DK8ShqtyuVk2w4qrF9HwaBJoiZV1byQs5ARZ3df2Pt8V6Vj
          description: Wallet address controlling the stake
    KSMCraftUnbondFromPoolTxPayload:
      type: object
      required:
        - member_account
        - amount_planck
      properties:
        member_account:
          type: string
          example: 5DK8ShqtyuVk2w4qrF9HwaBJoiZV1byQs5ARZ3df2Pt8V6Vj
          description: Wallet address controlling the stake
        amount_planck:
          type: string
          example: '100000'
          description: Amount in planck
    KSMCraftWithdrawUnbondedFromPoolTxPayload:
      type: object
      required:
        - member_account
      properties:
        member_account:
          type: string
          example: 5DK8ShqtyuVk2w4qrF9HwaBJoiZV1byQs5ARZ3df2Pt8V6Vj
          description: Wallet address controlling the stake
    DYDXStake:
      type: object
      required:
        - validator_address
        - delegator_address
        - rewards
        - available_rewards
        - balance
        - state
        - net_apy
        - unbondings
        - permissions
      properties:
        validator_address:
          type: string
          description: Public key of the validator
          example: dydxvaloper1djqecw6nn5tydxq0shan7srv8j65clsfmnxcfu
        delegator_address:
          type: string
          description: Public key of the delegator
          example: dydx1mfdn23y2ydnp6j3l3f8rw6r2gzazrmprgxn5xl
        delegated_at:
          type: string
          description: Date of first delegation ever for the stake. Unavailable for stakes older than [Theta v7 (12/04/2022)](https://github.com/cosmos/gaia/tree/main/docs/roadmap#cosmos-hub-summary).
          format: date-time
          example: '2023-06-16T03:13:23.058547Z'
        delegated_block:
          type: number
          description: Block of first delegation ever for the stake. Unavailable for stakes older than [Theta v7 (12/04/2022)](https://github.com/cosmos/gaia/tree/main/docs/roadmap#cosmos-hub-summary).
          example: 15739267
        undelegated_at:
          type: string
          description: Date of undelegation for the stake
          format: date-time
          example: '2023-07-14T03:56:13.561156Z'
        undelegated_block:
          type: number
          description: Block of undelegation for the stake
          example: 16126416
        rewards:
          type: string
          description: Total rewards accumulated by this stake since its first ever delegation in uDYDX. Includes currently available rewards not yet withdrawn.
          example: '735573808534727891000000'
        available_rewards:
          type: string
          description: Available rewards in uDYDX that can be withdrawn from this stake
          example: '36748808534727891000000'
        balance:
          type: string
          description: Staked balance on this stake in uDYDX
          example: '6300000000000000000000000'
        rewards_uusdc:
          type: string
          description: Total USDC rewards accumulated by this stake in the form of uUSDC. Includes currently available rewards not yet withdrawn.
          example: '435289200'
        available_rewards_uusdc:
          type: string
          description: Available rewards in uUSDC that can be withdrawn from this stake
          example: '435289200'
        net_apy:
          type: number
          description: Net annual percentage yield. Unavailable for stakes older than [Theta v7 (12/04/2022)](https://github.com/cosmos/gaia/tree/main/docs/roadmap#cosmos-hub-summary).
          example: 5.76
        state:
          type: string
          description: State of the DYDX stake
          example: active
          enum:
            - active
            - deactivating
            - inactive
        updated_at:
          type: string
          description: Last date this data was updated
          format: date-time
          example: '2023-01-14T01:13:59Z'
        permissions:
          description: permissions related to the stake currently active, ignored if there is no ongoing grants
          type: array
          items:
            type: object
            properties:
              source:
                type: string
                description: whether the stake is recipient (grantee) or the giver (granter) of the permissions
                example: granter
              creation_height:
                type: number
                description: Block at which the unbonding was created
                example: 15000000
              permission:
                type: string
                description: 'Kind of permission been grantee, can be: "Staking.MsgDelegate", "Staking.MsgUndelegate", "Staking.MsgRedelegate" or "Distribution.MsgWithdrawDelegatorReward"'
                example: Staking.MsgDelegate
              expires_at:
                type: string
                description: Exact time at which the permissions will be revoked
                format: date-time
                example: '2023-01-10T01:12:34Z'
                nullable: true
              allow_list:
                type: array
                items:
                  type: string
                nullable: true
                description: List of address on which the granted permission can be applied (ie validator on which delegation is allowed)
                example:
                  - dydxvaloper1xyz
                  - dydxvaloper1abc
              deny_list:
                type: array
                items:
                  type: string
                nullable: true
                description: List of address on which the granted permission cannot be applied (ie validator on which delegation is allowed)
                example:
                  - dydxvaloper1xyz
                  - dydxvaloper1abc
        unbondings:
          description: unbondings currently active on the stakes. ignored if no unbondings are returned
          type: array
          items:
            type: object
            required:
              - creation_height
              - completion_time
              - balance
              - initial_balance
            properties:
              creation_height:
                type: number
                description: Block at which the unbonding was created
                example: 15000000
              completion_time:
                type: string
                description: Exact time at which the unbonding will take effect
                format: date-time
                example: '2023-01-10T01:12:34Z'
              balance:
                type: string
                description: Amount currently associated with the unbonding (slashes included)
                example: '129300'
              initial_balance:
                type: string
                description: Amount expected at creation (slashes non-included)
                example: '150300'
    PostDYDXStakesPayload:
      type: object
      required:
        - stakes
        - account_id
      properties:
        stakes:
          type: array
          items:
            type: object
            properties:
              stakeId:
                type: string
                description: Stake id {validator_address}_{delegator_address}
                example: dydxvaloper1djqecw6nn5tydxq0shan7srv8j65clsfmnxcfu_dydx1djqecw6nn5tydxq0shan7srv8j65clsf7vypl6}
        account_id:
          type: string
          description: Kiln Account ID
          example: 92f5bfd4-ea38-4824-84f7-686eddff5539
    DYDXStakeMessage:
      type: object
      properties:
        typeUrl:
          type: string
          description: Type URL of the message
          example: /cosmos.staking.v1beta1.MsgDelegate
        value:
          type: object
          description: Message value
          example:
            delegatorAddress: dydx1djqecw6nn5tydxq0shan7srv8j65clsf7vypl6
            validatorAddress: dydxvaloper1djqecw6nn5tydxq0shan7srv8j65clsfmnxcfu
            amount:
              denom: adydx
              amount: '1000000'
    DYDXStakeMessageRestake:
      type: object
      properties:
        typeUrl:
          type: string
          description: Type URL of the message
          example: /cosmos.staking.v1beta1.StakeAuthorization
        value:
          type: object
          description: Message value
          example:
            allowList:
              address:
                - dydxvaloper1djqecw6nn5tydxq0shan7srv8j65clsfmnxcfu
            AuthorizationType: 1
    DYDXStakeUnsignedTx:
      type: object
      required:
        - unsigned_tx_serialized
        - unsigned_tx_hash
        - tx_body
        - tx_auth_info
        - pubkey
        - messages
        - fee
        - chain_id
        - account_number
      properties:
        unsigned_tx_serialized:
          type: string
          description: Unsigned serialized transaction
          example: 0adf010adc010a2a2f636f736d6f732e7374616b696e672e763162657461312e4d7367426567696e526564656c656761746512ad010a2d636f736d6f733139633966646834383876716a636c6c74777036386a6d3530796477796833366a7165617465761234636f736d6f7376616c6f70657231307636777664656e65653872396c36776c73706863677572326c746c387a746b6672766a39611a34636f736d6f7376616c6f70657231796d7a336b6a7466397a6b666d6d3273326c7279376568307a6439657a33766335797030306622100a057561746f6d12073433313030303012670a500a460a1f2f636f736d6f732e63727970746f2e736563703235366b312e5075624b657912230a21039ce47b2a813d13876131a9c3be77e8c4afa49e948744abbee11f939e2a420f4612040a020801186d12130a0d0a057561746f6d1204353030301080897a1a1174686574612d746573746e65742d30303120e0cd2a
        unsigned_tx_hash:
          type: string
          description: Hash of the unsigned transaction
          example: b6ce1c8185416ce7d42a8c39566a9a2b6b2361a55c04a1dba3dd7445a0e1e364
        tx_body:
          type: string
          description: Transaction body serialized in hex
          example: 0a9e010a232f636f736d6f732e7374616b696e672e763162657461312e4d736744656c656761746512770a2d636f736d6f733139633966646834383876716a636c6c74777036386a6d3530796477796833366a7165617465761234636f736d6f7376616c6f706572313679733065673933356d6b71706b79646b6766636a39616765326175386c39366e61657265391a100a057561746f6d120731303030303030
        tx_auth_info:
          type: string
          description: Transaction auth info serialized in hex
          example: 0a2c0a2a0a28636f736d6f733139633966646834383876716a636c6c74777036386a6d3530796477796833366a716561746576120a2d636f736d6f733139633966646834383876716a636c6c74777036386a6d3530796477796833366a7165617465761234636f736d6f7376616c6f706572313679733065673933356d6b71706b79646b6766636a39616765326175386c39366e6165726539
        pubkey:
          type: string
          description: Wallet compressed public key, this is different than the wallet address
          example: 039ce47b2a813d13876131a9c3be77e8c4afa49e948744abbee11f939e2a420f46
        fee:
          type: object
          description: Fee included in the transaction. Object shape can be found [here](https://github.com/cosmos/cosmjs/blob/72da7971ee4fd77fec1bfef2ec1ba4f14f8c319d/packages/amino/src/signdoc.ts#L12)
          example:
            amount:
              - denom: adydx
                amount: '5000'
            gas: '200000'
        messages:
          type: array
          description: List of messages included in the transaction.
          items:
            oneOf:
              - $ref: '#/components/schemas/DYDXStakeMessage'
          example:
            - typeUrl: /cosmos.staking.v1beta1.MsgDelegate
              value:
                delegatorAddress: dydx1djqecw6nn5tydxq0shan7srv8j65clsf7vypl6
                validatorAddress: dydxvaloper1djqecw6nn5tydxq0shan7srv8j65clsfmnxcfu
                amount:
                  denom: adydx
                  amount: '1000000'
        chain_id:
          type: string
          description: Chain ID
          example: cosmoshub-4
        account_number:
          type: number
          description: Account number
          example: 1234
    DYDXUnsignedTx:
      type: object
      required:
        - unsigned_tx_serialized
        - unsigned_tx_hash
        - tx_body
        - tx_auth_info
        - pubkey
        - message
        - fee
        - chain_id
        - account_number
      properties:
        unsigned_tx_serialized:
          type: string
          description: Unsigned serialized transaction
          example: 0adf010adc010a2a2f636f736d6f732e7374616b696e672e763162657461312e4d7367426567696e526564656c656761746512ad010a2d636f736d6f733139633966646834383876716a636c6c74777036386a6d3530796477796833366a7165617465761234636f736d6f7376616c6f70657231307636777664656e65653872396c36776c73706863677572326c746c387a746b6672766a39611a34636f736d6f7376616c6f70657231796d7a336b6a7466397a6b666d6d3273326c7279376568307a6439657a33766335797030306622100a057561746f6d12073433313030303012670a500a460a1f2f636f736d6f732e63727970746f2e736563703235366b312e5075624b657912230a21039ce47b2a813d13876131a9c3be77e8c4afa49e948744abbee11f939e2a420f4612040a020801186d12130a0d0a057561746f6d1204353030301080897a1a1174686574612d746573746e65742d30303120e0cd2a
        unsigned_tx_hash:
          type: string
          description: Hash of the unsigned transaction
          example: b6ce1c8185416ce7d42a8c39566a9a2b6b2361a55c04a1dba3dd7445a0e1e364
        tx_body:
          type: string
          description: Transaction body serialized in hex
          example: 0a9e010a232f636f736d6f732e7374616b696e672e763162657461312e4d736744656c656761746512770a2d636f736d6f733139633966646834383876716a636c6c74777036386a6d3530796477796833366a7165617465761234636f736d6f7376616c6f706572313679733065673933356d6b71706b79646b6766636a39616765326175386c39366e61657265391a100a057561746f6d120731303030303030
        tx_auth_info:
          type: string
          description: Transaction auth info serialized in hex
          example: 0a2c0a2a0a28636f736d6f733139633966646834383876716a636c6c74777036386a6d3530796477796833366a716561746576120a2d636f736d6f733139633966646834383876716a636c6c74777036386a6d3530796477796833366a7165617465761234636f736d6f7376616c6f706572313679733065673933356d6b71706b79646b6766636a39616765326175386c39366e6165726539
        pubkey:
          type: string
          description: Wallet compressed public key, this is different than the wallet address
          example: 039ce47b2a813d13876131a9c3be77e8c4afa49e948744abbee11f939e2a420f46
        message:
          type: object
          description: Message included in the transaction
          example:
            typeUrl: /cosmos.staking.v1beta1.MsgDelegate
            value:
              delegatorAddress: dydx1djqecw6nn5tydxq0shan7srv8j65clsf7vypl6
              validatorAddress: dydxvaloper1djqecw6nn5tydxq0shan7srv8j65clsfmnxcfu
              amount:
                denom: adydx
                amount: '1000000'
        fee:
          type: object
          description: Fee included in the transaction. Object shape can be found [here](https://github.com/cosmos/cosmjs/blob/72da7971ee4fd77fec1bfef2ec1ba4f14f8c319d/packages/amino/src/signdoc.ts#L12)
          example:
            amount:
              - denom: adydx
                amount: '5000'
            gas: '200000'
        chain_id:
          type: string
          description: Chain ID
          example: cosmoshub-4
        account_number:
          type: number
          description: Account number
          example: 1234
    DYDXSignedTx:
      type: object
      required:
        - signed_tx_serialized
      properties:
        signed_tx_serialized:
          type: string
          description: Serialized signed transaction in hex
          example: 0aa1010a9e010a232f636f736d6f732e7374616b696e672e763162657461312e4d736744656c656761746512770a2d636f736d6f733139633966646834383876716a636c6c74777036386a6d3530796477796833366a7165617465761234636f736d6f7376616c6f706572313679733065673933356d6b71706b79646b6766636a39616765326175386c39366e61657265391a100a057561746f6d12073130303030303012670a500a460a1f2f636f736d6f732e63727970746f2e736563703235366b312e5075624b657912230a21039ce47b2a813d13876131a9c3be77e8c4afa49e948744abbee11f939e2a420f4612040a020801182012130a0d0a057561746f6d12043530303010e0a7121a40191f87a54dceafb6ab9a5f112a13444ca37e49a029e531bb21301fd72e9d390304c763cca5a9760a631dc85705dd6b08b50f5fff7d5de8d73b2cebd1f4c3b6a0
    DYDXTxHash:
      type: object
      required:
        - tx_hash
      properties:
        tx_hash:
          type: string
          description: Hash of the transaction
          example: 2B4F732E12D5D5AF1F907AD03B199167A718EDC6201DE5713143AB80990420CB
    DYDXPrepareTxPayload:
      type: object
      required:
        - pubkey
        - tx_body
        - tx_auth_info
        - signature
      properties:
        pubkey:
          type: string
          description: Wallet public key (compressed or uncompressed), this is different than the wallet address
          example: 039ce47b2a813d13876131a9c3be77e8c4afa49e948744abbee11f939e2a420f46
        tx_body:
          type: string
          description: Transaction body serialized in hex
          example: 0a9e010a232f636f736d6f732e7374616b696e672e763162657461312e4d736744656c656761746512770a2d636f736d6f733139633966646834383876716a636c6c74777036386a6d3530796477796833366a7165617465761234636f736d6f7376616c6f706572313679733065673933356d6b71706b79646b6766636a39616765326175386c39366e61657265391a100a057561746f6d120731303030303030
        tx_auth_info:
          type: string
          description: Transaction auth info serialized in hex
          example: 0a2c0a2a0a28636f736d6f733139633966646834383876716a636c6c74777036386a6d3530796477796833366a716561746576120a2d636f736d6f733139633966646834383876716a636c6c74777036386a6d3530796477796833366a7165617465761234636f736d6f7376616c6f706572313679733065673933356d6b71706b79646b6766636a39616765326175386c39366e6165726539
        signature:
          type: string
          description: Transaction signature serialized in hex
          example: 191f87a54dceafb6ab9a5f112a13444ca37e49a029e531bb21301fd72e9d390304c763cca5a9760a631dc85705dd6b08b50f5fff7d5de8d73b2cebd1f4c3b6a0
    DYDXBroadcastTxPayload:
      type: object
      required:
        - tx_serialized
      properties:
        tx_serialized:
          type: string
          description: Signed transaction serialized in hex
          example: 0aa1010a9e010a232f636f736d6f732e7374616b696e672e763162657461312e4d736744656c656761746512770a2d636f736d6f733139633966646834383876716a636c6c74777036386a6d3530796477796833366a7165617465761234636f736d6f7376616c6f706572313679733065673933356d6b71706b79646b6766636a39616765326175386c39366e61657265391a100a057561746f6d12073130303030303012670a500a460a1f2f636f736d6f732e63727970746f2e736563703235366b312e5075624b657912230a21039ce47b2a813d13876131a9c3be77e8c4afa49e948744abbee11f939e2a420f4612040a020801182012130a0d0a057561746f6d12043530303010e0a7121a40191f87a54dceafb6ab9a5f112a13444ca37e49a029e531bb21301fd72e9d390304c763cca5a9760a631dc85705dd6b08b50f5fff7d5de8d73b2cebd1f4c3b6a0
    DYDXTxStatus:
      type: object
      properties:
        status:
          type: string
          enum:
            - success
            - error
          description: Transaction status
          example: success
        receipt:
          type: object
          description: Transaction receipt. Only present if status is success. Object shape can be found [here](https://github.com/cosmos/cosmjs/blob/e8e65aa0c145616ccb58625c32bffe08b46ff574/packages/stargate/src/stargateclient.ts#L67)
          example:
            height: 16007296
            txIndex: 0
            hash: 2B4F732E12D5D5AF1F907AD03B199167A718EDC6201DE5713143AB80990420CB
            code: 0
            events:
              - type: coin_spent
                attributes:
                  - key: spender
                    value: dydx19c9fdh488vqjclltwp68jm50ydwyh36jqeatev
                  - key: amount
                    value: 5000adydx
              - type: coin_received
                attributes:
                  - key: receiver
                    value: dydx17xpfvakm2amg962yls6f84z3kell8c5lserqta
                  - key: amount
                    value: 5000adydx
              - type: transfer
                attributes:
                  - key: recipient
                    value: dydx17xpfvakm2amg962yls6f84z3kell8c5lserqta
                  - key: sender
                    value: dydx19c9fdh488vqjclltwp68jm50ydwyh36jqeatev
                  - key: amount
                    value: 5000adydx
              - type: message
                attributes:
                  - key: sender
                    value: dydx19c9fdh488vqjclltwp68jm50ydwyh36jqeatev
              - type: tx
                attributes:
                  - key: fee
                    value: 5000adydx
                  - key: fee_payer
                    value: dydx19c9fdh488vqjclltwp68jm50ydwyh36jqeatev
              - type: tx
                attributes:
                  - key: acc_seq
                    value: dydx19c9fdh488vqjclltwp68jm50ydwyh36jqeatev/33
              - type: tx
                attributes:
                  - key: signature
                    value: GR+HpU3Or7arml8RKhNETKN+SaAp5TG7ITAf1y6dOQMEx2PMpal2CmMdyFcF3WsItQ9f/31d6Nc7LOvR9MO2oA==
              - type: message
                attributes:
                  - key: action
                    value: /cosmos.staking.v1beta1.MsgDelegate
              - type: coin_spent
                attributes:
                  - key: spender
                    value: dydx1jv65s3grqf6v6jl3dp4t6c9t9rk99cd88lyufl
                  - key: amount
                    value: 5adydx
              - type: coin_received
                attributes:
                  - key: receiver
                    value: dydx19c9fdh488vqjclltwp68jm50ydwyh36jqeatev
                  - key: amount
                    value: 5adydx
              - type: transfer
                attributes:
                  - key: recipient
                    value: dydx19c9fdh488vqjclltwp68jm50ydwyh36jqeatev
                  - key: sender
                    value: dydx1jv65s3grqf6v6jl3dp4t6c9t9rk99cd88lyufl
                  - key: amount
                    value: 5adydx
              - type: message
                attributes:
                  - key: sender
                    value: dydx1jv65s3grqf6v6jl3dp4t6c9t9rk99cd88lyufl
              - type: withdraw_rewards
                attributes:
                  - key: amount
                    value: 5adydx
                  - key: validator
                    value: dydxvaloper1djqecw6nn5tydxq0shan7srv8j65clsfmnxcfu
              - type: coin_spent
                attributes:
                  - key: spender
                    value: dydx19c9fdh488vqjclltwp68jm50ydwyh36jqeatev
                  - key: amount
                    value: 100000adydx
              - type: coin_received
                attributes:
                  - key: receiver
                    value: dydx1fl48vsnmsdzcv85q5d2q4z5ajdha8yu34mf0eh
                  - key: amount
                    value: 100000adydx
              - type: delegate
                attributes:
                  - key: validator
                    value: dydxvaloper1djqecw6nn5tydxq0shan7srv8j65clsfmnxcfu
                  - key: amount
                    value: 100000adydx
                  - key: new_shares
                    value: '100000.000000000000000000'
              - type: message
                attributes:
                  - key: module
                    value: staking
                  - key: sender
                    value: dydx19c9fdh488vqjclltwp68jm50ydwyh36jqeatev
            rawLog: '[{"events":[{"type":"coin_received","attributes":[{"key":"receiver","value":"dydx19c9fdh488vqjclltwp68jm50ydwyh36jqeatev"},{"key":"amount","value":"5adydx"},{"key":"receiver","value":"dydx1fl48vsnmsdzcv85q5d2q4z5ajdha8yu34mf0eh"},{"key":"amount","value":"100000adydx"}]},{"type":"coin_spent","attributes":[{"key":"spender","value":"dydx1jv65s3grqf6v6jl3dp4t6c9t9rk99cd88lyufl"},{"key":"amount","value":"5adydx"},{"key":"spender","value":"dydx19c9fdh488vqjclltwp68jm50ydwyh36jqeatev"},{"key":"amount","value":"100000adydx"}]},{"type":"delegate","attributes":[{"key":"validator","value":"dydxvaloper1djqecw6nn5tydxq0shan7srv8j65clsfmnxcfu"},{"key":"amount","value":"100000adydx"},{"key":"new_shares","value":"100000.000000000000000000"}]},{"type":"message","attributes":[{"key":"action","value":"/cosmos.staking.v1beta1.MsgDelegate"},{"key":"sender","value":"dydx1jv65s3grqf6v6jl3dp4t6c9t9rk99cd88lyufl"},{"key":"module","value":"staking"},{"key":"sender","value":"dydx19c9fdh488vqjclltwp68jm50ydwyh36jqeatev"}]},{"type":"transfer","attributes":[{"key":"recipient","value":"dydx19c9fdh488vqjclltwp68jm50ydwyh36jqeatev"},{"key":"sender","value":"dydx1jv65s3grqf6v6jl3dp4t6c9t9rk99cd88lyufl"},{"key":"amount","value":"5adydx"}]},{"type":"withdraw_rewards","attributes":[{"key":"amount","value":"5adydx"},{"key":"validator","value":"dydxvaloper1djqecw6nn5tydxq0shan7srv8j65clsfmnxcfu"}]}]}]'
            tx:
              '0': 10
              '1': 160
              '2': 1
              '3': 10
              '4': 157
              '5': 1
              '6': 10
              '7': 35
              '8': 47
              '9': 99
              '10': 111
              '11': 115
              '12': 109
              '13': 111
              '14': 115
              '15': 46
              '16': 115
              '17': 116
              '18': 97
              '19': 107
              '20': 105
              '21': 110
              '22': 103
              '23': 46
              '24': 118
              '25': 49
              '26': 98
              '27': 101
              '28': 116
              '29': 97
              '30': 49
              '31': 46
              '32': 77
              '33': 115
              '34': 103
              '35': 68
              '36': 101
              '37': 108
              '38': 101
              '39': 103
              '40': 97
              '41': 116
              '42': 101
              '43': 18
              '44': 118
              '45': 10
              '46': 45
              '47': 99
              '48': 111
              '49': 115
              '50': 109
              '51': 111
              '52': 115
              '53': 49
              '54': 57
              '55': 99
              '56': 57
              '57': 102
              '58': 100
              '59': 104
              '60': 52
              '61': 56
              '62': 56
              '63': 118
              '64': 113
              '65': 106
              '66': 99
              '67': 108
              '68': 108
              '69': 116
              '70': 119
              '71': 112
              '72': 54
              '73': 56
              '74': 106
              '75': 109
              '76': 53
              '77': 48
              '78': 121
              '79': 100
              '80': 119
              '81': 121
              '82': 104
              '83': 51
              '84': 54
              '85': 106
              '86': 113
              '87': 101
              '88': 97
              '89': 116
              '90': 101
              '91': 118
              '92': 18
              '93': 52
              '94': 99
              '95': 111
              '96': 115
              '97': 109
              '98': 111
              '99': 115
              '100': 118
              '101': 97
              '102': 108
              '103': 111
              '104': 112
              '105': 101
              '106': 114
              '107': 49
              '108': 54
              '109': 121
              '110': 115
              '111': 48
              '112': 101
              '113': 103
              '114': 57
              '115': 51
              '116': 53
              '117': 109
              '118': 107
              '119': 113
              '120': 112
              '121': 107
              '122': 121
              '123': 100
              '124': 107
              '125': 103
              '126': 102
              '127': 99
              '128': 106
              '129': 57
              '130': 97
              '131': 103
              '132': 101
              '133': 50
              '134': 97
              '135': 117
              '136': 56
              '137': 108
              '138': 57
              '139': 54
              '140': 110
              '141': 97
              '142': 101
              '143': 114
              '144': 101
              '145': 57
              '146': 26
              '147': 15
              '148': 10
              '149': 5
              '150': 117
              '151': 97
              '152': 116
              '153': 111
              '154': 109
              '155': 18
              '156': 6
              '157': 49
              '158': 48
              '159': 48
              '160': 48
              '161': 48
              '162': 48
              '163': 18
              '164': 103
              '165': 10
              '166': 80
              '167': 10
              '168': 70
              '169': 10
              '170': 31
              '171': 47
              '172': 99
              '173': 111
              '174': 115
              '175': 109
              '176': 111
              '177': 115
              '178': 46
              '179': 99
              '180': 114
              '181': 121
              '182': 112
              '183': 116
              '184': 111
              '185': 46
              '186': 115
              '187': 101
              '188': 99
              '189': 112
              '190': 50
              '191': 53
              '192': 54
              '193': 107
              '194': 49
              '195': 46
              '196': 80
              '197': 117
              '198': 98
              '199': 75
              '200': 101
              '201': 121
              '202': 18
              '203': 35
              '204': 10
              '205': 33
              '206': 3
              '207': 156
              '208': 228
              '209': 123
              '210': 42
              '211': 129
              '212': 61
              '213': 19
              '214': 135
              '215': 97
              '216': 49
              '217': 169
              '218': 195
              '219': 190
              '220': 119
              '221': 232
              '222': 196
              '223': 175
              '224': 164
              '225': 158
              '226': 148
              '227': 135
              '228': 68
              '229': 171
              '230': 190
              '231': 225
              '232': 31
              '233': 147
              '234': 158
              '235': 42
              '236': 66
              '237': 15
              '238': 70
              '239': 18
              '240': 4
              '241': 10
              '242': 2
              '243': 8
              '244': 1
              '245': 24
              '246': 33
              '247': 18
              '248': 19
              '249': 10
              '250': 13
              '251': 10
              '252': 5
              '253': 117
              '254': 97
              '255': 116
              '256': 111
              '257': 109
              '258': 18
              '259': 4
              '260': 53
              '261': 48
              '262': 48
              '263': 48
              '264': 16
              '265': 224
              '266': 167
              '267': 18
              '268': 26
              '269': 64
              '270': 25
              '271': 31
              '272': 135
              '273': 165
              '274': 77
              '275': 206
              '276': 175
              '277': 182
              '278': 171
              '279': 154
              '280': 95
              '281': 17
              '282': 42
              '283': 19
              '284': 68
              '285': 76
              '286': 163
              '287': 126
              '288': 73
              '289': 160
              '290': 41
              '291': 229
              '292': 49
              '293': 187
              '294': 33
              '295': 48
              '296': 31
              '297': 215
              '298': 46
              '299': 157
              '300': 57
              '301': 3
              '302': 4
              '303': 199
              '304': 99
              '305': 204
              '306': 165
              '307': 169
              '308': 118
              '309': 10
              '310': 99
              '311': 29
              '312': 200
              '313': 87
              '314': 5
              '315': 221
              '316': 107
              '317': 8
              '318': 181
              '319': 15
              '320': 95
              '321': 255
              '322': 125
              '323': 93
              '324': 232
              '325': 215
              '326': 59
              '327': 44
              '328': 235
              '329': 209
              '330': 244
              '331': 195
              '332': 182
              '333': 160
            gasUsed: 167798
            gasWanted: 300000
    DYDXCraftUnstakeTxPayload:
      type: object
      required:
        - pubkey
        - validator
      properties:
        pubkey:
          type: string
          example: 039ce47b2a813d13876131a9c3be77e8c4afa49e948744abbee11f939e2a420f46
          description: Wallet public key (compressed or uncompressed), this is different than the wallet address
        validator:
          type: string
          example: dydxvaloper1djqecw6nn5tydxq0shan7srv8j65clsfmnxcfu
          description: Validator address
        amount_adydx:
          type: string
          example: '1000000000000000000000000'
          description: Amount to unstake in uDYDX. Omit to unstake all the delegated amount
    DYDXCraftRedelegateTxPayload:
      type: object
      required:
        - account_id
        - pubkey
        - validator_source
        - validator_destination
      properties:
        account_id:
          type: string
          example: b7177fd2-fbb3-479f-aa92-db9fb16e229f
          format: uuid
          description: Kiln Account ID to which the new stake will be linked
        pubkey:
          type: string
          example: 039ce47b2a813d13876131a9c3be77e8c4afa49e948744abbee11f939e2a420f46
          description: Wallet public key (compressed or uncompressed), this is different than the wallet address
        validator_source:
          type: string
          example: dydxvaloper1djqecw6nn5tydxq0shan7srv8j65clsfmnxcfu
          description: Validator source address of current stake
        validator_destination:
          type: string
          example: dydxvaloper1djqecw6nn5tydxq0shan7srv8j65clsfmnxcfu
          description: Validator destination address to which redelegate the stake
        amount_adydx:
          type: string
          example: '1000000000000000000000000'
          description: Amount to redelegate in uDYDX
    DYDXCraftStakeTxPayload:
      type: object
      required:
        - account_id
        - pubkey
        - validator
        - amount_adydx
      properties:
        account_id:
          type: string
          example: b7177fd2-fbb3-479f-aa92-db9fb16e229f
          format: uuid
          description: Kiln Account ID to stake into
        pubkey:
          type: string
          example: 039ce47b2a813d13876131a9c3be77e8c4afa49e948744abbee11f939e2a420f46
          description: Wallet public key (compressed or uncompressed), this is different than the wallet address
        validator:
          type: string
          example: dydxvaloper1djqecw6nn5tydxq0shan7srv8j65clsfmnxcfu
          description: Validator address
        amount_adydx:
          type: string
          example: '1000000000000000000000000'
          description: Amount to stake in adydx
    DYDXCraftRestakeRewardsTxPayload:
      type: object
      required:
        - pubkey
        - validator_address
        - grantee_address
      properties:
        pubkey:
          type: string
          example: 039ce47b2a813d13876131a9c3be77e8c4afa49e948744abbee11f939e2a420f46
          description: Wallet public key (compressed or uncompressed), this is different than the wallet address
        validator_address:
          type: string
          example: dydxvaloper1djqecw6nn5tydxq0shan7srv8j65clsfmnxcfu
          description: Validator address
        grantee_address:
          type: string
          example: cosmos1u4whe0pwlgt7q7ph37qxalq2wfq4pkcdze5fmd
          description: 'Grantee address, this address is specific to each validator. Kiln grantee addresses are found here: https://github.com/eco-stake/validator-registry/blob/master/Kiln/chains.json https://github.com/eco-stake/validator-registry/blob/master/interop/chains.json'
    DYDXCraftWithdrawRewardsTxPayload:
      type: object
      required:
        - pubkey
        - validator
      properties:
        pubkey:
          type: string
          example: 039ce47b2a813d13876131a9c3be77e8c4afa49e948744abbee11f939e2a420f46
          description: Wallet public key (compressed or uncompressed), this is different than the wallet address
        validator:
          type: string
          example: dydxvaloper1djqecw6nn5tydxq0shan7srv8j65clsfmnxcfu
          description: Validator address
    DYDXReward:
      type: object
      required:
        - date
        - rewards
        - balance
        - net_apy
      properties:
        date:
          type: string
          description: Day for this reward entry
          format: date
          example: '2023-01-15'
        rewards:
          type: string
          description: Accumulated rewards in uDYDX during the day
          example: '3575891083876864200000'
        balance:
          type: string
          description: Staked balance in uDYDX at the end of the day
          example: '6300000000000000000000000'
        net_apy:
          type: number
          description: Net annual percentage yield
          example: 20.76
        rewards_uusdc:
          type: string
          description: Accumulated rewards in USDC during the day
          example: '35758910838'
        rewards_usdc_usd:
          type: number
          description: Estimated value of USDC rewards generated for that day in USD. The exchange rate is the rate at the end of the day provided by CoinGeckko.
          example: 40.12
        rewards_usd:
          type: number
          description: Estimated value of rewards generated for that day in USD. The exchange rate is the rate at the end of the day provided by CoinGeckko.
        balance_usd:
          type: number
          description: Estimated value of the staked balance at the beginning of the day in USD. The exchange rate is the rate at the end of the day provided by CoinGeckko.
    DYDXOperationDelegate:
      type: object
      properties:
        type:
          type: string
          description: Operation type
          example: staking.MsgDelegate
        time:
          type: string
          description: Date of the operation
          format: date-time
          example: '2023-06-22T15:35:01.892644Z'
        block:
          type: number
          description: Transaction block
          example: 15828207
        tx_hash:
          type: string
          description: Transaction hash
          example: 7DBC7C481A9A28961BDDF5BCDD47217A126EC0497017908453D71FACA9FA3506
        tx_gas_used:
          type: string
          description: Gas used for the whole transaction in uDYDX
          example: '186733'
        message_index:
          type: number
          description: Index of the message in the transaction
          example: 0
        validator_address:
          type: string
          description: Validator address
          example: dydxvaloper1djqecw6nn5tydxq0shan7srv8j65clsfmnxcfu
        delegator_address:
          type: string
          description: Delegator address
          example: dydx1djqecw6nn5tydxq0shan7srv8j65clsf7vypl6
        amount:
          type: string
          description: Amount added to the staked balance in uDYDX
          example: '3000000'
        withdraw_rewards:
          type: string
          description: Rewards auto-claimed alongside the operation in uDYDX
          example: '10841'
    DYDXOperationUndelegate:
      type: object
      properties:
        type:
          type: string
          description: Operation type
          example: staking.MsgUndelegate
        time:
          type: string
          description: Date of the operation
          format: date-time
          example: '2023-06-22T15:35:01.892644Z'
        block:
          type: number
          description: Transaction block
          example: 15828207
        tx_hash:
          type: string
          description: Transaction hash
          example: 7DBC7C481A9A28961BDDF5BCDD47217A126EC0497017908453D71FACA9FA3506
        tx_gas_used:
          type: string
          description: Gas used for the whole transaction in uDYDX
          example: '186733'
        message_index:
          type: number
          description: Index of the message in the transaction
          example: 0
        validator_address:
          type: string
          description: Validator address
          example: dydxvaloper1djqecw6nn5tydxq0shan7srv8j65clsfmnxcfu
        delegator_address:
          type: string
          description: Delegator address
          example: dydx1djqecw6nn5tydxq0shan7srv8j65clsf7vypl6
        amount:
          type: string
          description: Amount removed from the staked balance in uDYDX
          example: '3000000'
        withdraw_rewards:
          type: string
          description: Rewards auto-claimed alongside the operation in uDYDX
          example: '10841'
    DYDXOperationRedelegate:
      type: object
      properties:
        type:
          type: string
          description: Operation type
          example: staking.MsgBeginRedelegate
        time:
          type: string
          description: Date of the operation
          format: date-time
          example: '2023-06-22T15:35:01.892644Z'
        block:
          type: number
          description: Transaction block
          example: 15828207
        tx_hash:
          type: string
          description: Transaction hash
          example: 7DBC7C481A9A28961BDDF5BCDD47217A126EC0497017908453D71FACA9FA3506
        tx_gas_used:
          type: string
          description: Gas used for the whole transaction in uDYDX
          example: '186733'
        message_index:
          type: number
          description: Index of the message in the transaction
          example: 0
        validator_address:
          type: string
          description: Destination validator address
          example: dydxvaloper1djqecw6nn5tydxq0shan7srv8j65clsfmnxcfu
        validator_address_source:
          type: string
          description: Source validator address
          example: dydxvaloper1djqecw6nn5tydxq0shan7srv8j65clsfmnxcfu
        delegator_address:
          type: string
          description: Delegator address
          example: dydx1djqecw6nn5tydxq0shan7srv8j65clsf7vypl6
        amount:
          type: string
          description: Amount moved from the source validator staked balance to the destination validator staked balance in uDYDX
          example: '3000000'
        withdraw_rewards:
          type: string
          description: Rewards auto-claimed from the destination validator alongside the operation in uDYDX
          example: '10841'
        withdraw_rewards_source:
          type: string
          description: Rewards auto-claimed from the source validator alongside the operation in uDYDX
          example: '10841'
    DYDXOperationWithdrawRewards:
      type: object
      properties:
        type:
          type: string
          description: Operation type
          example: distr.MsgWithdrawDelegatorReward
        time:
          type: string
          description: Date of the operation
          format: date-time
          example: '2023-06-22T15:35:01.892644Z'
        block:
          type: number
          description: Transaction block
          example: 15828207
        tx_hash:
          type: string
          description: Transaction hash
          example: 7DBC7C481A9A28961BDDF5BCDD47217A126EC0497017908453D71FACA9FA3506
        tx_gas_used:
          type: string
          description: Gas used for the whole transaction in uDYDX
          example: '186733'
        message_index:
          type: number
          description: Index of the message in the transaction
          example: 0
        validator_address:
          type: string
          description: Validator address
          example: dydxvaloper1djqecw6nn5tydxq0shan7srv8j65clsfmnxcfu
        delegator_address:
          type: string
          description: Delegator address
          example: dydx1djqecw6nn5tydxq0shan7srv8j65clsf7vypl6
        withdraw_rewards:
          type: string
          description: Rewards claimed alongside the operation in uDYDX
          example: '10841'
    DYDXOperationGrant:
      type: object
      properties:
        type:
          type: string
          description: Operation type
          example: Authz.Grant
        time:
          type: string
          description: Date of the operation
          format: date-time
          example: '2023-06-22T15:35:01.892644Z'
        block:
          type: number
          description: Transaction block
          example: 15828207
        tx_hash:
          type: string
          description: Transaction hash
          example: 7DBC7C481A9A28961BDDF5BCDD47217A126EC0497017908453D71FACA9FA3506
        tx_gas_used:
          type: string
          description: Gas used for the whole transaction in uDYDX
          example: '186733'
        message_index:
          type: number
          description: Index of the message in the transaction
          example: 0
        grantee:
          type: string
          description: Recipient of the permissions
          example: dydx1djqecw6nn5tydxq0shan7srv8j65clsf7vypl6
        granter:
          type: string
          description: Owner of the stake giving the permissions
          example: dydx1djqecw6nn5tydxq0shan7srv8j65clsf7vypl6
        permission:
          type: string
          description: 'Kind of permission been grantee, can be: "Staking.MsgDelegate", "Staking.MsgUndelegate", "Staking.MsgRedelegate" or "Distribution.MsgWithdrawDelegatorReward"'
          example: Staking.MsgDelegate
        allow_list:
          type: array
          items:
            type: string
          nullable: true
          description: List of address on which the granted permission can be applied (ie validator on which delegation is allowed)
          example:
            - dydx1djqecw6nn5tydxq0shan7srv8j65clsf7vypl6
            - dydx1djqecw6nn5tydxq0shan7srv8j65clsf7vypl6
        deny_list:
          type: array
          items:
            type: string
          nullable: true
          description: List of address on which the granted permission cannot be applied (ie validator on which delegation is allowed)
          example:
            - dydx1djqecw6nn5tydxq0shan7srv8j65clsf7vypl6
            - dydx1djqecw6nn5tydxq0shan7srv8j65clsf7vypl6
    DYDXOperationExec:
      type: object
      properties:
        type:
          type: string
          description: Operation type
          example: Authz.Exec
        time:
          type: string
          description: Date of the operation
          format: date-time
          example: '2023-06-22T15:35:01.892644Z'
        block:
          type: number
          description: Transaction block
          example: 15828207
        tx_hash:
          type: string
          description: Transaction hash
          example: 7DBC7C481A9A28961BDDF5BCDD47217A126EC0497017908453D71FACA9FA3506
        tx_gas_used:
          type: string
          description: Gas used for the whole transaction in uDYDX
          example: '186733'
        message_index:
          type: number
          description: Index of the message in the transaction
          example: 0
        executed_operations:
          type: array
          nullable: true
          items:
            type: object
            properties:
              type:
                type: string
                description: Operation type
                example: staking.Delegate
              validator_address:
                type: string
                description: Destination validator address
                example: dydxvaloper1djqecw6nn5tydxq0shan7srv8j65clsfmnxcfu
              validator_address_source:
                type: string
                description: Source validator address
                example: dydxvaloper1djqecw6nn5tydxq0shan7srv8j65clsfmnxcfu
              delegator_address:
                type: string
                description: Delegator address
                example: dydx1djqecw6nn5tydxq0shan7srv8j65clsf7vypl6
              amount:
                type: string
                description: Amount moved from the source validator staked balance to the destination validator staked balance in uDYDX
                example: '3000000'
              withdraw_rewards:
                type: string
                description: Rewards auto-claimed from the destination validator alongside the operation in uDYDX
                example: '10841'
              withdraw_rewards_source:
                type: string
                description: Rewards auto-claimed from the source validator alongside the operation in uDYDX
                example: '10841'
    DYDXNetworkStats:
      type: object
      required:
        - dydx_price_usd
        - nb_validators
        - network_gross_apy
        - supply_staked_percent
        - inflation_rate
        - updated_at
      properties:
        dydx_price_usd:
          type: number
          description: Price of DYDX in USD
          example: 10.53
        nb_validators:
          type: number
          description: Number of validators in the network
          example: 100
        network_gross_apy:
          type: number
          description: Gross annual percentage yield
          example: 4.5
        supply_staked_percent:
          type: number
          description: Supply of DYDX currently staked
          example: 12.4
        inflation_rate:
          type: number
          description: DYDX inflation rate
          example: 3.5
        updated_at:
          type: string
          description: Last date this data was updated
          format: date-time
          example: '2023-01-14T01:13:59Z'
    DYDXTxDecoding:
      type: object
      description: Decoded transaction
      example:
        authInfo:
          signerInfos:
            - publicKey:
                typeUrl: /cosmos.crypto.secp256k1.PubKey
                value:
                  '0': 10
                  '1': 33
                  '2': 3
                  '3': 156
                  '4': 228
                  '5': 123
                  '6': 42
                  '7': 129
                  '8': 61
                  '9': 19
                  '10': 135
                  '11': 97
                  '12': 49
                  '13': 169
                  '14': 195
                  '15': 190
                  '16': 119
                  '17': 232
                  '18': 196
                  '19': 175
                  '20': 164
                  '21': 158
                  '22': 148
                  '23': 135
                  '24': 68
                  '25': 171
                  '26': 190
                  '27': 225
                  '28': 31
                  '29': 147
                  '30': 158
                  '31': 42
                  '32': 66
                  '33': 15
                  '34': 70
              modeInfo:
                single:
                  mode: 1
              sequence:
                low: 102
                high: 0
                unsigned: true
          fee:
            amount:
              - denom: adydx
                amount: '5000'
            gasLimit:
              low: 2000000
              high: 0
              unsigned: true
            payer: ''
            granter: ''
        body:
          messages:
            - typeUrl: /cosmos.staking.v1beta1.MsgDelegate
              value:
                '0': 10
                '1': 45
                '2': 99
                '3': 111
                '4': 115
                '5': 109
                '6': 111
                '7': 115
                '8': 49
                '9': 57
                '10': 99
                '11': 57
                '12': 102
                '13': 100
                '14': 104
                '15': 52
                '16': 56
                '17': 56
                '18': 118
                '19': 113
                '20': 106
                '21': 99
                '22': 108
                '23': 108
                '24': 116
                '25': 119
                '26': 112
                '27': 54
                '28': 56
                '29': 106
                '30': 109
                '31': 53
                '32': 48
                '33': 121
                '34': 100
                '35': 119
                '36': 121
                '37': 104
                '38': 51
                '39': 54
                '40': 106
                '41': 113
                '42': 101
                '43': 97
                '44': 116
                '45': 101
                '46': 118
                '47': 18
                '48': 52
                '49': 99
                '50': 111
                '51': 115
                '52': 109
                '53': 111
                '54': 115
                '55': 118
                '56': 97
                '57': 108
                '58': 111
                '59': 112
                '60': 101
                '61': 114
                '62': 49
                '63': 54
                '64': 121
                '65': 115
                '66': 48
                '67': 101
                '68': 103
                '69': 57
                '70': 51
                '71': 53
                '72': 109
                '73': 107
                '74': 113
                '75': 112
                '76': 107
                '77': 121
                '78': 100
                '79': 107
                '80': 103
                '81': 102
                '82': 99
                '83': 106
                '84': 57
                '85': 97
                '86': 103
                '87': 101
                '88': 50
                '89': 97
                '90': 117
                '91': 56
                '92': 108
                '93': 57
                '94': 54
                '95': 110
                '96': 97
                '97': 101
                '98': 114
                '99': 101
                '100': 57
                '101': 26
                '102': 16
                '103': 10
                '104': 5
                '105': 117
                '106': 97
                '107': 116
                '108': 111
                '109': 109
                '110': 18
                '111': 7
                '112': 49
                '113': 48
                '114': 48
                '115': 48
                '116': 48
                '117': 48
                '118': 48
          memo: ''
          timeoutHeight:
            low: 0
            high: 0
            unsigned: true
          extensionOptions: []
          nonCriticalExtensionOptions: []
        signatures:
          - '0': 116
            '1': 104
            '2': 101
            '3': 116
            '4': 97
            '5': 45
            '6': 116
            '7': 101
            '8': 115
            '9': 116
            '10': 110
            '11': 101
            '12': 116
            '13': 45
            '14': 48
            '15': 48
            '16': 49
    DYDXCraftSendTxPayload:
      type: object
      required:
        - pubkey
        - to
        - amount_adydx
      properties:
        pubkey:
          type: string
          description: Wallet public key (compressed or uncompressed), this is different than the wallet address
          example: 039ce47b2a813d13876131a9c3be77e8c4afa49e948744abbee11f939e2a420f46
        to:
          type: string
          description: Recipient address
          example: dydx1mfdn23y2ydnp6j3l3f8rw6r2gzazrmprgxn5xl
        amount_adydx:
          type: string
          description: Amount to send in adydx
          example: '1000000000000000000000000'
    DYDXCraftNobleIbcTransferTxPayload:
      type: object
      required:
        - pubkey
        - amount_uusdc
      properties:
        pubkey:
          type: string
          description: Wallet public key (compressed or uncompressed), this is different than the wallet address
          example: 039ce47b2a813d13876131a9c3be77e8c4afa49e948744abbee11f939e2a420f46
        amount_uusdc:
          type: string
          description: The amount to transfer in uUSDC
          example: '1000000'
    DYDXGetBalancePayload:
      type: object
      required:
        - address
        - denom
      properties:
        address:
          type: string
          description: Wallet address
          example: dydx1djqecw6nn5tydxq0shan7srv8j65clsf7vypl6
        denom:
          type: string
          description: The denomination of the balance to query
          example: uusdc
    TIAStake:
      type: object
      required:
        - validator_address
        - delegator_address
        - rewards
        - available_rewards
        - balance
        - state
        - net_apy
        - unbondings
        - permissions
      properties:
        validator_address:
          type: string
          description: Public key of the validator
          example: celestiavaloper1djqecw6nn5tydxq0shan7srv8j65clsfmnxcfu
        delegator_address:
          type: string
          description: Public key of the delegator
          example: celestia1mfdn23y2ydnp6j3l3f8rw6r2gzazrmprgxn5xl
        delegated_at:
          type: string
          description: Date of first delegation ever for the stake. Unavailable for stakes older than [Theta v7 (12/04/2022)](https://github.com/cosmos/gaia/tree/main/docs/roadmap#cosmos-hub-summary).
          format: date-time
          example: '2023-06-16T03:13:23.058547Z'
        delegated_block:
          type: number
          description: Block of first delegation ever for the stake. Unavailable for stakes older than [Theta v7 (12/04/2022)](https://github.com/cosmos/gaia/tree/main/docs/roadmap#cosmos-hub-summary).
          example: 15739267
        undelegated_at:
          type: string
          description: Date of undelegation for the stake
          format: date-time
          example: '2023-07-14T03:56:13.561156Z'
        undelegated_block:
          type: number
          description: Block of undelegation for the stake
          example: 16126416
        rewards:
          type: string
          description: Total rewards accumulated by this stake since its first ever delegation in uTIA. Includes currently available rewards not yet withdrawn.
          example: '735573808534727891000000'
        available_rewards:
          type: string
          description: Available rewards in uTIA that can be withdrawn from this stake
          example: '36748808534727891000000'
        balance:
          type: string
          description: Staked balance on this stake in uTIA
          example: '6300000000000000000000000'
        net_apy:
          type: number
          description: Net annual percentage yield. Unavailable for stakes older than [Theta v7 (12/04/2022)](https://github.com/cosmos/gaia/tree/main/docs/roadmap#cosmos-hub-summary).
          example: 5.76
        state:
          type: string
          description: State of the Celestia stake
          example: active
          enum:
            - active
            - deactivating
            - inactive
        updated_at:
          type: string
          description: Last date this data was updated
          format: date-time
          example: '2023-01-14T01:13:59Z'
        permissions:
          description: permissions related to the stake currently active, ignored if there is no ongoing grants
          type: array
          items:
            type: object
            properties:
              source:
                type: string
                description: whether the stake is recipient (grantee) or the giver (granter) of the permissions
                example: granter
              creation_height:
                type: number
                description: Block at which the unbonding was created
                example: 15000000
              permission:
                type: string
                description: 'Kind of permission been grantee, can be: "Staking.MsgDelegate", "Staking.MsgUndelegate", "Staking.MsgRedelegate" or "Distribution.MsgWithdrawDelegatorReward"'
                example: Staking.MsgDelegate
              expires_at:
                type: string
                description: Exact time at which the permissions will be revoked
                format: date-time
                example: '2023-01-10T01:12:34Z'
                nullable: true
              allow_list:
                type: array
                items:
                  type: string
                nullable: true
                description: List of address on which the granted permission can be applied (ie validator on which delegation is allowed)
                example:
                  - celestiavaloper1xyz
                  - celestiavaloper1abc
              deny_list:
                type: array
                items:
                  type: string
                nullable: true
                description: List of address on which the granted permission cannot be applied (ie validator on which delegation is allowed)
                example:
                  - celestiavaloper1xyz
                  - celestiavaloper1abc
        unbondings:
          description: unbondings currently active on the stakes. ignored if no unbondings are returned
          type: array
          items:
            type: object
            required:
              - creation_height
              - completion_time
              - balance
              - initial_balance
            properties:
              creation_height:
                type: number
                description: Block at which the unbonding was created
                example: 15000000
              completion_time:
                type: string
                description: Exact time at which the unbonding will take effect
                format: date-time
                example: '2023-01-10T01:12:34Z'
              balance:
                type: string
                description: Amount currently associated with the unbonding (slashes included)
                example: '129300'
              initial_balance:
                type: string
                description: Amount expected at creation (slashes non-included)
                example: '150300'
    PostTIAStakesPayload:
      type: object
      required:
        - stakes
        - account_id
      properties:
        stakes:
          type: array
          items:
            type: object
            properties:
              stakeId:
                type: string
                description: Stake id {validator_address}_{delegator_address}
                example: celestiavaloper1djqecw6nn5tydxq0shan7srv8j65clsfmnxcfu_celestia1djqecw6nn5tydxq0shan7srv8j65clsf7vypl6}
        account_id:
          type: string
          description: Kiln Account ID
          example: 92f5bfd4-ea38-4824-84f7-686eddff5539
    TIAStakeMessage:
      type: object
      properties:
        typeUrl:
          type: string
          description: Type URL of the message
          example: /cosmos.staking.v1beta1.MsgDelegate
        value:
          type: object
          description: Message value
          example:
            delegatorAddress: celestia1djqecw6nn5tydxq0shan7srv8j65clsf7vypl6
            validatorAddress: celestiavaloper1djqecw6nn5tydxq0shan7srv8j65clsfmnxcfu
            amount:
              denom: utia
              amount: '1000000'
    TIAStakeMessageRestake:
      type: object
      properties:
        typeUrl:
          type: string
          description: Type URL of the message
          example: /cosmos.staking.v1beta1.StakeAuthorization
        value:
          type: object
          description: Message value
          example:
            allowList:
              address:
                - celestiavaloper1djqecw6nn5tydxq0shan7srv8j65clsfmnxcfu
            AuthorizationType: 1
    TIAStakeUnsignedTx:
      type: object
      required:
        - unsigned_tx_serialized
        - unsigned_tx_hash
        - tx_body
        - tx_auth_info
        - pubkey
        - messages
        - fee
        - chain_id
        - account_number
      properties:
        unsigned_tx_serialized:
          type: string
          description: Unsigned serialized transaction
          example: 0adf010adc010a2a2f636f736d6f732e7374616b696e672e763162657461312e4d7367426567696e526564656c656761746512ad010a2d636f736d6f733139633966646834383876716a636c6c74777036386a6d3530796477796833366a7165617465761234636f736d6f7376616c6f70657231307636777664656e65653872396c36776c73706863677572326c746c387a746b6672766a39611a34636f736d6f7376616c6f70657231796d7a336b6a7466397a6b666d6d3273326c7279376568307a6439657a33766335797030306622100a057561746f6d12073433313030303012670a500a460a1f2f636f736d6f732e63727970746f2e736563703235366b312e5075624b657912230a21039ce47b2a813d13876131a9c3be77e8c4afa49e948744abbee11f939e2a420f4612040a020801186d12130a0d0a057561746f6d1204353030301080897a1a1174686574612d746573746e65742d30303120e0cd2a
        unsigned_tx_hash:
          type: string
          description: Hash of the unsigned transaction
          example: b6ce1c8185416ce7d42a8c39566a9a2b6b2361a55c04a1dba3dd7445a0e1e364
        tx_body:
          type: string
          description: Transaction body serialized in hex
          example: 0a9e010a232f636f736d6f732e7374616b696e672e763162657461312e4d736744656c656761746512770a2d636f736d6f733139633966646834383876716a636c6c74777036386a6d3530796477796833366a7165617465761234636f736d6f7376616c6f706572313679733065673933356d6b71706b79646b6766636a39616765326175386c39366e61657265391a100a057561746f6d120731303030303030
        tx_auth_info:
          type: string
          description: Transaction auth info serialized in hex
          example: 0a2c0a2a0a28636f736d6f733139633966646834383876716a636c6c74777036386a6d3530796477796833366a716561746576120a2d636f736d6f733139633966646834383876716a636c6c74777036386a6d3530796477796833366a7165617465761234636f736d6f7376616c6f706572313679733065673933356d6b71706b79646b6766636a39616765326175386c39366e6165726539
        pubkey:
          type: string
          description: Wallet compressed public key, this is different than the wallet address
          example: 039ce47b2a813d13876131a9c3be77e8c4afa49e948744abbee11f939e2a420f46
        fee:
          type: object
          description: Fee included in the transaction. Object shape can be found [here](https://github.com/cosmos/cosmjs/blob/72da7971ee4fd77fec1bfef2ec1ba4f14f8c319d/packages/amino/src/signdoc.ts#L12)
          example:
            amount:
              - denom: utia
                amount: '5000'
            gas: '200000'
        messages:
          type: array
          description: List of messages included in the transaction. The list contains one message for the staking delegation and one more message for rewards restaking in case specified as a parameter (`restake_rewards=true`).
          items:
            oneOf:
              - $ref: '#/components/schemas/TIAStakeMessage'
              - $ref: '#/components/schemas/TIAStakeMessageRestake'
          example:
            - typeUrl: /cosmos.staking.v1beta1.MsgDelegate
              value:
                delegatorAddress: celestia1djqecw6nn5tydxq0shan7srv8j65clsf7vypl6
                validatorAddress: celestiavaloper1djqecw6nn5tydxq0shan7srv8j65clsfmnxcfu
                amount:
                  denom: utia
                  amount: '1000000'
            - typeUrl: /cosmos.staking.v1beta1.StakeAuthorization
              allowList:
                address:
                  - celestiavaloper1djqecw6nn5tydxq0shan7srv8j65clsfmnxcfu
              AuthorizationType: 1
        chain_id:
          type: string
          description: Chain ID
          example: cosmoshub-4
        account_number:
          type: number
          description: Account number
          example: 1234
    TIAUnsignedTx:
      type: object
      required:
        - unsigned_tx_serialized
        - unsigned_tx_hash
        - tx_body
        - tx_auth_info
        - pubkey
        - message
        - fee
        - chain_id
        - account_number
      properties:
        unsigned_tx_serialized:
          type: string
          description: Unsigned serialized transaction
          example: 0adf010adc010a2a2f636f736d6f732e7374616b696e672e763162657461312e4d7367426567696e526564656c656761746512ad010a2d636f736d6f733139633966646834383876716a636c6c74777036386a6d3530796477796833366a7165617465761234636f736d6f7376616c6f70657231307636777664656e65653872396c36776c73706863677572326c746c387a746b6672766a39611a34636f736d6f7376616c6f70657231796d7a336b6a7466397a6b666d6d3273326c7279376568307a6439657a33766335797030306622100a057561746f6d12073433313030303012670a500a460a1f2f636f736d6f732e63727970746f2e736563703235366b312e5075624b657912230a21039ce47b2a813d13876131a9c3be77e8c4afa49e948744abbee11f939e2a420f4612040a020801186d12130a0d0a057561746f6d1204353030301080897a1a1174686574612d746573746e65742d30303120e0cd2a
        unsigned_tx_hash:
          type: string
          description: Hash of the unsigned transaction
          example: b6ce1c8185416ce7d42a8c39566a9a2b6b2361a55c04a1dba3dd7445a0e1e364
        tx_body:
          type: string
          description: Transaction body serialized in hex
          example: 0a9e010a232f636f736d6f732e7374616b696e672e763162657461312e4d736744656c656761746512770a2d636f736d6f733139633966646834383876716a636c6c74777036386a6d3530796477796833366a7165617465761234636f736d6f7376616c6f706572313679733065673933356d6b71706b79646b6766636a39616765326175386c39366e61657265391a100a057561746f6d120731303030303030
        tx_auth_info:
          type: string
          description: Transaction auth info serialized in hex
          example: 0a2c0a2a0a28636f736d6f733139633966646834383876716a636c6c74777036386a6d3530796477796833366a716561746576120a2d636f736d6f733139633966646834383876716a636c6c74777036386a6d3530796477796833366a7165617465761234636f736d6f7376616c6f706572313679733065673933356d6b71706b79646b6766636a39616765326175386c39366e6165726539
        pubkey:
          type: string
          description: Wallet compressed public key, this is different than the wallet address
          example: 039ce47b2a813d13876131a9c3be77e8c4afa49e948744abbee11f939e2a420f46
        message:
          type: object
          description: Message included in the transaction
          example:
            typeUrl: /cosmos.staking.v1beta1.MsgDelegate
            value:
              delegatorAddress: celestia1djqecw6nn5tydxq0shan7srv8j65clsf7vypl6
              validatorAddress: celestiavaloper1djqecw6nn5tydxq0shan7srv8j65clsfmnxcfu
              amount:
                denom: utia
                amount: '1000000'
        fee:
          type: object
          description: Fee included in the transaction. Object shape can be found [here](https://github.com/cosmos/cosmjs/blob/72da7971ee4fd77fec1bfef2ec1ba4f14f8c319d/packages/amino/src/signdoc.ts#L12)
          example:
            amount:
              - denom: utia
                amount: '5000'
            gas: '200000'
        chain_id:
          type: string
          description: Chain ID
          example: cosmoshub-4
        account_number:
          type: number
          description: Account number
          example: 1234
    TIASignedTx:
      type: object
      required:
        - signed_tx_serialized
      properties:
        signed_tx_serialized:
          type: string
          description: Serialized signed transaction in hex
          example: 0aa1010a9e010a232f636f736d6f732e7374616b696e672e763162657461312e4d736744656c656761746512770a2d636f736d6f733139633966646834383876716a636c6c74777036386a6d3530796477796833366a7165617465761234636f736d6f7376616c6f706572313679733065673933356d6b71706b79646b6766636a39616765326175386c39366e61657265391a100a057561746f6d12073130303030303012670a500a460a1f2f636f736d6f732e63727970746f2e736563703235366b312e5075624b657912230a21039ce47b2a813d13876131a9c3be77e8c4afa49e948744abbee11f939e2a420f4612040a020801182012130a0d0a057561746f6d12043530303010e0a7121a40191f87a54dceafb6ab9a5f112a13444ca37e49a029e531bb21301fd72e9d390304c763cca5a9760a631dc85705dd6b08b50f5fff7d5de8d73b2cebd1f4c3b6a0
    TIATxHash:
      type: object
      required:
        - tx_hash
      properties:
        tx_hash:
          type: string
          description: Hash of the transaction
          example: 2B4F732E12D5D5AF1F907AD03B199167A718EDC6201DE5713143AB80990420CB
    TIAPrepareTxPayload:
      type: object
      required:
        - pubkey
        - tx_body
        - tx_auth_info
        - signature
      properties:
        pubkey:
          type: string
          description: Wallet public key (compressed or uncompressed), this is different than the wallet address
          example: 039ce47b2a813d13876131a9c3be77e8c4afa49e948744abbee11f939e2a420f46
        tx_body:
          type: string
          description: Transaction body serialized in hex
          example: 0a9e010a232f636f736d6f732e7374616b696e672e763162657461312e4d736744656c656761746512770a2d636f736d6f733139633966646834383876716a636c6c74777036386a6d3530796477796833366a7165617465761234636f736d6f7376616c6f706572313679733065673933356d6b71706b79646b6766636a39616765326175386c39366e61657265391a100a057561746f6d120731303030303030
        tx_auth_info:
          type: string
          description: Transaction auth info serialized in hex
          example: 0a2c0a2a0a28636f736d6f733139633966646834383876716a636c6c74777036386a6d3530796477796833366a716561746576120a2d636f736d6f733139633966646834383876716a636c6c74777036386a6d3530796477796833366a7165617465761234636f736d6f7376616c6f706572313679733065673933356d6b71706b79646b6766636a39616765326175386c39366e6165726539
        signature:
          type: string
          description: Transaction signature serialized in hex
          example: 191f87a54dceafb6ab9a5f112a13444ca37e49a029e531bb21301fd72e9d390304c763cca5a9760a631dc85705dd6b08b50f5fff7d5de8d73b2cebd1f4c3b6a0
    TIABroadcastTxPayload:
      type: object
      required:
        - tx_serialized
      properties:
        tx_serialized:
          type: string
          description: Signed transaction serialized in hex
          example: 0aa1010a9e010a232f636f736d6f732e7374616b696e672e763162657461312e4d736744656c656761746512770a2d636f736d6f733139633966646834383876716a636c6c74777036386a6d3530796477796833366a7165617465761234636f736d6f7376616c6f706572313679733065673933356d6b71706b79646b6766636a39616765326175386c39366e61657265391a100a057561746f6d12073130303030303012670a500a460a1f2f636f736d6f732e63727970746f2e736563703235366b312e5075624b657912230a21039ce47b2a813d13876131a9c3be77e8c4afa49e948744abbee11f939e2a420f4612040a020801182012130a0d0a057561746f6d12043530303010e0a7121a40191f87a54dceafb6ab9a5f112a13444ca37e49a029e531bb21301fd72e9d390304c763cca5a9760a631dc85705dd6b08b50f5fff7d5de8d73b2cebd1f4c3b6a0
    TIATxStatus:
      type: object
      properties:
        status:
          type: string
          enum:
            - success
            - error
          description: Transaction status
          example: success
        receipt:
          type: object
          description: Transaction receipt. Only present if status is success. Object shape can be found [here](https://github.com/cosmos/cosmjs/blob/e8e65aa0c145616ccb58625c32bffe08b46ff574/packages/stargate/src/stargateclient.ts#L67)
          example:
            height: 16007296
            txIndex: 0
            hash: 2B4F732E12D5D5AF1F907AD03B199167A718EDC6201DE5713143AB80990420CB
            code: 0
            events:
              - type: coin_spent
                attributes:
                  - key: spender
                    value: celestia19c9fdh488vqjclltwp68jm50ydwyh36jqeatev
                  - key: amount
                    value: 5000utia
              - type: coin_received
                attributes:
                  - key: receiver
                    value: celestia17xpfvakm2amg962yls6f84z3kell8c5lserqta
                  - key: amount
                    value: 5000utia
              - type: transfer
                attributes:
                  - key: recipient
                    value: celestia17xpfvakm2amg962yls6f84z3kell8c5lserqta
                  - key: sender
                    value: celestia19c9fdh488vqjclltwp68jm50ydwyh36jqeatev
                  - key: amount
                    value: 5000utia
              - type: message
                attributes:
                  - key: sender
                    value: celestia19c9fdh488vqjclltwp68jm50ydwyh36jqeatev
              - type: tx
                attributes:
                  - key: fee
                    value: 5000utia
                  - key: fee_payer
                    value: celestia19c9fdh488vqjclltwp68jm50ydwyh36jqeatev
              - type: tx
                attributes:
                  - key: acc_seq
                    value: celestia19c9fdh488vqjclltwp68jm50ydwyh36jqeatev/33
              - type: tx
                attributes:
                  - key: signature
                    value: GR+HpU3Or7arml8RKhNETKN+SaAp5TG7ITAf1y6dOQMEx2PMpal2CmMdyFcF3WsItQ9f/31d6Nc7LOvR9MO2oA==
              - type: message
                attributes:
                  - key: action
                    value: /cosmos.staking.v1beta1.MsgDelegate
              - type: coin_spent
                attributes:
                  - key: spender
                    value: celestia1jv65s3grqf6v6jl3dp4t6c9t9rk99cd88lyufl
                  - key: amount
                    value: 5utia
              - type: coin_received
                attributes:
                  - key: receiver
                    value: celestia19c9fdh488vqjclltwp68jm50ydwyh36jqeatev
                  - key: amount
                    value: 5utia
              - type: transfer
                attributes:
                  - key: recipient
                    value: celestia19c9fdh488vqjclltwp68jm50ydwyh36jqeatev
                  - key: sender
                    value: celestia1jv65s3grqf6v6jl3dp4t6c9t9rk99cd88lyufl
                  - key: amount
                    value: 5utia
              - type: message
                attributes:
                  - key: sender
                    value: celestia1jv65s3grqf6v6jl3dp4t6c9t9rk99cd88lyufl
              - type: withdraw_rewards
                attributes:
                  - key: amount
                    value: 5utia
                  - key: validator
                    value: celestiavaloper1djqecw6nn5tydxq0shan7srv8j65clsfmnxcfu
              - type: coin_spent
                attributes:
                  - key: spender
                    value: celestia19c9fdh488vqjclltwp68jm50ydwyh36jqeatev
                  - key: amount
                    value: 100000utia
              - type: coin_received
                attributes:
                  - key: receiver
                    value: celestia1fl48vsnmsdzcv85q5d2q4z5ajdha8yu34mf0eh
                  - key: amount
                    value: 100000utia
              - type: delegate
                attributes:
                  - key: validator
                    value: celestiavaloper1djqecw6nn5tydxq0shan7srv8j65clsfmnxcfu
                  - key: amount
                    value: 100000utia
                  - key: new_shares
                    value: '100000.000000000000000000'
              - type: message
                attributes:
                  - key: module
                    value: staking
                  - key: sender
                    value: celestia19c9fdh488vqjclltwp68jm50ydwyh36jqeatev
            rawLog: '[{"events":[{"type":"coin_received","attributes":[{"key":"receiver","value":"celestia19c9fdh488vqjclltwp68jm50ydwyh36jqeatev"},{"key":"amount","value":"5utia"},{"key":"receiver","value":"celestia1fl48vsnmsdzcv85q5d2q4z5ajdha8yu34mf0eh"},{"key":"amount","value":"100000utia"}]},{"type":"coin_spent","attributes":[{"key":"spender","value":"celestia1jv65s3grqf6v6jl3dp4t6c9t9rk99cd88lyufl"},{"key":"amount","value":"5utia"},{"key":"spender","value":"celestia19c9fdh488vqjclltwp68jm50ydwyh36jqeatev"},{"key":"amount","value":"100000utia"}]},{"type":"delegate","attributes":[{"key":"validator","value":"celestiavaloper1djqecw6nn5tydxq0shan7srv8j65clsfmnxcfu"},{"key":"amount","value":"100000utia"},{"key":"new_shares","value":"100000.000000000000000000"}]},{"type":"message","attributes":[{"key":"action","value":"/cosmos.staking.v1beta1.MsgDelegate"},{"key":"sender","value":"celestia1jv65s3grqf6v6jl3dp4t6c9t9rk99cd88lyufl"},{"key":"module","value":"staking"},{"key":"sender","value":"celestia19c9fdh488vqjclltwp68jm50ydwyh36jqeatev"}]},{"type":"transfer","attributes":[{"key":"recipient","value":"celestia19c9fdh488vqjclltwp68jm50ydwyh36jqeatev"},{"key":"sender","value":"celestia1jv65s3grqf6v6jl3dp4t6c9t9rk99cd88lyufl"},{"key":"amount","value":"5utia"}]},{"type":"withdraw_rewards","attributes":[{"key":"amount","value":"5utia"},{"key":"validator","value":"celestiavaloper1djqecw6nn5tydxq0shan7srv8j65clsfmnxcfu"}]}]}]'
            tx:
              '0': 10
              '1': 160
              '2': 1
              '3': 10
              '4': 157
              '5': 1
              '6': 10
              '7': 35
              '8': 47
              '9': 99
              '10': 111
              '11': 115
              '12': 109
              '13': 111
              '14': 115
              '15': 46
              '16': 115
              '17': 116
              '18': 97
              '19': 107
              '20': 105
              '21': 110
              '22': 103
              '23': 46
              '24': 118
              '25': 49
              '26': 98
              '27': 101
              '28': 116
              '29': 97
              '30': 49
              '31': 46
              '32': 77
              '33': 115
              '34': 103
              '35': 68
              '36': 101
              '37': 108
              '38': 101
              '39': 103
              '40': 97
              '41': 116
              '42': 101
              '43': 18
              '44': 118
              '45': 10
              '46': 45
              '47': 99
              '48': 111
              '49': 115
              '50': 109
              '51': 111
              '52': 115
              '53': 49
              '54': 57
              '55': 99
              '56': 57
              '57': 102
              '58': 100
              '59': 104
              '60': 52
              '61': 56
              '62': 56
              '63': 118
              '64': 113
              '65': 106
              '66': 99
              '67': 108
              '68': 108
              '69': 116
              '70': 119
              '71': 112
              '72': 54
              '73': 56
              '74': 106
              '75': 109
              '76': 53
              '77': 48
              '78': 121
              '79': 100
              '80': 119
              '81': 121
              '82': 104
              '83': 51
              '84': 54
              '85': 106
              '86': 113
              '87': 101
              '88': 97
              '89': 116
              '90': 101
              '91': 118
              '92': 18
              '93': 52
              '94': 99
              '95': 111
              '96': 115
              '97': 109
              '98': 111
              '99': 115
              '100': 118
              '101': 97
              '102': 108
              '103': 111
              '104': 112
              '105': 101
              '106': 114
              '107': 49
              '108': 54
              '109': 121
              '110': 115
              '111': 48
              '112': 101
              '113': 103
              '114': 57
              '115': 51
              '116': 53
              '117': 109
              '118': 107
              '119': 113
              '120': 112
              '121': 107
              '122': 121
              '123': 100
              '124': 107
              '125': 103
              '126': 102
              '127': 99
              '128': 106
              '129': 57
              '130': 97
              '131': 103
              '132': 101
              '133': 50
              '134': 97
              '135': 117
              '136': 56
              '137': 108
              '138': 57
              '139': 54
              '140': 110
              '141': 97
              '142': 101
              '143': 114
              '144': 101
              '145': 57
              '146': 26
              '147': 15
              '148': 10
              '149': 5
              '150': 117
              '151': 97
              '152': 116
              '153': 111
              '154': 109
              '155': 18
              '156': 6
              '157': 49
              '158': 48
              '159': 48
              '160': 48
              '161': 48
              '162': 48
              '163': 18
              '164': 103
              '165': 10
              '166': 80
              '167': 10
              '168': 70
              '169': 10
              '170': 31
              '171': 47
              '172': 99
              '173': 111
              '174': 115
              '175': 109
              '176': 111
              '177': 115
              '178': 46
              '179': 99
              '180': 114
              '181': 121
              '182': 112
              '183': 116
              '184': 111
              '185': 46
              '186': 115
              '187': 101
              '188': 99
              '189': 112
              '190': 50
              '191': 53
              '192': 54
              '193': 107
              '194': 49
              '195': 46
              '196': 80
              '197': 117
              '198': 98
              '199': 75
              '200': 101
              '201': 121
              '202': 18
              '203': 35
              '204': 10
              '205': 33
              '206': 3
              '207': 156
              '208': 228
              '209': 123
              '210': 42
              '211': 129
              '212': 61
              '213': 19
              '214': 135
              '215': 97
              '216': 49
              '217': 169
              '218': 195
              '219': 190
              '220': 119
              '221': 232
              '222': 196
              '223': 175
              '224': 164
              '225': 158
              '226': 148
              '227': 135
              '228': 68
              '229': 171
              '230': 190
              '231': 225
              '232': 31
              '233': 147
              '234': 158
              '235': 42
              '236': 66
              '237': 15
              '238': 70
              '239': 18
              '240': 4
              '241': 10
              '242': 2
              '243': 8
              '244': 1
              '245': 24
              '246': 33
              '247': 18
              '248': 19
              '249': 10
              '250': 13
              '251': 10
              '252': 5
              '253': 117
              '254': 97
              '255': 116
              '256': 111
              '257': 109
              '258': 18
              '259': 4
              '260': 53
              '261': 48
              '262': 48
              '263': 48
              '264': 16
              '265': 224
              '266': 167
              '267': 18
              '268': 26
              '269': 64
              '270': 25
              '271': 31
              '272': 135
              '273': 165
              '274': 77
              '275': 206
              '276': 175
              '277': 182
              '278': 171
              '279': 154
              '280': 95
              '281': 17
              '282': 42
              '283': 19
              '284': 68
              '285': 76
              '286': 163
              '287': 126
              '288': 73
              '289': 160
              '290': 41
              '291': 229
              '292': 49
              '293': 187
              '294': 33
              '295': 48
              '296': 31
              '297': 215
              '298': 46
              '299': 157
              '300': 57
              '301': 3
              '302': 4
              '303': 199
              '304': 99
              '305': 204
              '306': 165
              '307': 169
              '308': 118
              '309': 10
              '310': 99
              '311': 29
              '312': 200
              '313': 87
              '314': 5
              '315': 221
              '316': 107
              '317': 8
              '318': 181
              '319': 15
              '320': 95
              '321': 255
              '322': 125
              '323': 93
              '324': 232
              '325': 215
              '326': 59
              '327': 44
              '328': 235
              '329': 209
              '330': 244
              '331': 195
              '332': 182
              '333': 160
            gasUsed: 167798
            gasWanted: 300000
    TIACraftUnstakeTxPayload:
      type: object
      required:
        - pubkey
        - validator
      properties:
        pubkey:
          type: string
          example: 039ce47b2a813d13876131a9c3be77e8c4afa49e948744abbee11f939e2a420f46
          description: Wallet public key (compressed or uncompressed), this is different than the wallet address
        validator:
          type: string
          example: celestiavaloper1djqecw6nn5tydxq0shan7srv8j65clsfmnxcfu
          description: Validator address
        amount_utia:
          type: string
          example: '1000000000000000000000000'
          description: Amount to unstake in uTIA. Omit to unstake all the delegated amount
    TIACraftRedelegateTxPayload:
      type: object
      required:
        - account_id
        - pubkey
        - validator_source
        - validator_destination
      properties:
        account_id:
          type: string
          example: b7177fd2-fbb3-479f-aa92-db9fb16e229f
          format: uuid
          description: Kiln Account ID to which the new stake will be linked
        pubkey:
          type: string
          example: 039ce47b2a813d13876131a9c3be77e8c4afa49e948744abbee11f939e2a420f46
          description: Wallet public key (compressed or uncompressed), this is different than the wallet address
        validator_source:
          type: string
          example: celestiavaloper1djqecw6nn5tydxq0shan7srv8j65clsfmnxcfu
          description: Validator source address of current stake
        validator_destination:
          type: string
          example: celestiavaloper1djqecw6nn5tydxq0shan7srv8j65clsfmnxcfu
          description: Validator destination address to which redelegate the stake
        amount_utia:
          type: string
          example: '1000000000000000000000000'
          description: Amount to redelegate in uTIA
    TIACraftStakeTxPayload:
      type: object
      required:
        - account_id
        - pubkey
        - validator
        - amount_utia
      properties:
        account_id:
          type: string
          example: b7177fd2-fbb3-479f-aa92-db9fb16e229f
          format: uuid
          description: Kiln Account ID to stake into
        pubkey:
          type: string
          example: 039ce47b2a813d13876131a9c3be77e8c4afa49e948744abbee11f939e2a420f46
          description: Wallet public key (compressed or uncompressed), this is different than the wallet address
        validator:
          type: string
          example: celestiavaloper1djqecw6nn5tydxq0shan7srv8j65clsfmnxcfu
          description: Validator address
        amount_utia:
          type: string
          example: '1000000000000000000000000'
          description: Amount to stake in utia
        restake_rewards:
          type: boolean
          default: false
          description: If enabled, the rewards will be automatically restaked
        grantee_address:
          type: string
          example: cosmos1u4whe0pwlgt7q7ph37qxalq2wfq4pkcdze5fmd
          description: 'Grantee address, this address is specific to each validator. Kiln grantee addresses are found here: https://github.com/eco-stake/validator-registry/blob/master/Kiln/chains.json https://github.com/eco-stake/validator-registry/blob/master/interop/chains.json'
    TIACraftRestakeRewardsTxPayload:
      type: object
      required:
        - pubkey
        - validator_address
        - grantee_address
      properties:
        pubkey:
          type: string
          example: 039ce47b2a813d13876131a9c3be77e8c4afa49e948744abbee11f939e2a420f46
          description: Wallet public key (compressed or uncompressed), this is different than the wallet address
        validator_address:
          type: string
          example: celestiavaloper1djqecw6nn5tydxq0shan7srv8j65clsfmnxcfu
          description: Validator address
        grantee_address:
          type: string
          example: cosmos1u4whe0pwlgt7q7ph37qxalq2wfq4pkcdze5fmd
          description: 'Grantee address, this address is specific to each validator. Kiln grantee addresses are found here: https://github.com/eco-stake/validator-registry/blob/master/Kiln/chains.json https://github.com/eco-stake/validator-registry/blob/master/interop/chains.json'
    TIACraftWithdrawRewardsTxPayload:
      type: object
      required:
        - pubkey
        - validator
      properties:
        pubkey:
          type: string
          example: 039ce47b2a813d13876131a9c3be77e8c4afa49e948744abbee11f939e2a420f46
          description: Wallet public key (compressed or uncompressed), this is different than the wallet address
        validator:
          type: string
          example: celestiavaloper1djqecw6nn5tydxq0shan7srv8j65clsfmnxcfu
          description: Validator address
    TIAReward:
      type: object
      required:
        - date
        - rewards
        - balance
        - net_apy
      properties:
        date:
          type: string
          description: Day for this reward entry
          format: date
          example: '2023-01-15'
        rewards:
          type: string
          description: Accumulated rewards in uTIA during the day
          example: '3575891083876864200000'
        balance:
          type: string
          description: Staked balance in uTIA at the end of the day
          example: '6300000000000000000000000'
        net_apy:
          type: number
          description: Net annual percentage yield
          example: 20.76
        rewards_usd:
          type: number
          description: Estimated value of rewards generated for that day in USD. The exchange rate is the rate at the end of the day provided by CoinGeckko.
        balance_usd:
          type: number
          description: Estimated value of the staked balance at the beginning of the day in USD. The exchange rate is the rate at the end of the day provided by CoinGeckko.
    TIAOperationDelegate:
      type: object
      properties:
        type:
          type: string
          description: Operation type
          example: staking.MsgDelegate
        time:
          type: string
          description: Date of the operation
          format: date-time
          example: '2023-06-22T15:35:01.892644Z'
        block:
          type: number
          description: Transaction block
          example: 15828207
        tx_hash:
          type: string
          description: Transaction hash
          example: 7DBC7C481A9A28961BDDF5BCDD47217A126EC0497017908453D71FACA9FA3506
        tx_gas_used:
          type: string
          description: Gas used for the whole transaction in uTIA
          example: '186733'
        message_index:
          type: number
          description: Index of the message in the transaction
          example: 0
        validator_address:
          type: string
          description: Validator address
          example: celestiavaloper1djqecw6nn5tydxq0shan7srv8j65clsfmnxcfu
        delegator_address:
          type: string
          description: Delegator address
          example: celestia1djqecw6nn5tydxq0shan7srv8j65clsf7vypl6
        amount:
          type: string
          description: Amount added to the staked balance in uTIA
          example: '3000000'
        withdraw_rewards:
          type: string
          description: Rewards auto-claimed alongside the operation in uTIA
          example: '10841'
    TIAOperationUndelegate:
      type: object
      properties:
        type:
          type: string
          description: Operation type
          example: staking.MsgUndelegate
        time:
          type: string
          description: Date of the operation
          format: date-time
          example: '2023-06-22T15:35:01.892644Z'
        block:
          type: number
          description: Transaction block
          example: 15828207
        tx_hash:
          type: string
          description: Transaction hash
          example: 7DBC7C481A9A28961BDDF5BCDD47217A126EC0497017908453D71FACA9FA3506
        tx_gas_used:
          type: string
          description: Gas used for the whole transaction in uTIA
          example: '186733'
        message_index:
          type: number
          description: Index of the message in the transaction
          example: 0
        validator_address:
          type: string
          description: Validator address
          example: celestiavaloper1djqecw6nn5tydxq0shan7srv8j65clsfmnxcfu
        delegator_address:
          type: string
          description: Delegator address
          example: celestia1djqecw6nn5tydxq0shan7srv8j65clsf7vypl6
        amount:
          type: string
          description: Amount removed from the staked balance in uTIA
          example: '3000000'
        withdraw_rewards:
          type: string
          description: Rewards auto-claimed alongside the operation in uTIA
          example: '10841'
    TIAOperationRedelegate:
      type: object
      properties:
        type:
          type: string
          description: Operation type
          example: staking.MsgBeginRedelegate
        time:
          type: string
          description: Date of the operation
          format: date-time
          example: '2023-06-22T15:35:01.892644Z'
        block:
          type: number
          description: Transaction block
          example: 15828207
        tx_hash:
          type: string
          description: Transaction hash
          example: 7DBC7C481A9A28961BDDF5BCDD47217A126EC0497017908453D71FACA9FA3506
        tx_gas_used:
          type: string
          description: Gas used for the whole transaction in uTIA
          example: '186733'
        message_index:
          type: number
          description: Index of the message in the transaction
          example: 0
        validator_address:
          type: string
          description: Destination validator address
          example: celestiavaloper1djqecw6nn5tydxq0shan7srv8j65clsfmnxcfu
        validator_address_source:
          type: string
          description: Source validator address
          example: celestiavaloper1djqecw6nn5tydxq0shan7srv8j65clsfmnxcfu
        delegator_address:
          type: string
          description: Delegator address
          example: celestia1djqecw6nn5tydxq0shan7srv8j65clsf7vypl6
        amount:
          type: string
          description: Amount moved from the source validator staked balance to the destination validator staked balance in uTIA
          example: '3000000'
        withdraw_rewards:
          type: string
          description: Rewards auto-claimed from the destination validator alongside the operation in uTIA
          example: '10841'
        withdraw_rewards_source:
          type: string
          description: Rewards auto-claimed from the source validator alongside the operation in uTIA
          example: '10841'
    TIAOperationWithdrawRewards:
      type: object
      properties:
        type:
          type: string
          description: Operation type
          example: distr.MsgWithdrawDelegatorReward
        time:
          type: string
          description: Date of the operation
          format: date-time
          example: '2023-06-22T15:35:01.892644Z'
        block:
          type: number
          description: Transaction block
          example: 15828207
        tx_hash:
          type: string
          description: Transaction hash
          example: 7DBC7C481A9A28961BDDF5BCDD47217A126EC0497017908453D71FACA9FA3506
        tx_gas_used:
          type: string
          description: Gas used for the whole transaction in uTIA
          example: '186733'
        message_index:
          type: number
          description: Index of the message in the transaction
          example: 0
        validator_address:
          type: string
          description: Validator address
          example: celestiavaloper1djqecw6nn5tydxq0shan7srv8j65clsfmnxcfu
        delegator_address:
          type: string
          description: Delegator address
          example: celestia1djqecw6nn5tydxq0shan7srv8j65clsf7vypl6
        withdraw_rewards:
          type: string
          description: Rewards claimed alongside the operation in uTIA
          example: '10841'
    TIAOperationGrant:
      type: object
      properties:
        type:
          type: string
          description: Operation type
          example: Authz.Grant
        time:
          type: string
          description: Date of the operation
          format: date-time
          example: '2023-06-22T15:35:01.892644Z'
        block:
          type: number
          description: Transaction block
          example: 15828207
        tx_hash:
          type: string
          description: Transaction hash
          example: 7DBC7C481A9A28961BDDF5BCDD47217A126EC0497017908453D71FACA9FA3506
        tx_gas_used:
          type: string
          description: Gas used for the whole transaction in uTIA
          example: '186733'
        message_index:
          type: number
          description: Index of the message in the transaction
          example: 0
        grantee:
          type: string
          description: Recipient of the permissions
          example: celestia1djqecw6nn5tydxq0shan7srv8j65clsf7vypl6
        granter:
          type: string
          description: Owner of the stake giving the permissions
          example: celestia1djqecw6nn5tydxq0shan7srv8j65clsf7vypl6
        permission:
          type: string
          description: 'Kind of permission been grantee, can be: "Staking.MsgDelegate", "Staking.MsgUndelegate", "Staking.MsgRedelegate" or "Distribution.MsgWithdrawDelegatorReward"'
          example: Staking.MsgDelegate
        allow_list:
          type: array
          items:
            type: string
          nullable: true
          description: List of address on which the granted permission can be applied (ie validator on which delegation is allowed)
          example:
            - celestia1djqecw6nn5tydxq0shan7srv8j65clsf7vypl6
            - celestia1djqecw6nn5tydxq0shan7srv8j65clsf7vypl6
        deny_list:
          type: array
          items:
            type: string
          nullable: true
          description: List of address on which the granted permission cannot be applied (ie validator on which delegation is allowed)
          example:
            - celestia1djqecw6nn5tydxq0shan7srv8j65clsf7vypl6
            - celestia1djqecw6nn5tydxq0shan7srv8j65clsf7vypl6
    TIAOperationExec:
      type: object
      properties:
        type:
          type: string
          description: Operation type
          example: Authz.Exec
        time:
          type: string
          description: Date of the operation
          format: date-time
          example: '2023-06-22T15:35:01.892644Z'
        block:
          type: number
          description: Transaction block
          example: 15828207
        tx_hash:
          type: string
          description: Transaction hash
          example: 7DBC7C481A9A28961BDDF5BCDD47217A126EC0497017908453D71FACA9FA3506
        tx_gas_used:
          type: string
          description: Gas used for the whole transaction in uTIA
          example: '186733'
        message_index:
          type: number
          description: Index of the message in the transaction
          example: 0
        executed_operations:
          type: array
          nullable: true
          items:
            type: object
            properties:
              type:
                type: string
                description: Operation type
                example: staking.Delegate
              validator_address:
                type: string
                description: Destination validator address
                example: celestiavaloper1djqecw6nn5tydxq0shan7srv8j65clsfmnxcfu
              validator_address_source:
                type: string
                description: Source validator address
                example: celestiavaloper1djqecw6nn5tydxq0shan7srv8j65clsfmnxcfu
              delegator_address:
                type: string
                description: Delegator address
                example: celestia1djqecw6nn5tydxq0shan7srv8j65clsf7vypl6
              amount:
                type: string
                description: Amount moved from the source validator staked balance to the destination validator staked balance in uTIA
                example: '3000000'
              withdraw_rewards:
                type: string
                description: Rewards auto-claimed from the destination validator alongside the operation in uTIA
                example: '10841'
              withdraw_rewards_source:
                type: string
                description: Rewards auto-claimed from the source validator alongside the operation in uTIA
                example: '10841'
    TIANetworkStats:
      type: object
      required:
        - tia_price_usd
        - nb_validators
        - network_gross_apy
        - supply_staked_percent
        - inflation_rate
        - updated_at
      properties:
        tia_price_usd:
          type: number
          description: Price of Celestia in USD
          example: 10.53
        nb_validators:
          type: number
          description: Number of validators in the network
          example: 100
        network_gross_apy:
          type: number
          description: Gross annual percentage yield
          example: 4.5
        supply_staked_percent:
          type: number
          description: Supply of Celestia currently staked
          example: 12.4
        inflation_rate:
          type: number
          description: Celestia inflation rate
          example: 3.5
        updated_at:
          type: string
          description: Last date this data was updated
          format: date-time
          example: '2023-01-14T01:13:59Z'
    TIATxDecoding:
      type: object
      description: Decoded transaction
      example:
        authInfo:
          signerInfos:
            - publicKey:
                typeUrl: /cosmos.crypto.secp256k1.PubKey
                value:
                  '0': 10
                  '1': 33
                  '2': 3
                  '3': 156
                  '4': 228
                  '5': 123
                  '6': 42
                  '7': 129
                  '8': 61
                  '9': 19
                  '10': 135
                  '11': 97
                  '12': 49
                  '13': 169
                  '14': 195
                  '15': 190
                  '16': 119
                  '17': 232
                  '18': 196
                  '19': 175
                  '20': 164
                  '21': 158
                  '22': 148
                  '23': 135
                  '24': 68
                  '25': 171
                  '26': 190
                  '27': 225
                  '28': 31
                  '29': 147
                  '30': 158
                  '31': 42
                  '32': 66
                  '33': 15
                  '34': 70
              modeInfo:
                single:
                  mode: 1
              sequence:
                low: 102
                high: 0
                unsigned: true
          fee:
            amount:
              - denom: utia
                amount: '5000'
            gasLimit:
              low: 2000000
              high: 0
              unsigned: true
            payer: ''
            granter: ''
        body:
          messages:
            - typeUrl: /cosmos.staking.v1beta1.MsgDelegate
              value:
                '0': 10
                '1': 45
                '2': 99
                '3': 111
                '4': 115
                '5': 109
                '6': 111
                '7': 115
                '8': 49
                '9': 57
                '10': 99
                '11': 57
                '12': 102
                '13': 100
                '14': 104
                '15': 52
                '16': 56
                '17': 56
                '18': 118
                '19': 113
                '20': 106
                '21': 99
                '22': 108
                '23': 108
                '24': 116
                '25': 119
                '26': 112
                '27': 54
                '28': 56
                '29': 106
                '30': 109
                '31': 53
                '32': 48
                '33': 121
                '34': 100
                '35': 119
                '36': 121
                '37': 104
                '38': 51
                '39': 54
                '40': 106
                '41': 113
                '42': 101
                '43': 97
                '44': 116
                '45': 101
                '46': 118
                '47': 18
                '48': 52
                '49': 99
                '50': 111
                '51': 115
                '52': 109
                '53': 111
                '54': 115
                '55': 118
                '56': 97
                '57': 108
                '58': 111
                '59': 112
                '60': 101
                '61': 114
                '62': 49
                '63': 54
                '64': 121
                '65': 115
                '66': 48
                '67': 101
                '68': 103
                '69': 57
                '70': 51
                '71': 53
                '72': 109
                '73': 107
                '74': 113
                '75': 112
                '76': 107
                '77': 121
                '78': 100
                '79': 107
                '80': 103
                '81': 102
                '82': 99
                '83': 106
                '84': 57
                '85': 97
                '86': 103
                '87': 101
                '88': 50
                '89': 97
                '90': 117
                '91': 56
                '92': 108
                '93': 57
                '94': 54
                '95': 110
                '96': 97
                '97': 101
                '98': 114
                '99': 101
                '100': 57
                '101': 26
                '102': 16
                '103': 10
                '104': 5
                '105': 117
                '106': 97
                '107': 116
                '108': 111
                '109': 109
                '110': 18
                '111': 7
                '112': 49
                '113': 48
                '114': 48
                '115': 48
                '116': 48
                '117': 48
                '118': 48
          memo: ''
          timeoutHeight:
            low: 0
            high: 0
            unsigned: true
          extensionOptions: []
          nonCriticalExtensionOptions: []
        signatures:
          - '0': 116
            '1': 104
            '2': 101
            '3': 116
            '4': 97
            '5': 45
            '6': 116
            '7': 101
            '8': 115
            '9': 116
            '10': 110
            '11': 101
            '12': 116
            '13': 45
            '14': 48
            '15': 48
            '16': 49
    TIACraftSendTxPayload:
      type: object
      required:
        - pubkey
        - to
        - amount_utia
      properties:
        pubkey:
          type: string
          description: Wallet public key (compressed or uncompressed), this is different than the wallet address
          example: 039ce47b2a813d13876131a9c3be77e8c4afa49e948744abbee11f939e2a420f46
        to:
          type: string
          description: Recipient address
          example: celestia1mfdn23y2ydnp6j3l3f8rw6r2gzazrmprgxn5xl
        amount_utia:
          type: string
          description: Amount to send in utia
          example: '1000000000000000000000000'
    ZETAStake:
      type: object
      required:
        - validator_address
        - delegator_address
        - rewards
        - available_rewards
        - balance
        - state
        - net_apy
        - unbondings
        - permissions
      properties:
        validator_address:
          type: string
          description: Public key of the validator
          example: zetavaloper1u9xeaqdjz3kky2ymdhdsn0ra5uy9tc3ep3yfhe
        delegator_address:
          type: string
          description: Public key of the delegator
          example: zeta1mfdn23y2ydnp6j3l3f8rw6r2gzazrmprgxn5xl
        delegated_at:
          type: string
          description: Date of first delegation ever for the stake. Unavailable for stakes older than [Theta v7 (12/04/2022)](https://github.com/cosmos/gaia/tree/main/docs/roadmap#cosmos-hub-summary).
          format: date-time
          example: '2023-06-16T03:13:23.058547Z'
        delegated_block:
          type: number
          description: Block of first delegation ever for the stake. Unavailable for stakes older than [Theta v7 (12/04/2022)](https://github.com/cosmos/gaia/tree/main/docs/roadmap#cosmos-hub-summary).
          example: 15739267
        undelegated_at:
          type: string
          description: Date of undelegation for the stake
          format: date-time
          example: '2023-07-14T03:56:13.561156Z'
        undelegated_block:
          type: number
          description: Block of undelegation for the stake
          example: 16126416
        rewards:
          type: string
          description: Total rewards accumulated by this stake since its first ever delegation in uZETA. Includes currently available rewards not yet withdrawn.
          example: '735573808534727891000000'
        available_rewards:
          type: string
          description: Available rewards in uZETA that can be withdrawn from this stake
          example: '36748808534727891000000'
        balance:
          type: string
          description: Staked balance on this stake in uZETA
          example: '6300000000000000000000000'
        net_apy:
          type: number
          description: Net annual percentage yield. Not available for now, seet to 0.
          example: 5.76
        state:
          type: string
          description: State of the ZETACHAIN stake
          example: active
          enum:
            - active
            - deactivating
            - inactive
        updated_at:
          type: string
          description: Last date this data was updated
          format: date-time
          example: '2023-01-14T01:13:59Z'
        permissions:
          description: permissions related to the stake currently active, ignored if there is no ongoing grants
          type: array
          items:
            type: object
            properties:
              source:
                type: string
                description: whether the stake is recipient (grantee) or the giver (granter) of the permissions
                example: granter
              creation_height:
                type: number
                description: Block at which the unbonding was created
                example: 15000000
              permission:
                type: string
                description: 'Kind of permission been grantee, can be: "Staking.MsgDelegate", "Staking.MsgUndelegate", "Staking.MsgRedelegate" or "Distribution.MsgWithdrawDelegatorReward"'
                example: Staking.MsgDelegate
              expires_at:
                type: string
                description: Exact time at which the permissions will be revoked
                format: date-time
                example: '2023-01-10T01:12:34Z'
                nullable: true
              allow_list:
                type: array
                items:
                  type: string
                nullable: true
                description: List of address on which the granted permission can be applied (ie validator on which delegation is allowed)
                example:
                  - zetavaloper1xyz
                  - zetavaloper1abc
              deny_list:
                type: array
                items:
                  type: string
                nullable: true
                description: List of address on which the granted permission cannot be applied (ie validator on which delegation is allowed)
                example:
                  - zetavaloper1xyz
                  - zetavaloper1abc
        unbondings:
          description: unbondings currently active on the stakes. ignored if no unbondings are returned
          type: array
          items:
            type: object
            required:
              - creation_height
              - completion_time
              - balance
              - initial_balance
            properties:
              creation_height:
                type: number
                description: Block at which the unbonding was created
                example: 15000000
              completion_time:
                type: string
                description: Exact time at which the unbonding will take effect
                format: date-time
                example: '2023-01-10T01:12:34Z'
              balance:
                type: string
                description: Amount currently associated with the unbonding (slashes included)
                example: '129300'
              initial_balance:
                type: string
                description: Amount expected at creation (slashes non-included)
                example: '150300'
    PostZETAStakesPayload:
      type: object
      required:
        - stakes
        - account_id
      properties:
        stakes:
          type: array
          items:
            type: object
            properties:
              stakeId:
                type: string
                description: Stake id {validator_address}_{delegator_address}
                example: zetavaloper1u9xeaqdjz3kky2ymdhdsn0ra5uy9tc3ep3yfhe_zeta1u9xeaqdjz3kky2ymdhdsn0ra5uy9tc3e93u460}
        account_id:
          type: string
          description: Kiln Account ID
          example: 92f5bfd4-ea38-4824-84f7-686eddff5539
    ZETAStakeMessage:
      type: object
      properties:
        typeUrl:
          type: string
          description: Type URL of the message
          example: /cosmos.staking.v1beta1.MsgDelegate
        value:
          type: object
          description: Message value
          example:
            delegatorAddress: zeta1u9xeaqdjz3kky2ymdhdsn0ra5uy9tc3e93u460
            validatorAddress: zetavaloper1u9xeaqdjz3kky2ymdhdsn0ra5uy9tc3ep3yfhe
            amount:
              denom: azeta
              amount: '1000000'
    ZETAStakeMessageRestake:
      type: object
      properties:
        typeUrl:
          type: string
          description: Type URL of the message
          example: /cosmos.staking.v1beta1.StakeAuthorization
        value:
          type: object
          description: Message value
          example:
            allowList:
              address:
                - zetavaloper1u9xeaqdjz3kky2ymdhdsn0ra5uy9tc3ep3yfhe
            AuthorizationType: 1
    ZETAStakeUnsignedTx:
      type: object
      required:
        - unsigned_tx_serialized
        - unsigned_tx_hash
        - tx_body
        - tx_auth_info
        - pubkey
        - messages
        - fee
        - chain_id
        - account_number
      properties:
        unsigned_tx_serialized:
          type: string
          description: Unsigned serialized transaction
          example: 0adf010adc010a2a2f636f736d6f732e7374616b696e672e763162657461312e4d7367426567696e526564656c656761746512ad010a2d636f736d6f733139633966646834383876716a636c6c74777036386a6d3530796477796833366a7165617465761234636f736d6f7376616c6f70657231307636777664656e65653872396c36776c73706863677572326c746c387a746b6672766a39611a34636f736d6f7376616c6f70657231796d7a336b6a7466397a6b666d6d3273326c7279376568307a6439657a33766335797030306622100a057561746f6d12073433313030303012670a500a460a1f2f636f736d6f732e63727970746f2e736563703235366b312e5075624b657912230a21039ce47b2a813d13876131a9c3be77e8c4afa49e948744abbee11f939e2a420f4612040a020801186d12130a0d0a057561746f6d1204353030301080897a1a1174686574612d746573746e65742d30303120e0cd2a
        unsigned_tx_hash:
          type: string
          description: Hash of the unsigned transaction
          example: b6ce1c8185416ce7d42a8c39566a9a2b6b2361a55c04a1dba3dd7445a0e1e364
        tx_body:
          type: string
          description: Transaction body serialized in hex
          example: 0a9e010a232f636f736d6f732e7374616b696e672e763162657461312e4d736744656c656761746512770a2d636f736d6f733139633966646834383876716a636c6c74777036386a6d3530796477796833366a7165617465761234636f736d6f7376616c6f706572313679733065673933356d6b71706b79646b6766636a39616765326175386c39366e61657265391a100a057561746f6d120731303030303030
        tx_auth_info:
          type: string
          description: Transaction auth info serialized in hex
          example: 0a2c0a2a0a28636f736d6f733139633966646834383876716a636c6c74777036386a6d3530796477796833366a716561746576120a2d636f736d6f733139633966646834383876716a636c6c74777036386a6d3530796477796833366a7165617465761234636f736d6f7376616c6f706572313679733065673933356d6b71706b79646b6766636a39616765326175386c39366e6165726539
        pubkey:
          type: string
          description: Wallet compressed public key, this is different than the wallet address
          example: 039ce47b2a813d13876131a9c3be77e8c4afa49e948744abbee11f939e2a420f46
        fee:
          type: object
          description: Fee included in the transaction. Object shape can be found [here](https://github.com/cosmos/cosmjs/blob/72da7971ee4fd77fec1bfef2ec1ba4f14f8c319d/packages/amino/src/signdoc.ts#L12)
          example:
            amount:
              - denom: azeta
                amount: '5000'
            gas: '200000'
        messages:
          type: array
          description: List of messages included in the transaction.
          items:
            oneOf:
              - $ref: '#/components/schemas/ZETAStakeMessage'
          example:
            - typeUrl: /cosmos.staking.v1beta1.MsgDelegate
              value:
                delegatorAddress: zeta1u9xeaqdjz3kky2ymdhdsn0ra5uy9tc3e93u460
                validatorAddress: zetavaloper1u9xeaqdjz3kky2ymdhdsn0ra5uy9tc3ep3yfhe
                amount:
                  denom: azeta
                  amount: '1000000'
        chain_id:
          type: string
          description: Chain ID
          example: cosmoshub-4
        account_number:
          type: number
          description: Account number
          example: 1234
    ZETAUnsignedTx:
      type: object
      required:
        - unsigned_tx_serialized
        - unsigned_tx_hash
        - tx_body
        - tx_auth_info
        - pubkey
        - message
        - fee
        - chain_id
        - account_number
      properties:
        unsigned_tx_serialized:
          type: string
          description: Unsigned serialized transaction
          example: 0adf010adc010a2a2f636f736d6f732e7374616b696e672e763162657461312e4d7367426567696e526564656c656761746512ad010a2d636f736d6f733139633966646834383876716a636c6c74777036386a6d3530796477796833366a7165617465761234636f736d6f7376616c6f70657231307636777664656e65653872396c36776c73706863677572326c746c387a746b6672766a39611a34636f736d6f7376616c6f70657231796d7a336b6a7466397a6b666d6d3273326c7279376568307a6439657a33766335797030306622100a057561746f6d12073433313030303012670a500a460a1f2f636f736d6f732e63727970746f2e736563703235366b312e5075624b657912230a21039ce47b2a813d13876131a9c3be77e8c4afa49e948744abbee11f939e2a420f4612040a020801186d12130a0d0a057561746f6d1204353030301080897a1a1174686574612d746573746e65742d30303120e0cd2a
        unsigned_tx_hash:
          type: string
          description: Hash of the unsigned transaction
          example: b6ce1c8185416ce7d42a8c39566a9a2b6b2361a55c04a1dba3dd7445a0e1e364
        tx_body:
          type: string
          description: Transaction body serialized in hex
          example: 0a9e010a232f636f736d6f732e7374616b696e672e763162657461312e4d736744656c656761746512770a2d636f736d6f733139633966646834383876716a636c6c74777036386a6d3530796477796833366a7165617465761234636f736d6f7376616c6f706572313679733065673933356d6b71706b79646b6766636a39616765326175386c39366e61657265391a100a057561746f6d120731303030303030
        tx_auth_info:
          type: string
          description: Transaction auth info serialized in hex
          example: 0a2c0a2a0a28636f736d6f733139633966646834383876716a636c6c74777036386a6d3530796477796833366a716561746576120a2d636f736d6f733139633966646834383876716a636c6c74777036386a6d3530796477796833366a7165617465761234636f736d6f7376616c6f706572313679733065673933356d6b71706b79646b6766636a39616765326175386c39366e6165726539
        pubkey:
          type: string
          description: Wallet compressed public key, this is different than the wallet address
          example: 039ce47b2a813d13876131a9c3be77e8c4afa49e948744abbee11f939e2a420f46
        message:
          type: object
          description: Message included in the transaction
          example:
            typeUrl: /cosmos.staking.v1beta1.MsgDelegate
            value:
              delegatorAddress: zeta1u9xeaqdjz3kky2ymdhdsn0ra5uy9tc3e93u460
              validatorAddress: zetavaloper1u9xeaqdjz3kky2ymdhdsn0ra5uy9tc3ep3yfhe
              amount:
                denom: azeta
                amount: '1000000'
        fee:
          type: object
          description: Fee included in the transaction. Object shape can be found [here](https://github.com/cosmos/cosmjs/blob/72da7971ee4fd77fec1bfef2ec1ba4f14f8c319d/packages/amino/src/signdoc.ts#L12)
          example:
            amount:
              - denom: azeta
                amount: '5000'
            gas: '200000'
        chain_id:
          type: string
          description: Chain ID
          example: cosmoshub-4
        account_number:
          type: number
          description: Account number
          example: 1234
    ZETASignedTx:
      type: object
      required:
        - signed_tx_serialized
      properties:
        signed_tx_serialized:
          type: string
          description: Serialized signed transaction in hex
          example: 0aa1010a9e010a232f636f736d6f732e7374616b696e672e763162657461312e4d736744656c656761746512770a2d636f736d6f733139633966646834383876716a636c6c74777036386a6d3530796477796833366a7165617465761234636f736d6f7376616c6f706572313679733065673933356d6b71706b79646b6766636a39616765326175386c39366e61657265391a100a057561746f6d12073130303030303012670a500a460a1f2f636f736d6f732e63727970746f2e736563703235366b312e5075624b657912230a21039ce47b2a813d13876131a9c3be77e8c4afa49e948744abbee11f939e2a420f4612040a020801182012130a0d0a057561746f6d12043530303010e0a7121a40191f87a54dceafb6ab9a5f112a13444ca37e49a029e531bb21301fd72e9d390304c763cca5a9760a631dc85705dd6b08b50f5fff7d5de8d73b2cebd1f4c3b6a0
    ZETATxHash:
      type: object
      required:
        - tx_hash
      properties:
        tx_hash:
          type: string
          description: Hash of the transaction
          example: 2B4F732E12D5D5AF1F907AD03B199167A718EDC6201DE5713143AB80990420CB
    ZETAPrepareTxPayload:
      type: object
      required:
        - pubkey
        - tx_body
        - tx_auth_info
        - signature
      properties:
        pubkey:
          type: string
          description: Wallet public key (compressed or uncompressed), this is different than the wallet address
          example: 039ce47b2a813d13876131a9c3be77e8c4afa49e948744abbee11f939e2a420f46
        tx_body:
          type: string
          description: Transaction body serialized in hex
          example: 0a9e010a232f636f736d6f732e7374616b696e672e763162657461312e4d736744656c656761746512770a2d636f736d6f733139633966646834383876716a636c6c74777036386a6d3530796477796833366a7165617465761234636f736d6f7376616c6f706572313679733065673933356d6b71706b79646b6766636a39616765326175386c39366e61657265391a100a057561746f6d120731303030303030
        tx_auth_info:
          type: string
          description: Transaction auth info serialized in hex
          example: 0a2c0a2a0a28636f736d6f733139633966646834383876716a636c6c74777036386a6d3530796477796833366a716561746576120a2d636f736d6f733139633966646834383876716a636c6c74777036386a6d3530796477796833366a7165617465761234636f736d6f7376616c6f706572313679733065673933356d6b71706b79646b6766636a39616765326175386c39366e6165726539
        signature:
          type: string
          description: Transaction signature serialized in hex
          example: 191f87a54dceafb6ab9a5f112a13444ca37e49a029e531bb21301fd72e9d390304c763cca5a9760a631dc85705dd6b08b50f5fff7d5de8d73b2cebd1f4c3b6a0
    ZETABroadcastTxPayload:
      type: object
      required:
        - tx_serialized
      properties:
        tx_serialized:
          type: string
          description: Signed transaction serialized in hex
          example: 0aa1010a9e010a232f636f736d6f732e7374616b696e672e763162657461312e4d736744656c656761746512770a2d636f736d6f733139633966646834383876716a636c6c74777036386a6d3530796477796833366a7165617465761234636f736d6f7376616c6f706572313679733065673933356d6b71706b79646b6766636a39616765326175386c39366e61657265391a100a057561746f6d12073130303030303012670a500a460a1f2f636f736d6f732e63727970746f2e736563703235366b312e5075624b657912230a21039ce47b2a813d13876131a9c3be77e8c4afa49e948744abbee11f939e2a420f4612040a020801182012130a0d0a057561746f6d12043530303010e0a7121a40191f87a54dceafb6ab9a5f112a13444ca37e49a029e531bb21301fd72e9d390304c763cca5a9760a631dc85705dd6b08b50f5fff7d5de8d73b2cebd1f4c3b6a0
    ZETATxStatus:
      type: object
      properties:
        status:
          type: string
          enum:
            - success
            - error
          description: Transaction status
          example: success
        receipt:
          type: object
          description: Transaction receipt. Only present if status is success. Object shape can be found [here](https://github.com/cosmos/cosmjs/blob/e8e65aa0c145616ccb58625c32bffe08b46ff574/packages/stargate/src/stargateclient.ts#L67)
          example:
            height: 16007296
            txIndex: 0
            hash: 2B4F732E12D5D5AF1F907AD03B199167A718EDC6201DE5713143AB80990420CB
            code: 0
            events:
              - type: coin_spent
                attributes:
                  - key: spender
                    value: zeta19c9fdh488vqjclltwp68jm50ydwyh36jqeatev
                  - key: amount
                    value: 5000azeta
              - type: coin_received
                attributes:
                  - key: receiver
                    value: zeta17xpfvakm2amg962yls6f84z3kell8c5lserqta
                  - key: amount
                    value: 5000azeta
              - type: transfer
                attributes:
                  - key: recipient
                    value: zeta17xpfvakm2amg962yls6f84z3kell8c5lserqta
                  - key: sender
                    value: zeta19c9fdh488vqjclltwp68jm50ydwyh36jqeatev
                  - key: amount
                    value: 5000azeta
              - type: message
                attributes:
                  - key: sender
                    value: zeta19c9fdh488vqjclltwp68jm50ydwyh36jqeatev
              - type: tx
                attributes:
                  - key: fee
                    value: 5000azeta
                  - key: fee_payer
                    value: zeta19c9fdh488vqjclltwp68jm50ydwyh36jqeatev
              - type: tx
                attributes:
                  - key: acc_seq
                    value: zeta19c9fdh488vqjclltwp68jm50ydwyh36jqeatev/33
              - type: tx
                attributes:
                  - key: signature
                    value: GR+HpU3Or7arml8RKhNETKN+SaAp5TG7ITAf1y6dOQMEx2PMpal2CmMdyFcF3WsItQ9f/31d6Nc7LOvR9MO2oA==
              - type: message
                attributes:
                  - key: action
                    value: /cosmos.staking.v1beta1.MsgDelegate
              - type: coin_spent
                attributes:
                  - key: spender
                    value: zeta1jv65s3grqf6v6jl3dp4t6c9t9rk99cd88lyufl
                  - key: amount
                    value: 5azeta
              - type: coin_received
                attributes:
                  - key: receiver
                    value: zeta19c9fdh488vqjclltwp68jm50ydwyh36jqeatev
                  - key: amount
                    value: 5azeta
              - type: transfer
                attributes:
                  - key: recipient
                    value: zeta19c9fdh488vqjclltwp68jm50ydwyh36jqeatev
                  - key: sender
                    value: zeta1jv65s3grqf6v6jl3dp4t6c9t9rk99cd88lyufl
                  - key: amount
                    value: 5azeta
              - type: message
                attributes:
                  - key: sender
                    value: zeta1jv65s3grqf6v6jl3dp4t6c9t9rk99cd88lyufl
              - type: withdraw_rewards
                attributes:
                  - key: amount
                    value: 5azeta
                  - key: validator
                    value: zetavaloper1u9xeaqdjz3kky2ymdhdsn0ra5uy9tc3ep3yfhe
              - type: coin_spent
                attributes:
                  - key: spender
                    value: zeta19c9fdh488vqjclltwp68jm50ydwyh36jqeatev
                  - key: amount
                    value: 100000azeta
              - type: coin_received
                attributes:
                  - key: receiver
                    value: zeta1fl48vsnmsdzcv85q5d2q4z5ajdha8yu34mf0eh
                  - key: amount
                    value: 100000azeta
              - type: delegate
                attributes:
                  - key: validator
                    value: zetavaloper1u9xeaqdjz3kky2ymdhdsn0ra5uy9tc3ep3yfhe
                  - key: amount
                    value: 100000azeta
                  - key: new_shares
                    value: '100000.000000000000000000'
              - type: message
                attributes:
                  - key: module
                    value: staking
                  - key: sender
                    value: zeta19c9fdh488vqjclltwp68jm50ydwyh36jqeatev
            rawLog: '[{"events":[{"type":"coin_received","attributes":[{"key":"receiver","value":"zeta19c9fdh488vqjclltwp68jm50ydwyh36jqeatev"},{"key":"amount","value":"5azeta"},{"key":"receiver","value":"zeta1fl48vsnmsdzcv85q5d2q4z5ajdha8yu34mf0eh"},{"key":"amount","value":"100000azeta"}]},{"type":"coin_spent","attributes":[{"key":"spender","value":"zeta1jv65s3grqf6v6jl3dp4t6c9t9rk99cd88lyufl"},{"key":"amount","value":"5azeta"},{"key":"spender","value":"zeta19c9fdh488vqjclltwp68jm50ydwyh36jqeatev"},{"key":"amount","value":"100000azeta"}]},{"type":"delegate","attributes":[{"key":"validator","value":"zetavaloper1u9xeaqdjz3kky2ymdhdsn0ra5uy9tc3ep3yfhe"},{"key":"amount","value":"100000azeta"},{"key":"new_shares","value":"100000.000000000000000000"}]},{"type":"message","attributes":[{"key":"action","value":"/cosmos.staking.v1beta1.MsgDelegate"},{"key":"sender","value":"zeta1jv65s3grqf6v6jl3dp4t6c9t9rk99cd88lyufl"},{"key":"module","value":"staking"},{"key":"sender","value":"zeta19c9fdh488vqjclltwp68jm50ydwyh36jqeatev"}]},{"type":"transfer","attributes":[{"key":"recipient","value":"zeta19c9fdh488vqjclltwp68jm50ydwyh36jqeatev"},{"key":"sender","value":"zeta1jv65s3grqf6v6jl3dp4t6c9t9rk99cd88lyufl"},{"key":"amount","value":"5azeta"}]},{"type":"withdraw_rewards","attributes":[{"key":"amount","value":"5azeta"},{"key":"validator","value":"zetavaloper1u9xeaqdjz3kky2ymdhdsn0ra5uy9tc3ep3yfhe"}]}]}]'
            tx:
              '0': 10
              '1': 160
              '2': 1
              '3': 10
              '4': 157
              '5': 1
              '6': 10
              '7': 35
              '8': 47
              '9': 99
              '10': 111
              '11': 115
              '12': 109
              '13': 111
              '14': 115
              '15': 46
              '16': 115
              '17': 116
              '18': 97
              '19': 107
              '20': 105
              '21': 110
              '22': 103
              '23': 46
              '24': 118
              '25': 49
              '26': 98
              '27': 101
              '28': 116
              '29': 97
              '30': 49
              '31': 46
              '32': 77
              '33': 115
              '34': 103
              '35': 68
              '36': 101
              '37': 108
              '38': 101
              '39': 103
              '40': 97
              '41': 116
              '42': 101
              '43': 18
              '44': 118
              '45': 10
              '46': 45
              '47': 99
              '48': 111
              '49': 115
              '50': 109
              '51': 111
              '52': 115
              '53': 49
              '54': 57
              '55': 99
              '56': 57
              '57': 102
              '58': 100
              '59': 104
              '60': 52
              '61': 56
              '62': 56
              '63': 118
              '64': 113
              '65': 106
              '66': 99
              '67': 108
              '68': 108
              '69': 116
              '70': 119
              '71': 112
              '72': 54
              '73': 56
              '74': 106
              '75': 109
              '76': 53
              '77': 48
              '78': 121
              '79': 100
              '80': 119
              '81': 121
              '82': 104
              '83': 51
              '84': 54
              '85': 106
              '86': 113
              '87': 101
              '88': 97
              '89': 116
              '90': 101
              '91': 118
              '92': 18
              '93': 52
              '94': 99
              '95': 111
              '96': 115
              '97': 109
              '98': 111
              '99': 115
              '100': 118
              '101': 97
              '102': 108
              '103': 111
              '104': 112
              '105': 101
              '106': 114
              '107': 49
              '108': 54
              '109': 121
              '110': 115
              '111': 48
              '112': 101
              '113': 103
              '114': 57
              '115': 51
              '116': 53
              '117': 109
              '118': 107
              '119': 113
              '120': 112
              '121': 107
              '122': 121
              '123': 100
              '124': 107
              '125': 103
              '126': 102
              '127': 99
              '128': 106
              '129': 57
              '130': 97
              '131': 103
              '132': 101
              '133': 50
              '134': 97
              '135': 117
              '136': 56
              '137': 108
              '138': 57
              '139': 54
              '140': 110
              '141': 97
              '142': 101
              '143': 114
              '144': 101
              '145': 57
              '146': 26
              '147': 15
              '148': 10
              '149': 5
              '150': 117
              '151': 97
              '152': 116
              '153': 111
              '154': 109
              '155': 18
              '156': 6
              '157': 49
              '158': 48
              '159': 48
              '160': 48
              '161': 48
              '162': 48
              '163': 18
              '164': 103
              '165': 10
              '166': 80
              '167': 10
              '168': 70
              '169': 10
              '170': 31
              '171': 47
              '172': 99
              '173': 111
              '174': 115
              '175': 109
              '176': 111
              '177': 115
              '178': 46
              '179': 99
              '180': 114
              '181': 121
              '182': 112
              '183': 116
              '184': 111
              '185': 46
              '186': 115
              '187': 101
              '188': 99
              '189': 112
              '190': 50
              '191': 53
              '192': 54
              '193': 107
              '194': 49
              '195': 46
              '196': 80
              '197': 117
              '198': 98
              '199': 75
              '200': 101
              '201': 121
              '202': 18
              '203': 35
              '204': 10
              '205': 33
              '206': 3
              '207': 156
              '208': 228
              '209': 123
              '210': 42
              '211': 129
              '212': 61
              '213': 19
              '214': 135
              '215': 97
              '216': 49
              '217': 169
              '218': 195
              '219': 190
              '220': 119
              '221': 232
              '222': 196
              '223': 175
              '224': 164
              '225': 158
              '226': 148
              '227': 135
              '228': 68
              '229': 171
              '230': 190
              '231': 225
              '232': 31
              '233': 147
              '234': 158
              '235': 42
              '236': 66
              '237': 15
              '238': 70
              '239': 18
              '240': 4
              '241': 10
              '242': 2
              '243': 8
              '244': 1
              '245': 24
              '246': 33
              '247': 18
              '248': 19
              '249': 10
              '250': 13
              '251': 10
              '252': 5
              '253': 117
              '254': 97
              '255': 116
              '256': 111
              '257': 109
              '258': 18
              '259': 4
              '260': 53
              '261': 48
              '262': 48
              '263': 48
              '264': 16
              '265': 224
              '266': 167
              '267': 18
              '268': 26
              '269': 64
              '270': 25
              '271': 31
              '272': 135
              '273': 165
              '274': 77
              '275': 206
              '276': 175
              '277': 182
              '278': 171
              '279': 154
              '280': 95
              '281': 17
              '282': 42
              '283': 19
              '284': 68
              '285': 76
              '286': 163
              '287': 126
              '288': 73
              '289': 160
              '290': 41
              '291': 229
              '292': 49
              '293': 187
              '294': 33
              '295': 48
              '296': 31
              '297': 215
              '298': 46
              '299': 157
              '300': 57
              '301': 3
              '302': 4
              '303': 199
              '304': 99
              '305': 204
              '306': 165
              '307': 169
              '308': 118
              '309': 10
              '310': 99
              '311': 29
              '312': 200
              '313': 87
              '314': 5
              '315': 221
              '316': 107
              '317': 8
              '318': 181
              '319': 15
              '320': 95
              '321': 255
              '322': 125
              '323': 93
              '324': 232
              '325': 215
              '326': 59
              '327': 44
              '328': 235
              '329': 209
              '330': 244
              '331': 195
              '332': 182
              '333': 160
            gasUsed: 167798
            gasWanted: 300000
    ZETACraftUnstakeTxPayload:
      type: object
      required:
        - pubkey
        - validator
      properties:
        pubkey:
          type: string
          example: 039ce47b2a813d13876131a9c3be77e8c4afa49e948744abbee11f939e2a420f46
          description: Wallet public key (compressed or uncompressed), this is different than the wallet address
        validator:
          type: string
          example: zetavaloper1u9xeaqdjz3kky2ymdhdsn0ra5uy9tc3ep3yfhe
          description: Validator address
        amount_azeta:
          type: string
          example: '1000000000000000000000000'
          description: Amount to unstake in uZETA. Omit to unstake all the delegated amount
    ZETACraftRedelegateTxPayload:
      type: object
      required:
        - account_id
        - pubkey
        - validator_source
        - validator_destination
      properties:
        account_id:
          type: string
          example: b7177fd2-fbb3-479f-aa92-db9fb16e229f
          format: uuid
          description: Kiln Account ID to which the new stake will be linked
        pubkey:
          type: string
          example: 039ce47b2a813d13876131a9c3be77e8c4afa49e948744abbee11f939e2a420f46
          description: Wallet public key (compressed or uncompressed), this is different than the wallet address
        validator_source:
          type: string
          example: zetavaloper1u9xeaqdjz3kky2ymdhdsn0ra5uy9tc3ep3yfhe
          description: Validator source address of current stake
        validator_destination:
          type: string
          example: zetavaloper1u9xeaqdjz3kky2ymdhdsn0ra5uy9tc3ep3yfhe
          description: Validator destination address to which redelegate the stake
        amount_azeta:
          type: string
          example: '1000000000000000000000000'
          description: Amount to redelegate in uZETA
    ZETACraftStakeTxPayload:
      type: object
      required:
        - account_id
        - pubkey
        - validator
        - amount_azeta
      properties:
        account_id:
          type: string
          example: b7177fd2-fbb3-479f-aa92-db9fb16e229f
          format: uuid
          description: Kiln Account ID to stake into
        pubkey:
          type: string
          example: 039ce47b2a813d13876131a9c3be77e8c4afa49e948744abbee11f939e2a420f46
          description: Wallet public key (compressed or uncompressed), this is different than the wallet address
        validator:
          type: string
          example: zetavaloper1u9xeaqdjz3kky2ymdhdsn0ra5uy9tc3ep3yfhe
          description: Validator address
        amount_azeta:
          type: string
          example: '1000000000000000000000000'
          description: Amount to stake in azeta
    ZETACraftRestakeRewardsTxPayload:
      type: object
      required:
        - pubkey
        - validator_address
        - grantee_address
      properties:
        pubkey:
          type: string
          example: 039ce47b2a813d13876131a9c3be77e8c4afa49e948744abbee11f939e2a420f46
          description: Wallet public key (compressed or uncompressed), this is different than the wallet address
        validator_address:
          type: string
          example: zetavaloper1u9xeaqdjz3kky2ymdhdsn0ra5uy9tc3ep3yfhe
          description: Validator address
        grantee_address:
          type: string
          example: cosmos1u4whe0pwlgt7q7ph37qxalq2wfq4pkcdze5fmd
          description: 'Grantee address, this address is specific to each validator. Kiln grantee addresses are found here: https://github.com/eco-stake/validator-registry/blob/master/Kiln/chains.json https://github.com/eco-stake/validator-registry/blob/master/interop/chains.json'
    ZETACraftWithdrawRewardsTxPayload:
      type: object
      required:
        - pubkey
        - validator
      properties:
        pubkey:
          type: string
          example: 039ce47b2a813d13876131a9c3be77e8c4afa49e948744abbee11f939e2a420f46
          description: Wallet public key (compressed or uncompressed), this is different than the wallet address
        validator:
          type: string
          example: zetavaloper1u9xeaqdjz3kky2ymdhdsn0ra5uy9tc3ep3yfhe
          description: Validator address
    ZETAReward:
      type: object
      required:
        - date
        - rewards
        - balance
        - net_apy
      properties:
        date:
          type: string
          description: Day for this reward entry
          format: date
          example: '2023-01-15'
        rewards:
          type: string
          description: Accumulated rewards in uZETA during the day
          example: '3575891083876864200000'
        balance:
          type: string
          description: Staked balance in uZETA at the end of the day
          example: '6300000000000000000000000'
        net_apy:
          type: number
          description: Net annual percentage yield
          example: 20.76
        rewards_usd:
          type: number
          description: Estimated value of rewards generated for that day in USD. The exchange rate is the rate at the end of the day provided by CoinGeckko.
        balance_usd:
          type: number
          description: Estimated value of the staked balance at the beginning of the day in USD. The exchange rate is the rate at the end of the day provided by CoinGeckko.
    ZETAOperationDelegate:
      type: object
      properties:
        type:
          type: string
          description: Operation type
          example: staking.MsgDelegate
        time:
          type: string
          description: Date of the operation
          format: date-time
          example: '2023-06-22T15:35:01.892644Z'
        block:
          type: number
          description: Transaction block
          example: 15828207
        tx_hash:
          type: string
          description: Transaction hash
          example: 7DBC7C481A9A28961BDDF5BCDD47217A126EC0497017908453D71FACA9FA3506
        tx_gas_used:
          type: string
          description: Gas used for the whole transaction in uZETA
          example: '186733'
        message_index:
          type: number
          description: Index of the message in the transaction
          example: 0
        validator_address:
          type: string
          description: Validator address
          example: zetavaloper1u9xeaqdjz3kky2ymdhdsn0ra5uy9tc3ep3yfhe
        delegator_address:
          type: string
          description: Delegator address
          example: zeta1u9xeaqdjz3kky2ymdhdsn0ra5uy9tc3e93u460
        amount:
          type: string
          description: Amount added to the staked balance in uZETA
          example: '3000000'
        withdraw_rewards:
          type: string
          description: Rewards auto-claimed alongside the operation in uZETA
          example: '10841'
    ZETAOperationUndelegate:
      type: object
      properties:
        type:
          type: string
          description: Operation type
          example: staking.MsgUndelegate
        time:
          type: string
          description: Date of the operation
          format: date-time
          example: '2023-06-22T15:35:01.892644Z'
        block:
          type: number
          description: Transaction block
          example: 15828207
        tx_hash:
          type: string
          description: Transaction hash
          example: 7DBC7C481A9A28961BDDF5BCDD47217A126EC0497017908453D71FACA9FA3506
        tx_gas_used:
          type: string
          description: Gas used for the whole transaction in uZETA
          example: '186733'
        message_index:
          type: number
          description: Index of the message in the transaction
          example: 0
        validator_address:
          type: string
          description: Validator address
          example: zetavaloper1u9xeaqdjz3kky2ymdhdsn0ra5uy9tc3ep3yfhe
        delegator_address:
          type: string
          description: Delegator address
          example: zeta1u9xeaqdjz3kky2ymdhdsn0ra5uy9tc3e93u460
        amount:
          type: string
          description: Amount removed from the staked balance in uZETA
          example: '3000000'
        withdraw_rewards:
          type: string
          description: Rewards auto-claimed alongside the operation in uZETA
          example: '10841'
    ZETAOperationRedelegate:
      type: object
      properties:
        type:
          type: string
          description: Operation type
          example: staking.MsgBeginRedelegate
        time:
          type: string
          description: Date of the operation
          format: date-time
          example: '2023-06-22T15:35:01.892644Z'
        block:
          type: number
          description: Transaction block
          example: 15828207
        tx_hash:
          type: string
          description: Transaction hash
          example: 7DBC7C481A9A28961BDDF5BCDD47217A126EC0497017908453D71FACA9FA3506
        tx_gas_used:
          type: string
          description: Gas used for the whole transaction in uZETA
          example: '186733'
        message_index:
          type: number
          description: Index of the message in the transaction
          example: 0
        validator_address:
          type: string
          description: Destination validator address
          example: zetavaloper1u9xeaqdjz3kky2ymdhdsn0ra5uy9tc3ep3yfhe
        validator_address_source:
          type: string
          description: Source validator address
          example: zetavaloper1u9xeaqdjz3kky2ymdhdsn0ra5uy9tc3ep3yfhe
        delegator_address:
          type: string
          description: Delegator address
          example: zeta1u9xeaqdjz3kky2ymdhdsn0ra5uy9tc3e93u460
        amount:
          type: string
          description: Amount moved from the source validator staked balance to the destination validator staked balance in uZETA
          example: '3000000'
        withdraw_rewards:
          type: string
          description: Rewards auto-claimed from the destination validator alongside the operation in uZETA
          example: '10841'
        withdraw_rewards_source:
          type: string
          description: Rewards auto-claimed from the source validator alongside the operation in uZETA
          example: '10841'
    ZETAOperationWithdrawRewards:
      type: object
      properties:
        type:
          type: string
          description: Operation type
          example: distr.MsgWithdrawDelegatorReward
        time:
          type: string
          description: Date of the operation
          format: date-time
          example: '2023-06-22T15:35:01.892644Z'
        block:
          type: number
          description: Transaction block
          example: 15828207
        tx_hash:
          type: string
          description: Transaction hash
          example: 7DBC7C481A9A28961BDDF5BCDD47217A126EC0497017908453D71FACA9FA3506
        tx_gas_used:
          type: string
          description: Gas used for the whole transaction in uZETA
          example: '186733'
        message_index:
          type: number
          description: Index of the message in the transaction
          example: 0
        validator_address:
          type: string
          description: Validator address
          example: zetavaloper1u9xeaqdjz3kky2ymdhdsn0ra5uy9tc3ep3yfhe
        delegator_address:
          type: string
          description: Delegator address
          example: zeta1u9xeaqdjz3kky2ymdhdsn0ra5uy9tc3e93u460
        withdraw_rewards:
          type: string
          description: Rewards claimed alongside the operation in uZETA
          example: '10841'
    ZETAOperationGrant:
      type: object
      properties:
        type:
          type: string
          description: Operation type
          example: Authz.Grant
        time:
          type: string
          description: Date of the operation
          format: date-time
          example: '2023-06-22T15:35:01.892644Z'
        block:
          type: number
          description: Transaction block
          example: 15828207
        tx_hash:
          type: string
          description: Transaction hash
          example: 7DBC7C481A9A28961BDDF5BCDD47217A126EC0497017908453D71FACA9FA3506
        tx_gas_used:
          type: string
          description: Gas used for the whole transaction in uZETA
          example: '186733'
        message_index:
          type: number
          description: Index of the message in the transaction
          example: 0
        grantee:
          type: string
          description: Recipient of the permissions
          example: zeta1u9xeaqdjz3kky2ymdhdsn0ra5uy9tc3e93u460
        granter:
          type: string
          description: Owner of the stake giving the permissions
          example: zeta1u9xeaqdjz3kky2ymdhdsn0ra5uy9tc3e93u460
        permission:
          type: string
          description: 'Kind of permission been grantee, can be: "Staking.MsgDelegate", "Staking.MsgUndelegate", "Staking.MsgRedelegate" or "Distribution.MsgWithdrawDelegatorReward"'
          example: Staking.MsgDelegate
        allow_list:
          type: array
          items:
            type: string
          nullable: true
          description: List of address on which the granted permission can be applied (ie validator on which delegation is allowed)
          example:
            - zeta1u9xeaqdjz3kky2ymdhdsn0ra5uy9tc3e93u460
            - zeta1u9xeaqdjz3kky2ymdhdsn0ra5uy9tc3e93u460
        deny_list:
          type: array
          items:
            type: string
          nullable: true
          description: List of address on which the granted permission cannot be applied (ie validator on which delegation is allowed)
          example:
            - zeta1u9xeaqdjz3kky2ymdhdsn0ra5uy9tc3e93u460
            - zeta1u9xeaqdjz3kky2ymdhdsn0ra5uy9tc3e93u460
    ZETAOperationExec:
      type: object
      properties:
        type:
          type: string
          description: Operation type
          example: Authz.Exec
        time:
          type: string
          description: Date of the operation
          format: date-time
          example: '2023-06-22T15:35:01.892644Z'
        block:
          type: number
          description: Transaction block
          example: 15828207
        tx_hash:
          type: string
          description: Transaction hash
          example: 7DBC7C481A9A28961BDDF5BCDD47217A126EC0497017908453D71FACA9FA3506
        tx_gas_used:
          type: string
          description: Gas used for the whole transaction in uZETA
          example: '186733'
        message_index:
          type: number
          description: Index of the message in the transaction
          example: 0
        executed_operations:
          type: array
          nullable: true
          items:
            type: object
            properties:
              type:
                type: string
                description: Operation type
                example: staking.Delegate
              validator_address:
                type: string
                description: Destination validator address
                example: zetavaloper1u9xeaqdjz3kky2ymdhdsn0ra5uy9tc3ep3yfhe
              validator_address_source:
                type: string
                description: Source validator address
                example: zetavaloper1u9xeaqdjz3kky2ymdhdsn0ra5uy9tc3ep3yfhe
              delegator_address:
                type: string
                description: Delegator address
                example: zeta1u9xeaqdjz3kky2ymdhdsn0ra5uy9tc3e93u460
              amount:
                type: string
                description: Amount moved from the source validator staked balance to the destination validator staked balance in uZETA
                example: '3000000'
              withdraw_rewards:
                type: string
                description: Rewards auto-claimed from the destination validator alongside the operation in uZETA
                example: '10841'
              withdraw_rewards_source:
                type: string
                description: Rewards auto-claimed from the source validator alongside the operation in uZETA
                example: '10841'
    ZETANetworkStats:
      type: object
      required:
        - zeta_price_usd
        - nb_validators
        - network_gross_apy
        - supply_staked_percent
        - inflation_rate
        - updated_at
      properties:
        zeta_price_usd:
          type: number
          description: Price of ZETACHAIN in USD
          example: 10.53
        nb_validators:
          type: number
          description: Number of validators in the network
          example: 100
        network_gross_apy:
          type: number
          description: Gross annual percentage yield
          example: 4.5
        supply_staked_percent:
          type: number
          description: Supply of ZETACHAIN currently staked
          example: 12.4
        inflation_rate:
          type: number
          description: ZETACHAIN inflation rate
          example: 3.5
        updated_at:
          type: string
          description: Last date this data was updated
          format: date-time
          example: '2023-01-14T01:13:59Z'
    ZETATxDecoding:
      type: object
      description: Decoded transaction
      example:
        authInfo:
          signerInfos:
            - publicKey:
                typeUrl: /cosmos.crypto.secp256k1.PubKey
                value:
                  '0': 10
                  '1': 33
                  '2': 3
                  '3': 156
                  '4': 228
                  '5': 123
                  '6': 42
                  '7': 129
                  '8': 61
                  '9': 19
                  '10': 135
                  '11': 97
                  '12': 49
                  '13': 169
                  '14': 195
                  '15': 190
                  '16': 119
                  '17': 232
                  '18': 196
                  '19': 175
                  '20': 164
                  '21': 158
                  '22': 148
                  '23': 135
                  '24': 68
                  '25': 171
                  '26': 190
                  '27': 225
                  '28': 31
                  '29': 147
                  '30': 158
                  '31': 42
                  '32': 66
                  '33': 15
                  '34': 70
              modeInfo:
                single:
                  mode: 1
              sequence:
                low: 102
                high: 0
                unsigned: true
          fee:
            amount:
              - denom: azeta
                amount: '5000'
            gasLimit:
              low: 2000000
              high: 0
              unsigned: true
            payer: ''
            granter: ''
        body:
          messages:
            - typeUrl: /cosmos.staking.v1beta1.MsgDelegate
              value:
                '0': 10
                '1': 45
                '2': 99
                '3': 111
                '4': 115
                '5': 109
                '6': 111
                '7': 115
                '8': 49
                '9': 57
                '10': 99
                '11': 57
                '12': 102
                '13': 100
                '14': 104
                '15': 52
                '16': 56
                '17': 56
                '18': 118
                '19': 113
                '20': 106
                '21': 99
                '22': 108
                '23': 108
                '24': 116
                '25': 119
                '26': 112
                '27': 54
                '28': 56
                '29': 106
                '30': 109
                '31': 53
                '32': 48
                '33': 121
                '34': 100
                '35': 119
                '36': 121
                '37': 104
                '38': 51
                '39': 54
                '40': 106
                '41': 113
                '42': 101
                '43': 97
                '44': 116
                '45': 101
                '46': 118
                '47': 18
                '48': 52
                '49': 99
                '50': 111
                '51': 115
                '52': 109
                '53': 111
                '54': 115
                '55': 118
                '56': 97
                '57': 108
                '58': 111
                '59': 112
                '60': 101
                '61': 114
                '62': 49
                '63': 54
                '64': 121
                '65': 115
                '66': 48
                '67': 101
                '68': 103
                '69': 57
                '70': 51
                '71': 53
                '72': 109
                '73': 107
                '74': 113
                '75': 112
                '76': 107
                '77': 121
                '78': 100
                '79': 107
                '80': 103
                '81': 102
                '82': 99
                '83': 106
                '84': 57
                '85': 97
                '86': 103
                '87': 101
                '88': 50
                '89': 97
                '90': 117
                '91': 56
                '92': 108
                '93': 57
                '94': 54
                '95': 110
                '96': 97
                '97': 101
                '98': 114
                '99': 101
                '100': 57
                '101': 26
                '102': 16
                '103': 10
                '104': 5
                '105': 117
                '106': 97
                '107': 116
                '108': 111
                '109': 109
                '110': 18
                '111': 7
                '112': 49
                '113': 48
                '114': 48
                '115': 48
                '116': 48
                '117': 48
                '118': 48
          memo: ''
          timeoutHeight:
            low: 0
            high: 0
            unsigned: true
          extensionOptions: []
          nonCriticalExtensionOptions: []
        signatures:
          - '0': 116
            '1': 104
            '2': 101
            '3': 116
            '4': 97
            '5': 45
            '6': 116
            '7': 101
            '8': 115
            '9': 116
            '10': 110
            '11': 101
            '12': 116
            '13': 45
            '14': 48
            '15': 48
            '16': 49
    ZETACraftSendTxPayload:
      type: object
      required:
        - pubkey
        - to
        - amount_azeta
      properties:
        pubkey:
          type: string
          description: Wallet public key (compressed or uncompressed), this is different than the wallet address
          example: 039ce47b2a813d13876131a9c3be77e8c4afa49e948744abbee11f939e2a420f46
        to:
          type: string
          description: Recipient address
          example: zeta1mfdn23y2ydnp6j3l3f8rw6r2gzazrmprgxn5xl
        amount_azeta:
          type: string
          description: Amount to send in azeta
          example: '1000000000000000000000000'
    ZETAGetBalancePayload:
      type: object
      required:
        - address
        - denom
      properties:
        address:
          type: string
          description: Wallet address
          example: zeta1u9xeaqdjz3kky2ymdhdsn0ra5uy9tc3e93u460
        denom:
          type: string
          description: The denomination of the balance to query
          example: azeta
    KAVAStake:
      type: object
      required:
        - validator_address
        - delegator_address
        - rewards
        - available_rewards
        - balance
        - state
        - net_apy
        - unbondings
        - permissions
      properties:
        validator_address:
          type: string
          description: Public key of the validator
          example: kavavaloper1u9xeaqdjz3kky2ymdhdsn0ra5uy9tc3ep3yfhe
        delegator_address:
          type: string
          description: Public key of the delegator
          example: kava1mfdn23y2ydnp6j3l3f8rw6r2gzazrmprgxn5xl
        delegated_at:
          type: string
          description: Date of first delegation ever for the stake. Unavailable for stakes older than [Theta v7 (12/04/2022)](https://github.com/cosmos/gaia/tree/main/docs/roadmap#cosmos-hub-summary).
          format: date-time
          example: '2023-06-16T03:13:23.058547Z'
        delegated_block:
          type: number
          description: Block of first delegation ever for the stake. Unavailable for stakes older than [Theta v7 (12/04/2022)](https://github.com/cosmos/gaia/tree/main/docs/roadmap#cosmos-hub-summary).
          example: 15739267
        undelegated_at:
          type: string
          description: Date of undelegation for the stake
          format: date-time
          example: '2023-07-14T03:56:13.561156Z'
        undelegated_block:
          type: number
          description: Block of undelegation for the stake
          example: 16126416
        rewards:
          type: string
          description: Total rewards accumulated by this stake since its first ever delegation in uKAVA. Includes currently available rewards not yet withdrawn.
          example: '735573808534727891000000'
        available_rewards:
          type: string
          description: Available rewards in uKAVA that can be withdrawn from this stake
          example: '36748808534727891000000'
        balance:
          type: string
          description: Staked balance on this stake in uKAVA
          example: '6300000000000000000000000'
        net_apy:
          type: number
          description: Net annual percentage yield. Unavailable for stakes older than [Theta v7 (12/04/2022)](https://github.com/cosmos/gaia/tree/main/docs/roadmap#cosmos-hub-summary).
          example: 5.76
        state:
          type: string
          description: State of the Kava stake
          example: active
          enum:
            - active
            - deactivating
            - inactive
        updated_at:
          type: string
          description: Last date this data was updated
          format: date-time
          example: '2023-01-14T01:13:59Z'
        permissions:
          description: permissions related to the stake currently active, ignored if there is no ongoing grants
          type: array
          items:
            type: object
            properties:
              source:
                type: string
                description: whether the stake is recipient (grantee) or the giver (granter) of the permissions
                example: granter
              creation_height:
                type: number
                description: Block at which the unbonding was created
                example: 15000000
              permission:
                type: string
                description: 'Kind of permission been grantee, can be: "Staking.MsgDelegate", "Staking.MsgUndelegate", "Staking.MsgRedelegate" or "Distribution.MsgWithdrawDelegatorReward"'
                example: Staking.MsgDelegate
              expires_at:
                type: string
                description: Exact time at which the permissions will be revoked
                format: date-time
                example: '2023-01-10T01:12:34Z'
                nullable: true
              allow_list:
                type: array
                items:
                  type: string
                nullable: true
                description: List of address on which the granted permission can be applied (ie validator on which delegation is allowed)
                example:
                  - kavavaloper1xyz
                  - kavavaloper1abc
              deny_list:
                type: array
                items:
                  type: string
                nullable: true
                description: List of address on which the granted permission cannot be applied (ie validator on which delegation is allowed)
                example:
                  - kavavaloper1xyz
                  - kavavaloper1abc
        unbondings:
          description: unbondings currently active on the stakes. ignored if no unbondings are returned
          type: array
          items:
            type: object
            required:
              - creation_height
              - completion_time
              - balance
              - initial_balance
            properties:
              creation_height:
                type: number
                description: Block at which the unbonding was created
                example: 15000000
              completion_time:
                type: string
                description: Exact time at which the unbonding will take effect
                format: date-time
                example: '2023-01-10T01:12:34Z'
              balance:
                type: string
                description: Amount currently associated with the unbonding (slashes included)
                example: '129300'
              initial_balance:
                type: string
                description: Amount expected at creation (slashes non-included)
                example: '150300'
    PostKAVAStakesPayload:
      type: object
      required:
        - stakes
        - account_id
      properties:
        stakes:
          type: array
          items:
            type: object
            properties:
              stakeId:
                type: string
                description: Stake id {validator_address}_{delegator_address}
                example: kavavaloper1u9xeaqdjz3kky2ymdhdsn0ra5uy9tc3ep3yfhe_kava1u9xeaqdjz3kky2ymdhdsn0ra5uy9tc3e93u460}
        account_id:
          type: string
          description: Kiln Account ID
          example: 92f5bfd4-ea38-4824-84f7-686eddff5539
    KAVAStakeMessage:
      type: object
      properties:
        typeUrl:
          type: string
          description: Type URL of the message
          example: /cosmos.staking.v1beta1.MsgDelegate
        value:
          type: object
          description: Message value
          example:
            delegatorAddress: kava1u9xeaqdjz3kky2ymdhdsn0ra5uy9tc3e93u460
            validatorAddress: kavavaloper1u9xeaqdjz3kky2ymdhdsn0ra5uy9tc3ep3yfhe
            amount:
              denom: ukava
              amount: '1000000'
    KAVAStakeMessageRestake:
      type: object
      properties:
        typeUrl:
          type: string
          description: Type URL of the message
          example: /cosmos.staking.v1beta1.StakeAuthorization
        value:
          type: object
          description: Message value
          example:
            allowList:
              address:
                - kavavaloper1u9xeaqdjz3kky2ymdhdsn0ra5uy9tc3ep3yfhe
            AuthorizationType: 1
    KAVAStakeUnsignedTx:
      type: object
      required:
        - unsigned_tx_serialized
        - unsigned_tx_hash
        - tx_body
        - tx_auth_info
        - pubkey
        - messages
        - fee
        - chain_id
        - account_number
      properties:
        unsigned_tx_serialized:
          type: string
          description: Unsigned serialized transaction
          example: 0adf010adc010a2a2f636f736d6f732e7374616b696e672e763162657461312e4d7367426567696e526564656c656761746512ad010a2d636f736d6f733139633966646834383876716a636c6c74777036386a6d3530796477796833366a7165617465761234636f736d6f7376616c6f70657231307636777664656e65653872396c36776c73706863677572326c746c387a746b6672766a39611a34636f736d6f7376616c6f70657231796d7a336b6a7466397a6b666d6d3273326c7279376568307a6439657a33766335797030306622100a057561746f6d12073433313030303012670a500a460a1f2f636f736d6f732e63727970746f2e736563703235366b312e5075624b657912230a21039ce47b2a813d13876131a9c3be77e8c4afa49e948744abbee11f939e2a420f4612040a020801186d12130a0d0a057561746f6d1204353030301080897a1a1174686574612d746573746e65742d30303120e0cd2a
        unsigned_tx_hash:
          type: string
          description: Hash of the unsigned transaction
          example: b6ce1c8185416ce7d42a8c39566a9a2b6b2361a55c04a1dba3dd7445a0e1e364
        tx_body:
          type: string
          description: Transaction body serialized in hex
          example: 0a9e010a232f636f736d6f732e7374616b696e672e763162657461312e4d736744656c656761746512770a2d636f736d6f733139633966646834383876716a636c6c74777036386a6d3530796477796833366a7165617465761234636f736d6f7376616c6f706572313679733065673933356d6b71706b79646b6766636a39616765326175386c39366e61657265391a100a057561746f6d120731303030303030
        tx_auth_info:
          type: string
          description: Transaction auth info serialized in hex
          example: 0a2c0a2a0a28636f736d6f733139633966646834383876716a636c6c74777036386a6d3530796477796833366a716561746576120a2d636f736d6f733139633966646834383876716a636c6c74777036386a6d3530796477796833366a7165617465761234636f736d6f7376616c6f706572313679733065673933356d6b71706b79646b6766636a39616765326175386c39366e6165726539
        pubkey:
          type: string
          description: Wallet compressed public key, this is different than the wallet address
          example: 039ce47b2a813d13876131a9c3be77e8c4afa49e948744abbee11f939e2a420f46
        fee:
          type: object
          description: Fee included in the transaction. Object shape can be found [here](https://github.com/cosmos/cosmjs/blob/72da7971ee4fd77fec1bfef2ec1ba4f14f8c319d/packages/amino/src/signdoc.ts#L12)
          example:
            amount:
              - denom: ukava
                amount: '5000'
            gas: '200000'
        messages:
          type: array
          description: List of messages included in the transaction.
          items:
            oneOf:
              - $ref: '#/components/schemas/KAVAStakeMessage'
          example:
            - typeUrl: /cosmos.staking.v1beta1.MsgDelegate
              value:
                delegatorAddress: kava1u9xeaqdjz3kky2ymdhdsn0ra5uy9tc3e93u460
                validatorAddress: kavavaloper1u9xeaqdjz3kky2ymdhdsn0ra5uy9tc3ep3yfhe
                amount:
                  denom: ukava
                  amount: '1000000'
        chain_id:
          type: string
          description: Chain ID
          example: cosmoshub-4
        account_number:
          type: number
          description: Account number
          example: 1234
    KAVAUnsignedTx:
      type: object
      required:
        - unsigned_tx_serialized
        - unsigned_tx_hash
        - tx_body
        - tx_auth_info
        - pubkey
        - message
        - fee
        - chain_id
        - account_number
      properties:
        unsigned_tx_serialized:
          type: string
          description: Unsigned serialized transaction
          example: 0adf010adc010a2a2f636f736d6f732e7374616b696e672e763162657461312e4d7367426567696e526564656c656761746512ad010a2d636f736d6f733139633966646834383876716a636c6c74777036386a6d3530796477796833366a7165617465761234636f736d6f7376616c6f70657231307636777664656e65653872396c36776c73706863677572326c746c387a746b6672766a39611a34636f736d6f7376616c6f70657231796d7a336b6a7466397a6b666d6d3273326c7279376568307a6439657a33766335797030306622100a057561746f6d12073433313030303012670a500a460a1f2f636f736d6f732e63727970746f2e736563703235366b312e5075624b657912230a21039ce47b2a813d13876131a9c3be77e8c4afa49e948744abbee11f939e2a420f4612040a020801186d12130a0d0a057561746f6d1204353030301080897a1a1174686574612d746573746e65742d30303120e0cd2a
        unsigned_tx_hash:
          type: string
          description: Hash of the unsigned transaction
          example: b6ce1c8185416ce7d42a8c39566a9a2b6b2361a55c04a1dba3dd7445a0e1e364
        tx_body:
          type: string
          description: Transaction body serialized in hex
          example: 0a9e010a232f636f736d6f732e7374616b696e672e763162657461312e4d736744656c656761746512770a2d636f736d6f733139633966646834383876716a636c6c74777036386a6d3530796477796833366a7165617465761234636f736d6f7376616c6f706572313679733065673933356d6b71706b79646b6766636a39616765326175386c39366e61657265391a100a057561746f6d120731303030303030
        tx_auth_info:
          type: string
          description: Transaction auth info serialized in hex
          example: 0a2c0a2a0a28636f736d6f733139633966646834383876716a636c6c74777036386a6d3530796477796833366a716561746576120a2d636f736d6f733139633966646834383876716a636c6c74777036386a6d3530796477796833366a7165617465761234636f736d6f7376616c6f706572313679733065673933356d6b71706b79646b6766636a39616765326175386c39366e6165726539
        pubkey:
          type: string
          description: Wallet compressed public key, this is different than the wallet address
          example: 039ce47b2a813d13876131a9c3be77e8c4afa49e948744abbee11f939e2a420f46
        message:
          type: object
          description: Message included in the transaction
          example:
            typeUrl: /cosmos.staking.v1beta1.MsgDelegate
            value:
              delegatorAddress: kava1u9xeaqdjz3kky2ymdhdsn0ra5uy9tc3e93u460
              validatorAddress: kavavaloper1u9xeaqdjz3kky2ymdhdsn0ra5uy9tc3ep3yfhe
              amount:
                denom: ukava
                amount: '1000000'
        fee:
          type: object
          description: Fee included in the transaction. Object shape can be found [here](https://github.com/cosmos/cosmjs/blob/72da7971ee4fd77fec1bfef2ec1ba4f14f8c319d/packages/amino/src/signdoc.ts#L12)
          example:
            amount:
              - denom: ukava
                amount: '5000'
            gas: '200000'
        chain_id:
          type: string
          description: Chain ID
          example: cosmoshub-4
        account_number:
          type: number
          description: Account number
          example: 1234
    KAVASignedTx:
      type: object
      required:
        - signed_tx_serialized
      properties:
        signed_tx_serialized:
          type: string
          description: Serialized signed transaction in hex
          example: 0aa1010a9e010a232f636f736d6f732e7374616b696e672e763162657461312e4d736744656c656761746512770a2d636f736d6f733139633966646834383876716a636c6c74777036386a6d3530796477796833366a7165617465761234636f736d6f7376616c6f706572313679733065673933356d6b71706b79646b6766636a39616765326175386c39366e61657265391a100a057561746f6d12073130303030303012670a500a460a1f2f636f736d6f732e63727970746f2e736563703235366b312e5075624b657912230a21039ce47b2a813d13876131a9c3be77e8c4afa49e948744abbee11f939e2a420f4612040a020801182012130a0d0a057561746f6d12043530303010e0a7121a40191f87a54dceafb6ab9a5f112a13444ca37e49a029e531bb21301fd72e9d390304c763cca5a9760a631dc85705dd6b08b50f5fff7d5de8d73b2cebd1f4c3b6a0
    KAVATxHash:
      type: object
      required:
        - tx_hash
      properties:
        tx_hash:
          type: string
          description: Hash of the transaction
          example: 2B4F732E12D5D5AF1F907AD03B199167A718EDC6201DE5713143AB80990420CB
    KAVAPrepareTxPayload:
      type: object
      required:
        - pubkey
        - tx_body
        - tx_auth_info
        - signature
      properties:
        pubkey:
          type: string
          description: Wallet public key (compressed or uncompressed), this is different than the wallet address
          example: 039ce47b2a813d13876131a9c3be77e8c4afa49e948744abbee11f939e2a420f46
        tx_body:
          type: string
          description: Transaction body serialized in hex
          example: 0a9e010a232f636f736d6f732e7374616b696e672e763162657461312e4d736744656c656761746512770a2d636f736d6f733139633966646834383876716a636c6c74777036386a6d3530796477796833366a7165617465761234636f736d6f7376616c6f706572313679733065673933356d6b71706b79646b6766636a39616765326175386c39366e61657265391a100a057561746f6d120731303030303030
        tx_auth_info:
          type: string
          description: Transaction auth info serialized in hex
          example: 0a2c0a2a0a28636f736d6f733139633966646834383876716a636c6c74777036386a6d3530796477796833366a716561746576120a2d636f736d6f733139633966646834383876716a636c6c74777036386a6d3530796477796833366a7165617465761234636f736d6f7376616c6f706572313679733065673933356d6b71706b79646b6766636a39616765326175386c39366e6165726539
        signature:
          type: string
          description: Transaction signature serialized in hex
          example: 191f87a54dceafb6ab9a5f112a13444ca37e49a029e531bb21301fd72e9d390304c763cca5a9760a631dc85705dd6b08b50f5fff7d5de8d73b2cebd1f4c3b6a0
    KAVABroadcastTxPayload:
      type: object
      required:
        - tx_serialized
      properties:
        tx_serialized:
          type: string
          description: Signed transaction serialized in hex
          example: 0aa1010a9e010a232f636f736d6f732e7374616b696e672e763162657461312e4d736744656c656761746512770a2d636f736d6f733139633966646834383876716a636c6c74777036386a6d3530796477796833366a7165617465761234636f736d6f7376616c6f706572313679733065673933356d6b71706b79646b6766636a39616765326175386c39366e61657265391a100a057561746f6d12073130303030303012670a500a460a1f2f636f736d6f732e63727970746f2e736563703235366b312e5075624b657912230a21039ce47b2a813d13876131a9c3be77e8c4afa49e948744abbee11f939e2a420f4612040a020801182012130a0d0a057561746f6d12043530303010e0a7121a40191f87a54dceafb6ab9a5f112a13444ca37e49a029e531bb21301fd72e9d390304c763cca5a9760a631dc85705dd6b08b50f5fff7d5de8d73b2cebd1f4c3b6a0
    KAVATxStatus:
      type: object
      properties:
        status:
          type: string
          enum:
            - success
            - error
          description: Transaction status
          example: success
        receipt:
          type: object
          description: Transaction receipt. Only present if status is success. Object shape can be found [here](https://github.com/cosmos/cosmjs/blob/e8e65aa0c145616ccb58625c32bffe08b46ff574/packages/stargate/src/stargateclient.ts#L67)
          example:
            height: 16007296
            txIndex: 0
            hash: 2B4F732E12D5D5AF1F907AD03B199167A718EDC6201DE5713143AB80990420CB
            code: 0
            events:
              - type: coin_spent
                attributes:
                  - key: spender
                    value: kava19c9fdh488vqjclltwp68jm50ydwyh36jqeatev
                  - key: amount
                    value: 5000ukava
              - type: coin_received
                attributes:
                  - key: receiver
                    value: kava17xpfvakm2amg962yls6f84z3kell8c5lserqta
                  - key: amount
                    value: 5000ukava
              - type: transfer
                attributes:
                  - key: recipient
                    value: kava17xpfvakm2amg962yls6f84z3kell8c5lserqta
                  - key: sender
                    value: kava19c9fdh488vqjclltwp68jm50ydwyh36jqeatev
                  - key: amount
                    value: 5000ukava
              - type: message
                attributes:
                  - key: sender
                    value: kava19c9fdh488vqjclltwp68jm50ydwyh36jqeatev
              - type: tx
                attributes:
                  - key: fee
                    value: 5000ukava
                  - key: fee_payer
                    value: kava19c9fdh488vqjclltwp68jm50ydwyh36jqeatev
              - type: tx
                attributes:
                  - key: acc_seq
                    value: kava19c9fdh488vqjclltwp68jm50ydwyh36jqeatev/33
              - type: tx
                attributes:
                  - key: signature
                    value: GR+HpU3Or7arml8RKhNETKN+SaAp5TG7ITAf1y6dOQMEx2PMpal2CmMdyFcF3WsItQ9f/31d6Nc7LOvR9MO2oA==
              - type: message
                attributes:
                  - key: action
                    value: /cosmos.staking.v1beta1.MsgDelegate
              - type: coin_spent
                attributes:
                  - key: spender
                    value: kava1jv65s3grqf6v6jl3dp4t6c9t9rk99cd88lyufl
                  - key: amount
                    value: 5ukava
              - type: coin_received
                attributes:
                  - key: receiver
                    value: kava19c9fdh488vqjclltwp68jm50ydwyh36jqeatev
                  - key: amount
                    value: 5ukava
              - type: transfer
                attributes:
                  - key: recipient
                    value: kava19c9fdh488vqjclltwp68jm50ydwyh36jqeatev
                  - key: sender
                    value: kava1jv65s3grqf6v6jl3dp4t6c9t9rk99cd88lyufl
                  - key: amount
                    value: 5ukava
              - type: message
                attributes:
                  - key: sender
                    value: kava1jv65s3grqf6v6jl3dp4t6c9t9rk99cd88lyufl
              - type: withdraw_rewards
                attributes:
                  - key: amount
                    value: 5ukava
                  - key: validator
                    value: kavavaloper1u9xeaqdjz3kky2ymdhdsn0ra5uy9tc3ep3yfhe
              - type: coin_spent
                attributes:
                  - key: spender
                    value: kava19c9fdh488vqjclltwp68jm50ydwyh36jqeatev
                  - key: amount
                    value: 100000ukava
              - type: coin_received
                attributes:
                  - key: receiver
                    value: kava1fl48vsnmsdzcv85q5d2q4z5ajdha8yu34mf0eh
                  - key: amount
                    value: 100000ukava
              - type: delegate
                attributes:
                  - key: validator
                    value: kavavaloper1u9xeaqdjz3kky2ymdhdsn0ra5uy9tc3ep3yfhe
                  - key: amount
                    value: 100000ukava
                  - key: new_shares
                    value: '100000.000000000000000000'
              - type: message
                attributes:
                  - key: module
                    value: staking
                  - key: sender
                    value: kava19c9fdh488vqjclltwp68jm50ydwyh36jqeatev
            rawLog: '[{"events":[{"type":"coin_received","attributes":[{"key":"receiver","value":"kava19c9fdh488vqjclltwp68jm50ydwyh36jqeatev"},{"key":"amount","value":"5ukava"},{"key":"receiver","value":"kava1fl48vsnmsdzcv85q5d2q4z5ajdha8yu34mf0eh"},{"key":"amount","value":"100000ukava"}]},{"type":"coin_spent","attributes":[{"key":"spender","value":"kava1jv65s3grqf6v6jl3dp4t6c9t9rk99cd88lyufl"},{"key":"amount","value":"5ukava"},{"key":"spender","value":"kava19c9fdh488vqjclltwp68jm50ydwyh36jqeatev"},{"key":"amount","value":"100000ukava"}]},{"type":"delegate","attributes":[{"key":"validator","value":"kavavaloper1u9xeaqdjz3kky2ymdhdsn0ra5uy9tc3ep3yfhe"},{"key":"amount","value":"100000ukava"},{"key":"new_shares","value":"100000.000000000000000000"}]},{"type":"message","attributes":[{"key":"action","value":"/cosmos.staking.v1beta1.MsgDelegate"},{"key":"sender","value":"kava1jv65s3grqf6v6jl3dp4t6c9t9rk99cd88lyufl"},{"key":"module","value":"staking"},{"key":"sender","value":"kava19c9fdh488vqjclltwp68jm50ydwyh36jqeatev"}]},{"type":"transfer","attributes":[{"key":"recipient","value":"kava19c9fdh488vqjclltwp68jm50ydwyh36jqeatev"},{"key":"sender","value":"kava1jv65s3grqf6v6jl3dp4t6c9t9rk99cd88lyufl"},{"key":"amount","value":"5ukava"}]},{"type":"withdraw_rewards","attributes":[{"key":"amount","value":"5ukava"},{"key":"validator","value":"kavavaloper1u9xeaqdjz3kky2ymdhdsn0ra5uy9tc3ep3yfhe"}]}]}]'
            tx:
              '0': 10
              '1': 160
              '2': 1
              '3': 10
              '4': 157
              '5': 1
              '6': 10
              '7': 35
              '8': 47
              '9': 99
              '10': 111
              '11': 115
              '12': 109
              '13': 111
              '14': 115
              '15': 46
              '16': 115
              '17': 116
              '18': 97
              '19': 107
              '20': 105
              '21': 110
              '22': 103
              '23': 46
              '24': 118
              '25': 49
              '26': 98
              '27': 101
              '28': 116
              '29': 97
              '30': 49
              '31': 46
              '32': 77
              '33': 115
              '34': 103
              '35': 68
              '36': 101
              '37': 108
              '38': 101
              '39': 103
              '40': 97
              '41': 116
              '42': 101
              '43': 18
              '44': 118
              '45': 10
              '46': 45
              '47': 99
              '48': 111
              '49': 115
              '50': 109
              '51': 111
              '52': 115
              '53': 49
              '54': 57
              '55': 99
              '56': 57
              '57': 102
              '58': 100
              '59': 104
              '60': 52
              '61': 56
              '62': 56
              '63': 118
              '64': 113
              '65': 106
              '66': 99
              '67': 108
              '68': 108
              '69': 116
              '70': 119
              '71': 112
              '72': 54
              '73': 56
              '74': 106
              '75': 109
              '76': 53
              '77': 48
              '78': 121
              '79': 100
              '80': 119
              '81': 121
              '82': 104
              '83': 51
              '84': 54
              '85': 106
              '86': 113
              '87': 101
              '88': 97
              '89': 116
              '90': 101
              '91': 118
              '92': 18
              '93': 52
              '94': 99
              '95': 111
              '96': 115
              '97': 109
              '98': 111
              '99': 115
              '100': 118
              '101': 97
              '102': 108
              '103': 111
              '104': 112
              '105': 101
              '106': 114
              '107': 49
              '108': 54
              '109': 121
              '110': 115
              '111': 48
              '112': 101
              '113': 103
              '114': 57
              '115': 51
              '116': 53
              '117': 109
              '118': 107
              '119': 113
              '120': 112
              '121': 107
              '122': 121
              '123': 100
              '124': 107
              '125': 103
              '126': 102
              '127': 99
              '128': 106
              '129': 57
              '130': 97
              '131': 103
              '132': 101
              '133': 50
              '134': 97
              '135': 117
              '136': 56
              '137': 108
              '138': 57
              '139': 54
              '140': 110
              '141': 97
              '142': 101
              '143': 114
              '144': 101
              '145': 57
              '146': 26
              '147': 15
              '148': 10
              '149': 5
              '150': 117
              '151': 97
              '152': 116
              '153': 111
              '154': 109
              '155': 18
              '156': 6
              '157': 49
              '158': 48
              '159': 48
              '160': 48
              '161': 48
              '162': 48
              '163': 18
              '164': 103
              '165': 10
              '166': 80
              '167': 10
              '168': 70
              '169': 10
              '170': 31
              '171': 47
              '172': 99
              '173': 111
              '174': 115
              '175': 109
              '176': 111
              '177': 115
              '178': 46
              '179': 99
              '180': 114
              '181': 121
              '182': 112
              '183': 116
              '184': 111
              '185': 46
              '186': 115
              '187': 101
              '188': 99
              '189': 112
              '190': 50
              '191': 53
              '192': 54
              '193': 107
              '194': 49
              '195': 46
              '196': 80
              '197': 117
              '198': 98
              '199': 75
              '200': 101
              '201': 121
              '202': 18
              '203': 35
              '204': 10
              '205': 33
              '206': 3
              '207': 156
              '208': 228
              '209': 123
              '210': 42
              '211': 129
              '212': 61
              '213': 19
              '214': 135
              '215': 97
              '216': 49
              '217': 169
              '218': 195
              '219': 190
              '220': 119
              '221': 232
              '222': 196
              '223': 175
              '224': 164
              '225': 158
              '226': 148
              '227': 135
              '228': 68
              '229': 171
              '230': 190
              '231': 225
              '232': 31
              '233': 147
              '234': 158
              '235': 42
              '236': 66
              '237': 15
              '238': 70
              '239': 18
              '240': 4
              '241': 10
              '242': 2
              '243': 8
              '244': 1
              '245': 24
              '246': 33
              '247': 18
              '248': 19
              '249': 10
              '250': 13
              '251': 10
              '252': 5
              '253': 117
              '254': 97
              '255': 116
              '256': 111
              '257': 109
              '258': 18
              '259': 4
              '260': 53
              '261': 48
              '262': 48
              '263': 48
              '264': 16
              '265': 224
              '266': 167
              '267': 18
              '268': 26
              '269': 64
              '270': 25
              '271': 31
              '272': 135
              '273': 165
              '274': 77
              '275': 206
              '276': 175
              '277': 182
              '278': 171
              '279': 154
              '280': 95
              '281': 17
              '282': 42
              '283': 19
              '284': 68
              '285': 76
              '286': 163
              '287': 126
              '288': 73
              '289': 160
              '290': 41
              '291': 229
              '292': 49
              '293': 187
              '294': 33
              '295': 48
              '296': 31
              '297': 215
              '298': 46
              '299': 157
              '300': 57
              '301': 3
              '302': 4
              '303': 199
              '304': 99
              '305': 204
              '306': 165
              '307': 169
              '308': 118
              '309': 10
              '310': 99
              '311': 29
              '312': 200
              '313': 87
              '314': 5
              '315': 221
              '316': 107
              '317': 8
              '318': 181
              '319': 15
              '320': 95
              '321': 255
              '322': 125
              '323': 93
              '324': 232
              '325': 215
              '326': 59
              '327': 44
              '328': 235
              '329': 209
              '330': 244
              '331': 195
              '332': 182
              '333': 160
            gasUsed: 167798
            gasWanted: 300000
    KAVACraftUnstakeTxPayload:
      type: object
      required:
        - pubkey
        - validator
      properties:
        pubkey:
          type: string
          example: 039ce47b2a813d13876131a9c3be77e8c4afa49e948744abbee11f939e2a420f46
          description: Wallet public key (compressed or uncompressed), this is different than the wallet address
        validator:
          type: string
          example: kavavaloper1u9xeaqdjz3kky2ymdhdsn0ra5uy9tc3ep3yfhe
          description: Validator address
        amount_ukava:
          type: string
          example: '1000000000000000000000000'
          description: Amount to unstake in uKAVA. Omit to unstake all the delegated amount
    KAVACraftRedelegateTxPayload:
      type: object
      required:
        - account_id
        - pubkey
        - validator_source
        - validator_destination
      properties:
        account_id:
          type: string
          example: b7177fd2-fbb3-479f-aa92-db9fb16e229f
          format: uuid
          description: Kiln Account ID to which the new stake will be linked
        pubkey:
          type: string
          example: 039ce47b2a813d13876131a9c3be77e8c4afa49e948744abbee11f939e2a420f46
          description: Wallet public key (compressed or uncompressed), this is different than the wallet address
        validator_source:
          type: string
          example: kavavaloper1u9xeaqdjz3kky2ymdhdsn0ra5uy9tc3ep3yfhe
          description: Validator source address of current stake
        validator_destination:
          type: string
          example: kavavaloper1u9xeaqdjz3kky2ymdhdsn0ra5uy9tc3ep3yfhe
          description: Validator destination address to which redelegate the stake
        amount_ukava:
          type: string
          example: '1000000000000000000000000'
          description: Amount to redelegate in uKAVA
    KAVACraftStakeTxPayload:
      type: object
      required:
        - account_id
        - pubkey
        - validator
        - amount_ukava
      properties:
        account_id:
          type: string
          example: b7177fd2-fbb3-479f-aa92-db9fb16e229f
          format: uuid
          description: Kiln Account ID to stake into
        pubkey:
          type: string
          example: 039ce47b2a813d13876131a9c3be77e8c4afa49e948744abbee11f939e2a420f46
          description: Wallet public key (compressed or uncompressed), this is different than the wallet address
        validator:
          type: string
          example: kavavaloper1u9xeaqdjz3kky2ymdhdsn0ra5uy9tc3ep3yfhe
          description: Validator address
        amount_ukava:
          type: string
          example: '1000000000000000000000000'
          description: Amount to stake in ukava
    KAVACraftRestakeRewardsTxPayload:
      type: object
      required:
        - pubkey
        - validator_address
        - grantee_address
      properties:
        pubkey:
          type: string
          example: 039ce47b2a813d13876131a9c3be77e8c4afa49e948744abbee11f939e2a420f46
          description: Wallet public key (compressed or uncompressed), this is different than the wallet address
        validator_address:
          type: string
          example: kavavaloper1u9xeaqdjz3kky2ymdhdsn0ra5uy9tc3ep3yfhe
          description: Validator address
        grantee_address:
          type: string
          example: cosmos1u4whe0pwlgt7q7ph37qxalq2wfq4pkcdze5fmd
          description: 'Grantee address, this address is specific to each validator. Kiln grantee addresses are found here: https://github.com/eco-stake/validator-registry/blob/master/Kiln/chains.json https://github.com/eco-stake/validator-registry/blob/master/interop/chains.json'
    KAVACraftWithdrawRewardsTxPayload:
      type: object
      required:
        - pubkey
        - validator
      properties:
        pubkey:
          type: string
          example: 039ce47b2a813d13876131a9c3be77e8c4afa49e948744abbee11f939e2a420f46
          description: Wallet public key (compressed or uncompressed), this is different than the wallet address
        validator:
          type: string
          example: kavavaloper1u9xeaqdjz3kky2ymdhdsn0ra5uy9tc3ep3yfhe
          description: Validator address
    KAVAReward:
      type: object
      required:
        - date
        - rewards
        - balance
        - net_apy
      properties:
        date:
          type: string
          description: Day for this reward entry
          format: date
          example: '2023-01-15'
        rewards:
          type: string
          description: Accumulated rewards in uKAVA during the day
          example: '3575891083876864200000'
        balance:
          type: string
          description: Staked balance in uKAVA at the end of the day
          example: '6300000000000000000000000'
        net_apy:
          type: number
          description: Net annual percentage yield
          example: 20.76
        rewards_usd:
          type: number
          description: Estimated value of rewards generated for that day in USD. The exchange rate is the rate at the end of the day provided by CoinGeckko.
        balance_usd:
          type: number
          description: Estimated value of the staked balance at the beginning of the day in USD. The exchange rate is the rate at the end of the day provided by CoinGeckko.
    KAVAOperationDelegate:
      type: object
      properties:
        type:
          type: string
          description: Operation type
          example: staking.MsgDelegate
        time:
          type: string
          description: Date of the operation
          format: date-time
          example: '2023-06-22T15:35:01.892644Z'
        block:
          type: number
          description: Transaction block
          example: 15828207
        tx_hash:
          type: string
          description: Transaction hash
          example: 7DBC7C481A9A28961BDDF5BCDD47217A126EC0497017908453D71FACA9FA3506
        tx_gas_used:
          type: string
          description: Gas used for the whole transaction in uKAVA
          example: '186733'
        message_index:
          type: number
          description: Index of the message in the transaction
          example: 0
        validator_address:
          type: string
          description: Validator address
          example: kavavaloper1u9xeaqdjz3kky2ymdhdsn0ra5uy9tc3ep3yfhe
        delegator_address:
          type: string
          description: Delegator address
          example: kava1u9xeaqdjz3kky2ymdhdsn0ra5uy9tc3e93u460
        amount:
          type: string
          description: Amount added to the staked balance in uKAVA
          example: '3000000'
        withdraw_rewards:
          type: string
          description: Rewards auto-claimed alongside the operation in uKAVA
          example: '10841'
    KAVAOperationUndelegate:
      type: object
      properties:
        type:
          type: string
          description: Operation type
          example: staking.MsgUndelegate
        time:
          type: string
          description: Date of the operation
          format: date-time
          example: '2023-06-22T15:35:01.892644Z'
        block:
          type: number
          description: Transaction block
          example: 15828207
        tx_hash:
          type: string
          description: Transaction hash
          example: 7DBC7C481A9A28961BDDF5BCDD47217A126EC0497017908453D71FACA9FA3506
        tx_gas_used:
          type: string
          description: Gas used for the whole transaction in uKAVA
          example: '186733'
        message_index:
          type: number
          description: Index of the message in the transaction
          example: 0
        validator_address:
          type: string
          description: Validator address
          example: kavavaloper1u9xeaqdjz3kky2ymdhdsn0ra5uy9tc3ep3yfhe
        delegator_address:
          type: string
          description: Delegator address
          example: kava1u9xeaqdjz3kky2ymdhdsn0ra5uy9tc3e93u460
        amount:
          type: string
          description: Amount removed from the staked balance in uKAVA
          example: '3000000'
        withdraw_rewards:
          type: string
          description: Rewards auto-claimed alongside the operation in uKAVA
          example: '10841'
    KAVAOperationRedelegate:
      type: object
      properties:
        type:
          type: string
          description: Operation type
          example: staking.MsgBeginRedelegate
        time:
          type: string
          description: Date of the operation
          format: date-time
          example: '2023-06-22T15:35:01.892644Z'
        block:
          type: number
          description: Transaction block
          example: 15828207
        tx_hash:
          type: string
          description: Transaction hash
          example: 7DBC7C481A9A28961BDDF5BCDD47217A126EC0497017908453D71FACA9FA3506
        tx_gas_used:
          type: string
          description: Gas used for the whole transaction in uKAVA
          example: '186733'
        message_index:
          type: number
          description: Index of the message in the transaction
          example: 0
        validator_address:
          type: string
          description: Destination validator address
          example: kavavaloper1u9xeaqdjz3kky2ymdhdsn0ra5uy9tc3ep3yfhe
        validator_address_source:
          type: string
          description: Source validator address
          example: kavavaloper1u9xeaqdjz3kky2ymdhdsn0ra5uy9tc3ep3yfhe
        delegator_address:
          type: string
          description: Delegator address
          example: kava1u9xeaqdjz3kky2ymdhdsn0ra5uy9tc3e93u460
        amount:
          type: string
          description: Amount moved from the source validator staked balance to the destination validator staked balance in uKAVA
          example: '3000000'
        withdraw_rewards:
          type: string
          description: Rewards auto-claimed from the destination validator alongside the operation in uKAVA
          example: '10841'
        withdraw_rewards_source:
          type: string
          description: Rewards auto-claimed from the source validator alongside the operation in uKAVA
          example: '10841'
    KAVAOperationWithdrawRewards:
      type: object
      properties:
        type:
          type: string
          description: Operation type
          example: distr.MsgWithdrawDelegatorReward
        time:
          type: string
          description: Date of the operation
          format: date-time
          example: '2023-06-22T15:35:01.892644Z'
        block:
          type: number
          description: Transaction block
          example: 15828207
        tx_hash:
          type: string
          description: Transaction hash
          example: 7DBC7C481A9A28961BDDF5BCDD47217A126EC0497017908453D71FACA9FA3506
        tx_gas_used:
          type: string
          description: Gas used for the whole transaction in uKAVA
          example: '186733'
        message_index:
          type: number
          description: Index of the message in the transaction
          example: 0
        validator_address:
          type: string
          description: Validator address
          example: kavavaloper1u9xeaqdjz3kky2ymdhdsn0ra5uy9tc3ep3yfhe
        delegator_address:
          type: string
          description: Delegator address
          example: kava1u9xeaqdjz3kky2ymdhdsn0ra5uy9tc3e93u460
        withdraw_rewards:
          type: string
          description: Rewards claimed alongside the operation in uKAVA
          example: '10841'
    KAVAOperationGrant:
      type: object
      properties:
        type:
          type: string
          description: Operation type
          example: Authz.Grant
        time:
          type: string
          description: Date of the operation
          format: date-time
          example: '2023-06-22T15:35:01.892644Z'
        block:
          type: number
          description: Transaction block
          example: 15828207
        tx_hash:
          type: string
          description: Transaction hash
          example: 7DBC7C481A9A28961BDDF5BCDD47217A126EC0497017908453D71FACA9FA3506
        tx_gas_used:
          type: string
          description: Gas used for the whole transaction in uKAVA
          example: '186733'
        message_index:
          type: number
          description: Index of the message in the transaction
          example: 0
        grantee:
          type: string
          description: Recipient of the permissions
          example: kava1u9xeaqdjz3kky2ymdhdsn0ra5uy9tc3e93u460
        granter:
          type: string
          description: Owner of the stake giving the permissions
          example: kava1u9xeaqdjz3kky2ymdhdsn0ra5uy9tc3e93u460
        permission:
          type: string
          description: 'Kind of permission been grantee, can be: "Staking.MsgDelegate", "Staking.MsgUndelegate", "Staking.MsgRedelegate" or "Distribution.MsgWithdrawDelegatorReward"'
          example: Staking.MsgDelegate
        allow_list:
          type: array
          items:
            type: string
          nullable: true
          description: List of address on which the granted permission can be applied (ie validator on which delegation is allowed)
          example:
            - kava1u9xeaqdjz3kky2ymdhdsn0ra5uy9tc3e93u460
            - kava1u9xeaqdjz3kky2ymdhdsn0ra5uy9tc3e93u460
        deny_list:
          type: array
          items:
            type: string
          nullable: true
          description: List of address on which the granted permission cannot be applied (ie validator on which delegation is allowed)
          example:
            - kava1u9xeaqdjz3kky2ymdhdsn0ra5uy9tc3e93u460
            - kava1u9xeaqdjz3kky2ymdhdsn0ra5uy9tc3e93u460
    KAVAOperationExec:
      type: object
      properties:
        type:
          type: string
          description: Operation type
          example: Authz.Exec
        time:
          type: string
          description: Date of the operation
          format: date-time
          example: '2023-06-22T15:35:01.892644Z'
        block:
          type: number
          description: Transaction block
          example: 15828207
        tx_hash:
          type: string
          description: Transaction hash
          example: 7DBC7C481A9A28961BDDF5BCDD47217A126EC0497017908453D71FACA9FA3506
        tx_gas_used:
          type: string
          description: Gas used for the whole transaction in uKAVA
          example: '186733'
        message_index:
          type: number
          description: Index of the message in the transaction
          example: 0
        executed_operations:
          type: array
          nullable: true
          items:
            type: object
            properties:
              type:
                type: string
                description: Operation type
                example: staking.Delegate
              validator_address:
                type: string
                description: Destination validator address
                example: kavavaloper1u9xeaqdjz3kky2ymdhdsn0ra5uy9tc3ep3yfhe
              validator_address_source:
                type: string
                description: Source validator address
                example: kavavaloper1u9xeaqdjz3kky2ymdhdsn0ra5uy9tc3ep3yfhe
              delegator_address:
                type: string
                description: Delegator address
                example: kava1u9xeaqdjz3kky2ymdhdsn0ra5uy9tc3e93u460
              amount:
                type: string
                description: Amount moved from the source validator staked balance to the destination validator staked balance in uKAVA
                example: '3000000'
              withdraw_rewards:
                type: string
                description: Rewards auto-claimed from the destination validator alongside the operation in uKAVA
                example: '10841'
              withdraw_rewards_source:
                type: string
                description: Rewards auto-claimed from the source validator alongside the operation in uKAVA
                example: '10841'
    KAVANetworkStats:
      type: object
      required:
        - kava_price_usd
        - nb_validators
        - network_gross_apy
        - supply_staked_percent
        - inflation_rate
        - updated_at
      properties:
        kava_price_usd:
          type: number
          description: Price of Kava in USD
          example: 10.53
        nb_validators:
          type: number
          description: Number of validators in the network
          example: 100
        network_gross_apy:
          type: number
          description: Gross annual percentage yield
          example: 4.5
        supply_staked_percent:
          type: number
          description: Supply of Kava currently staked
          example: 12.4
        inflation_rate:
          type: number
          description: Kava inflation rate
          example: 3.5
        updated_at:
          type: string
          description: Last date this data was updated
          format: date-time
          example: '2023-01-14T01:13:59Z'
    KAVATxDecoding:
      type: object
      description: Decoded transaction
      example:
        authInfo:
          signerInfos:
            - publicKey:
                typeUrl: /cosmos.crypto.secp256k1.PubKey
                value:
                  '0': 10
                  '1': 33
                  '2': 3
                  '3': 156
                  '4': 228
                  '5': 123
                  '6': 42
                  '7': 129
                  '8': 61
                  '9': 19
                  '10': 135
                  '11': 97
                  '12': 49
                  '13': 169
                  '14': 195
                  '15': 190
                  '16': 119
                  '17': 232
                  '18': 196
                  '19': 175
                  '20': 164
                  '21': 158
                  '22': 148
                  '23': 135
                  '24': 68
                  '25': 171
                  '26': 190
                  '27': 225
                  '28': 31
                  '29': 147
                  '30': 158
                  '31': 42
                  '32': 66
                  '33': 15
                  '34': 70
              modeInfo:
                single:
                  mode: 1
              sequence:
                low: 102
                high: 0
                unsigned: true
          fee:
            amount:
              - denom: ukava
                amount: '5000'
            gasLimit:
              low: 2000000
              high: 0
              unsigned: true
            payer: ''
            granter: ''
        body:
          messages:
            - typeUrl: /cosmos.staking.v1beta1.MsgDelegate
              value:
                '0': 10
                '1': 45
                '2': 99
                '3': 111
                '4': 115
                '5': 109
                '6': 111
                '7': 115
                '8': 49
                '9': 57
                '10': 99
                '11': 57
                '12': 102
                '13': 100
                '14': 104
                '15': 52
                '16': 56
                '17': 56
                '18': 118
                '19': 113
                '20': 106
                '21': 99
                '22': 108
                '23': 108
                '24': 116
                '25': 119
                '26': 112
                '27': 54
                '28': 56
                '29': 106
                '30': 109
                '31': 53
                '32': 48
                '33': 121
                '34': 100
                '35': 119
                '36': 121
                '37': 104
                '38': 51
                '39': 54
                '40': 106
                '41': 113
                '42': 101
                '43': 97
                '44': 116
                '45': 101
                '46': 118
                '47': 18
                '48': 52
                '49': 99
                '50': 111
                '51': 115
                '52': 109
                '53': 111
                '54': 115
                '55': 118
                '56': 97
                '57': 108
                '58': 111
                '59': 112
                '60': 101
                '61': 114
                '62': 49
                '63': 54
                '64': 121
                '65': 115
                '66': 48
                '67': 101
                '68': 103
                '69': 57
                '70': 51
                '71': 53
                '72': 109
                '73': 107
                '74': 113
                '75': 112
                '76': 107
                '77': 121
                '78': 100
                '79': 107
                '80': 103
                '81': 102
                '82': 99
                '83': 106
                '84': 57
                '85': 97
                '86': 103
                '87': 101
                '88': 50
                '89': 97
                '90': 117
                '91': 56
                '92': 108
                '93': 57
                '94': 54
                '95': 110
                '96': 97
                '97': 101
                '98': 114
                '99': 101
                '100': 57
                '101': 26
                '102': 16
                '103': 10
                '104': 5
                '105': 117
                '106': 97
                '107': 116
                '108': 111
                '109': 109
                '110': 18
                '111': 7
                '112': 49
                '113': 48
                '114': 48
                '115': 48
                '116': 48
                '117': 48
                '118': 48
          memo: ''
          timeoutHeight:
            low: 0
            high: 0
            unsigned: true
          extensionOptions: []
          nonCriticalExtensionOptions: []
        signatures:
          - '0': 116
            '1': 104
            '2': 101
            '3': 116
            '4': 97
            '5': 45
            '6': 116
            '7': 101
            '8': 115
            '9': 116
            '10': 110
            '11': 101
            '12': 116
            '13': 45
            '14': 48
            '15': 48
            '16': 49
    KAVACraftSendTxPayload:
      type: object
      required:
        - pubkey
        - to
        - amount_ukava
      properties:
        pubkey:
          type: string
          description: Wallet public key (compressed or uncompressed), this is different than the wallet address
          example: 039ce47b2a813d13876131a9c3be77e8c4afa49e948744abbee11f939e2a420f46
        to:
          type: string
          description: Recipient address
          example: kava1mfdn23y2ydnp6j3l3f8rw6r2gzazrmprgxn5xl
        amount_ukava:
          type: string
          description: Amount to send in ukava
          example: '1000000000000000000000000'
    KAVAGetBalancePayload:
      type: object
      required:
        - address
        - denom
      properties:
        address:
          type: string
          description: Wallet address
          example: fetch1djqecw6nn5tydxq0shan7srv8j65clsf7vypl6
        denom:
          type: string
          description: The denomination of the balance to query
          example: ukava
    FETStake:
      type: object
      required:
        - validator_address
        - delegator_address
        - rewards
        - available_rewards
        - balance
        - state
        - net_apy
        - unbondings
        - permissions
      properties:
        validator_address:
          type: string
          description: Public key of the validator
          example: fetchvaloper1djqecw6nn5tydxq0shan7srv8j65clsfmnxcfu
        delegator_address:
          type: string
          description: Public key of the delegator
          example: fetch1mfdn23y2ydnp6j3l3f8rw6r2gzazrmprgxn5xl
        delegated_at:
          type: string
          description: Date of first delegation ever for the stake. Unavailable for stakes older than [Theta v7 (12/04/2022)](https://github.com/cosmos/gaia/tree/main/docs/roadmap#cosmos-hub-summary).
          format: date-time
          example: '2023-06-16T03:13:23.058547Z'
        delegated_block:
          type: number
          description: Block of first delegation ever for the stake. Unavailable for stakes older than [Theta v7 (12/04/2022)](https://github.com/cosmos/gaia/tree/main/docs/roadmap#cosmos-hub-summary).
          example: 15739267
        undelegated_at:
          type: string
          description: Date of undelegation for the stake
          format: date-time
          example: '2023-07-14T03:56:13.561156Z'
        undelegated_block:
          type: number
          description: Block of undelegation for the stake
          example: 16126416
        rewards:
          type: string
          description: Total rewards accumulated by this stake since its first ever delegation in uFET. Includes currently available rewards not yet withdrawn.
          example: '735573808534727891000000'
        available_rewards:
          type: string
          description: Available rewards in uFET that can be withdrawn from this stake
          example: '36748808534727891000000'
        balance:
          type: string
          description: Staked balance on this stake in uFET
          example: '6300000000000000000000000'
        net_apy:
          type: number
          description: Net annual percentage yield. Unavailable for stakes older than [Theta v7 (12/04/2022)](https://github.com/cosmos/gaia/tree/main/docs/roadmap#cosmos-hub-summary).
          example: 5.76
        state:
          type: string
          description: State of the Fetch stake
          example: active
          enum:
            - active
            - deactivating
            - inactive
        updated_at:
          type: string
          description: Last date this data was updated
          format: date-time
          example: '2023-01-14T01:13:59Z'
        permissions:
          description: permissions related to the stake currently active, ignored if there is no ongoing grants
          type: array
          items:
            type: object
            properties:
              source:
                type: string
                description: whether the stake is recipient (grantee) or the giver (granter) of the permissions
                example: granter
              creation_height:
                type: number
                description: Block at which the unbonding was created
                example: 15000000
              permission:
                type: string
                description: 'Kind of permission been grantee, can be: "Staking.MsgDelegate", "Staking.MsgUndelegate", "Staking.MsgRedelegate" or "Distribution.MsgWithdrawDelegatorReward"'
                example: Staking.MsgDelegate
              expires_at:
                type: string
                description: Exact time at which the permissions will be revoked
                format: date-time
                example: '2023-01-10T01:12:34Z'
                nullable: true
              allow_list:
                type: array
                items:
                  type: string
                nullable: true
                description: List of address on which the granted permission can be applied (ie validator on which delegation is allowed)
                example:
                  - fetchvaloper1xyz
                  - fetchvaloper1abc
              deny_list:
                type: array
                items:
                  type: string
                nullable: true
                description: List of address on which the granted permission cannot be applied (ie validator on which delegation is allowed)
                example:
                  - fetchvaloper1xyz
                  - fetchvaloper1abc
        unbondings:
          description: unbondings currently active on the stakes. ignored if no unbondings are returned
          type: array
          items:
            type: object
            required:
              - creation_height
              - completion_time
              - balance
              - initial_balance
            properties:
              creation_height:
                type: number
                description: Block at which the unbonding was created
                example: 15000000
              completion_time:
                type: string
                description: Exact time at which the unbonding will take effect
                format: date-time
                example: '2023-01-10T01:12:34Z'
              balance:
                type: string
                description: Amount currently associated with the unbonding (slashes included)
                example: '129300'
              initial_balance:
                type: string
                description: Amount expected at creation (slashes non-included)
                example: '150300'
    PostFETStakesPayload:
      type: object
      required:
        - stakes
        - account_id
      properties:
        stakes:
          type: array
          items:
            type: object
            properties:
              stakeId:
                type: string
                description: Stake id {validator_address}_{delegator_address}
                example: fetchvaloper1djqecw6nn5tydxq0shan7srv8j65clsfmnxcfu_fetch1djqecw6nn5tydxq0shan7srv8j65clsf7vypl6}
        account_id:
          type: string
          description: Kiln Account ID
          example: 92f5bfd4-ea38-4824-84f7-686eddff5539
    FETStakeMessage:
      type: object
      properties:
        typeUrl:
          type: string
          description: Type URL of the message
          example: /cosmos.staking.v1beta1.MsgDelegate
        value:
          type: object
          description: Message value
          example:
            delegatorAddress: fetch1djqecw6nn5tydxq0shan7srv8j65clsf7vypl6
            validatorAddress: fetchvaloper1djqecw6nn5tydxq0shan7srv8j65clsfmnxcfu
            amount:
              denom: afet
              amount: '1000000'
    FETStakeMessageRestake:
      type: object
      properties:
        typeUrl:
          type: string
          description: Type URL of the message
          example: /cosmos.staking.v1beta1.StakeAuthorization
        value:
          type: object
          description: Message value
          example:
            allowList:
              address:
                - fetchvaloper1djqecw6nn5tydxq0shan7srv8j65clsfmnxcfu
            AuthorizationType: 1
    FETStakeUnsignedTx:
      type: object
      required:
        - unsigned_tx_serialized
        - unsigned_tx_hash
        - tx_body
        - tx_auth_info
        - pubkey
        - messages
        - fee
        - chain_id
        - account_number
      properties:
        unsigned_tx_serialized:
          type: string
          description: Unsigned serialized transaction
          example: 0adf010adc010a2a2f636f736d6f732e7374616b696e672e763162657461312e4d7367426567696e526564656c656761746512ad010a2d636f736d6f733139633966646834383876716a636c6c74777036386a6d3530796477796833366a7165617465761234636f736d6f7376616c6f70657231307636777664656e65653872396c36776c73706863677572326c746c387a746b6672766a39611a34636f736d6f7376616c6f70657231796d7a336b6a7466397a6b666d6d3273326c7279376568307a6439657a33766335797030306622100a057561746f6d12073433313030303012670a500a460a1f2f636f736d6f732e63727970746f2e736563703235366b312e5075624b657912230a21039ce47b2a813d13876131a9c3be77e8c4afa49e948744abbee11f939e2a420f4612040a020801186d12130a0d0a057561746f6d1204353030301080897a1a1174686574612d746573746e65742d30303120e0cd2a
        unsigned_tx_hash:
          type: string
          description: Hash of the unsigned transaction
          example: b6ce1c8185416ce7d42a8c39566a9a2b6b2361a55c04a1dba3dd7445a0e1e364
        tx_body:
          type: string
          description: Transaction body serialized in hex
          example: 0a9e010a232f636f736d6f732e7374616b696e672e763162657461312e4d736744656c656761746512770a2d636f736d6f733139633966646834383876716a636c6c74777036386a6d3530796477796833366a7165617465761234636f736d6f7376616c6f706572313679733065673933356d6b71706b79646b6766636a39616765326175386c39366e61657265391a100a057561746f6d120731303030303030
        tx_auth_info:
          type: string
          description: Transaction auth info serialized in hex
          example: 0a2c0a2a0a28636f736d6f733139633966646834383876716a636c6c74777036386a6d3530796477796833366a716561746576120a2d636f736d6f733139633966646834383876716a636c6c74777036386a6d3530796477796833366a7165617465761234636f736d6f7376616c6f706572313679733065673933356d6b71706b79646b6766636a39616765326175386c39366e6165726539
        pubkey:
          type: string
          description: Wallet compressed public key, this is different than the wallet address
          example: 039ce47b2a813d13876131a9c3be77e8c4afa49e948744abbee11f939e2a420f46
        fee:
          type: object
          description: Fee included in the transaction. Object shape can be found [here](https://github.com/cosmos/cosmjs/blob/72da7971ee4fd77fec1bfef2ec1ba4f14f8c319d/packages/amino/src/signdoc.ts#L12)
          example:
            amount:
              - denom: afet
                amount: '5000'
            gas: '200000'
        messages:
          type: array
          description: List of messages included in the transaction. The list contains one message for the staking delegation and one more message for rewards restaking in case specified as a parameter (`restake_rewards=true`).
          items:
            oneOf:
              - $ref: '#/components/schemas/FETStakeMessage'
              - $ref: '#/components/schemas/FETStakeMessageRestake'
          example:
            - typeUrl: /cosmos.staking.v1beta1.MsgDelegate
              value:
                delegatorAddress: fetch1djqecw6nn5tydxq0shan7srv8j65clsf7vypl6
                validatorAddress: fetchvaloper1djqecw6nn5tydxq0shan7srv8j65clsfmnxcfu
                amount:
                  denom: afet
                  amount: '1000000'
            - typeUrl: /cosmos.staking.v1beta1.StakeAuthorization
              allowList:
                address:
                  - fetchvaloper1djqecw6nn5tydxq0shan7srv8j65clsfmnxcfu
              AuthorizationType: 1
        chain_id:
          type: string
          description: Chain ID
          example: cosmoshub-4
        account_number:
          type: number
          description: Account number
          example: 1234
    FETUnsignedTx:
      type: object
      required:
        - unsigned_tx_serialized
        - unsigned_tx_hash
        - tx_body
        - tx_auth_info
        - pubkey
        - message
        - fee
        - chain_id
        - account_number
      properties:
        unsigned_tx_serialized:
          type: string
          description: Unsigned serialized transaction
          example: 0adf010adc010a2a2f636f736d6f732e7374616b696e672e763162657461312e4d7367426567696e526564656c656761746512ad010a2d636f736d6f733139633966646834383876716a636c6c74777036386a6d3530796477796833366a7165617465761234636f736d6f7376616c6f70657231307636777664656e65653872396c36776c73706863677572326c746c387a746b6672766a39611a34636f736d6f7376616c6f70657231796d7a336b6a7466397a6b666d6d3273326c7279376568307a6439657a33766335797030306622100a057561746f6d12073433313030303012670a500a460a1f2f636f736d6f732e63727970746f2e736563703235366b312e5075624b657912230a21039ce47b2a813d13876131a9c3be77e8c4afa49e948744abbee11f939e2a420f4612040a020801186d12130a0d0a057561746f6d1204353030301080897a1a1174686574612d746573746e65742d30303120e0cd2a
        unsigned_tx_hash:
          type: string
          description: Hash of the unsigned transaction
          example: b6ce1c8185416ce7d42a8c39566a9a2b6b2361a55c04a1dba3dd7445a0e1e364
        tx_body:
          type: string
          description: Transaction body serialized in hex
          example: 0a9e010a232f636f736d6f732e7374616b696e672e763162657461312e4d736744656c656761746512770a2d636f736d6f733139633966646834383876716a636c6c74777036386a6d3530796477796833366a7165617465761234636f736d6f7376616c6f706572313679733065673933356d6b71706b79646b6766636a39616765326175386c39366e61657265391a100a057561746f6d120731303030303030
        tx_auth_info:
          type: string
          description: Transaction auth info serialized in hex
          example: 0a2c0a2a0a28636f736d6f733139633966646834383876716a636c6c74777036386a6d3530796477796833366a716561746576120a2d636f736d6f733139633966646834383876716a636c6c74777036386a6d3530796477796833366a7165617465761234636f736d6f7376616c6f706572313679733065673933356d6b71706b79646b6766636a39616765326175386c39366e6165726539
        pubkey:
          type: string
          description: Wallet compressed public key, this is different than the wallet address
          example: 039ce47b2a813d13876131a9c3be77e8c4afa49e948744abbee11f939e2a420f46
        message:
          type: object
          description: Message included in the transaction
          example:
            typeUrl: /cosmos.staking.v1beta1.MsgDelegate
            value:
              delegatorAddress: fetch1djqecw6nn5tydxq0shan7srv8j65clsf7vypl6
              validatorAddress: fetchvaloper1djqecw6nn5tydxq0shan7srv8j65clsfmnxcfu
              amount:
                denom: afet
                amount: '1000000'
        fee:
          type: object
          description: Fee included in the transaction. Object shape can be found [here](https://github.com/cosmos/cosmjs/blob/72da7971ee4fd77fec1bfef2ec1ba4f14f8c319d/packages/amino/src/signdoc.ts#L12)
          example:
            amount:
              - denom: afet
                amount: '5000'
            gas: '200000'
        chain_id:
          type: string
          description: Chain ID
          example: cosmoshub-4
        account_number:
          type: number
          description: Account number
          example: 1234
    FETSignedTx:
      type: object
      required:
        - signed_tx_serialized
      properties:
        signed_tx_serialized:
          type: string
          description: Serialized signed transaction in hex
          example: 0aa1010a9e010a232f636f736d6f732e7374616b696e672e763162657461312e4d736744656c656761746512770a2d636f736d6f733139633966646834383876716a636c6c74777036386a6d3530796477796833366a7165617465761234636f736d6f7376616c6f706572313679733065673933356d6b71706b79646b6766636a39616765326175386c39366e61657265391a100a057561746f6d12073130303030303012670a500a460a1f2f636f736d6f732e63727970746f2e736563703235366b312e5075624b657912230a21039ce47b2a813d13876131a9c3be77e8c4afa49e948744abbee11f939e2a420f4612040a020801182012130a0d0a057561746f6d12043530303010e0a7121a40191f87a54dceafb6ab9a5f112a13444ca37e49a029e531bb21301fd72e9d390304c763cca5a9760a631dc85705dd6b08b50f5fff7d5de8d73b2cebd1f4c3b6a0
    FETTxHash:
      type: object
      required:
        - tx_hash
      properties:
        tx_hash:
          type: string
          description: Hash of the transaction
          example: 2B4F732E12D5D5AF1F907AD03B199167A718EDC6201DE5713143AB80990420CB
    FETPrepareTxPayload:
      type: object
      required:
        - pubkey
        - tx_body
        - tx_auth_info
        - signature
      properties:
        pubkey:
          type: string
          description: Wallet public key (compressed or uncompressed), this is different than the wallet address
          example: 039ce47b2a813d13876131a9c3be77e8c4afa49e948744abbee11f939e2a420f46
        tx_body:
          type: string
          description: Transaction body serialized in hex
          example: 0a9e010a232f636f736d6f732e7374616b696e672e763162657461312e4d736744656c656761746512770a2d636f736d6f733139633966646834383876716a636c6c74777036386a6d3530796477796833366a7165617465761234636f736d6f7376616c6f706572313679733065673933356d6b71706b79646b6766636a39616765326175386c39366e61657265391a100a057561746f6d120731303030303030
        tx_auth_info:
          type: string
          description: Transaction auth info serialized in hex
          example: 0a2c0a2a0a28636f736d6f733139633966646834383876716a636c6c74777036386a6d3530796477796833366a716561746576120a2d636f736d6f733139633966646834383876716a636c6c74777036386a6d3530796477796833366a7165617465761234636f736d6f7376616c6f706572313679733065673933356d6b71706b79646b6766636a39616765326175386c39366e6165726539
        signature:
          type: string
          description: Transaction signature serialized in hex
          example: 191f87a54dceafb6ab9a5f112a13444ca37e49a029e531bb21301fd72e9d390304c763cca5a9760a631dc85705dd6b08b50f5fff7d5de8d73b2cebd1f4c3b6a0
    FETBroadcastTxPayload:
      type: object
      required:
        - tx_serialized
      properties:
        tx_serialized:
          type: string
          description: Signed transaction serialized in hex
          example: 0aa1010a9e010a232f636f736d6f732e7374616b696e672e763162657461312e4d736744656c656761746512770a2d636f736d6f733139633966646834383876716a636c6c74777036386a6d3530796477796833366a7165617465761234636f736d6f7376616c6f706572313679733065673933356d6b71706b79646b6766636a39616765326175386c39366e61657265391a100a057561746f6d12073130303030303012670a500a460a1f2f636f736d6f732e63727970746f2e736563703235366b312e5075624b657912230a21039ce47b2a813d13876131a9c3be77e8c4afa49e948744abbee11f939e2a420f4612040a020801182012130a0d0a057561746f6d12043530303010e0a7121a40191f87a54dceafb6ab9a5f112a13444ca37e49a029e531bb21301fd72e9d390304c763cca5a9760a631dc85705dd6b08b50f5fff7d5de8d73b2cebd1f4c3b6a0
    FETTxStatus:
      type: object
      properties:
        status:
          type: string
          enum:
            - success
            - error
          description: Transaction status
          example: success
        receipt:
          type: object
          description: Transaction receipt. Only present if status is success. Object shape can be found [here](https://github.com/cosmos/cosmjs/blob/e8e65aa0c145616ccb58625c32bffe08b46ff574/packages/stargate/src/stargateclient.ts#L67)
          example:
            height: 16007296
            txIndex: 0
            hash: 2B4F732E12D5D5AF1F907AD03B199167A718EDC6201DE5713143AB80990420CB
            code: 0
            events:
              - type: coin_spent
                attributes:
                  - key: spender
                    value: fetch19c9fdh488vqjclltwp68jm50ydwyh36jqeatev
                  - key: amount
                    value: 5000afet
              - type: coin_received
                attributes:
                  - key: receiver
                    value: fetch17xpfvakm2amg962yls6f84z3kell8c5lserqta
                  - key: amount
                    value: 5000afet
              - type: transfer
                attributes:
                  - key: recipient
                    value: fetch17xpfvakm2amg962yls6f84z3kell8c5lserqta
                  - key: sender
                    value: fetch19c9fdh488vqjclltwp68jm50ydwyh36jqeatev
                  - key: amount
                    value: 5000afet
              - type: message
                attributes:
                  - key: sender
                    value: fetch19c9fdh488vqjclltwp68jm50ydwyh36jqeatev
              - type: tx
                attributes:
                  - key: fee
                    value: 5000afet
                  - key: fee_payer
                    value: fetch19c9fdh488vqjclltwp68jm50ydwyh36jqeatev
              - type: tx
                attributes:
                  - key: acc_seq
                    value: fetch19c9fdh488vqjclltwp68jm50ydwyh36jqeatev/33
              - type: tx
                attributes:
                  - key: signature
                    value: GR+HpU3Or7arml8RKhNETKN+SaAp5TG7ITAf1y6dOQMEx2PMpal2CmMdyFcF3WsItQ9f/31d6Nc7LOvR9MO2oA==
              - type: message
                attributes:
                  - key: action
                    value: /cosmos.staking.v1beta1.MsgDelegate
              - type: coin_spent
                attributes:
                  - key: spender
                    value: fetch1jv65s3grqf6v6jl3dp4t6c9t9rk99cd88lyufl
                  - key: amount
                    value: 5afet
              - type: coin_received
                attributes:
                  - key: receiver
                    value: fetch19c9fdh488vqjclltwp68jm50ydwyh36jqeatev
                  - key: amount
                    value: 5afet
              - type: transfer
                attributes:
                  - key: recipient
                    value: fetch19c9fdh488vqjclltwp68jm50ydwyh36jqeatev
                  - key: sender
                    value: fetch1jv65s3grqf6v6jl3dp4t6c9t9rk99cd88lyufl
                  - key: amount
                    value: 5afet
              - type: message
                attributes:
                  - key: sender
                    value: fetch1jv65s3grqf6v6jl3dp4t6c9t9rk99cd88lyufl
              - type: withdraw_rewards
                attributes:
                  - key: amount
                    value: 5afet
                  - key: validator
                    value: fetchvaloper1djqecw6nn5tydxq0shan7srv8j65clsfmnxcfu
              - type: coin_spent
                attributes:
                  - key: spender
                    value: fetch19c9fdh488vqjclltwp68jm50ydwyh36jqeatev
                  - key: amount
                    value: 100000afet
              - type: coin_received
                attributes:
                  - key: receiver
                    value: fetch1fl48vsnmsdzcv85q5d2q4z5ajdha8yu34mf0eh
                  - key: amount
                    value: 100000afet
              - type: delegate
                attributes:
                  - key: validator
                    value: fetchvaloper1djqecw6nn5tydxq0shan7srv8j65clsfmnxcfu
                  - key: amount
                    value: 100000afet
                  - key: new_shares
                    value: '100000.000000000000000000'
              - type: message
                attributes:
                  - key: module
                    value: staking
                  - key: sender
                    value: fetch19c9fdh488vqjclltwp68jm50ydwyh36jqeatev
            rawLog: '[{"events":[{"type":"coin_received","attributes":[{"key":"receiver","value":"fetch19c9fdh488vqjclltwp68jm50ydwyh36jqeatev"},{"key":"amount","value":"5afet"},{"key":"receiver","value":"fetch1fl48vsnmsdzcv85q5d2q4z5ajdha8yu34mf0eh"},{"key":"amount","value":"100000afet"}]},{"type":"coin_spent","attributes":[{"key":"spender","value":"fetch1jv65s3grqf6v6jl3dp4t6c9t9rk99cd88lyufl"},{"key":"amount","value":"5afet"},{"key":"spender","value":"fetch19c9fdh488vqjclltwp68jm50ydwyh36jqeatev"},{"key":"amount","value":"100000afet"}]},{"type":"delegate","attributes":[{"key":"validator","value":"fetchvaloper1djqecw6nn5tydxq0shan7srv8j65clsfmnxcfu"},{"key":"amount","value":"100000afet"},{"key":"new_shares","value":"100000.000000000000000000"}]},{"type":"message","attributes":[{"key":"action","value":"/cosmos.staking.v1beta1.MsgDelegate"},{"key":"sender","value":"fetch1jv65s3grqf6v6jl3dp4t6c9t9rk99cd88lyufl"},{"key":"module","value":"staking"},{"key":"sender","value":"fetch19c9fdh488vqjclltwp68jm50ydwyh36jqeatev"}]},{"type":"transfer","attributes":[{"key":"recipient","value":"fetch19c9fdh488vqjclltwp68jm50ydwyh36jqeatev"},{"key":"sender","value":"fetch1jv65s3grqf6v6jl3dp4t6c9t9rk99cd88lyufl"},{"key":"amount","value":"5afet"}]},{"type":"withdraw_rewards","attributes":[{"key":"amount","value":"5afet"},{"key":"validator","value":"fetchvaloper1djqecw6nn5tydxq0shan7srv8j65clsfmnxcfu"}]}]}]'
            tx:
              '0': 10
              '1': 160
              '2': 1
              '3': 10
              '4': 157
              '5': 1
              '6': 10
              '7': 35
              '8': 47
              '9': 99
              '10': 111
              '11': 115
              '12': 109
              '13': 111
              '14': 115
              '15': 46
              '16': 115
              '17': 116
              '18': 97
              '19': 107
              '20': 105
              '21': 110
              '22': 103
              '23': 46
              '24': 118
              '25': 49
              '26': 98
              '27': 101
              '28': 116
              '29': 97
              '30': 49
              '31': 46
              '32': 77
              '33': 115
              '34': 103
              '35': 68
              '36': 101
              '37': 108
              '38': 101
              '39': 103
              '40': 97
              '41': 116
              '42': 101
              '43': 18
              '44': 118
              '45': 10
              '46': 45
              '47': 99
              '48': 111
              '49': 115
              '50': 109
              '51': 111
              '52': 115
              '53': 49
              '54': 57
              '55': 99
              '56': 57
              '57': 102
              '58': 100
              '59': 104
              '60': 52
              '61': 56
              '62': 56
              '63': 118
              '64': 113
              '65': 106
              '66': 99
              '67': 108
              '68': 108
              '69': 116
              '70': 119
              '71': 112
              '72': 54
              '73': 56
              '74': 106
              '75': 109
              '76': 53
              '77': 48
              '78': 121
              '79': 100
              '80': 119
              '81': 121
              '82': 104
              '83': 51
              '84': 54
              '85': 106
              '86': 113
              '87': 101
              '88': 97
              '89': 116
              '90': 101
              '91': 118
              '92': 18
              '93': 52
              '94': 99
              '95': 111
              '96': 115
              '97': 109
              '98': 111
              '99': 115
              '100': 118
              '101': 97
              '102': 108
              '103': 111
              '104': 112
              '105': 101
              '106': 114
              '107': 49
              '108': 54
              '109': 121
              '110': 115
              '111': 48
              '112': 101
              '113': 103
              '114': 57
              '115': 51
              '116': 53
              '117': 109
              '118': 107
              '119': 113
              '120': 112
              '121': 107
              '122': 121
              '123': 100
              '124': 107
              '125': 103
              '126': 102
              '127': 99
              '128': 106
              '129': 57
              '130': 97
              '131': 103
              '132': 101
              '133': 50
              '134': 97
              '135': 117
              '136': 56
              '137': 108
              '138': 57
              '139': 54
              '140': 110
              '141': 97
              '142': 101
              '143': 114
              '144': 101
              '145': 57
              '146': 26
              '147': 15
              '148': 10
              '149': 5
              '150': 117
              '151': 97
              '152': 116
              '153': 111
              '154': 109
              '155': 18
              '156': 6
              '157': 49
              '158': 48
              '159': 48
              '160': 48
              '161': 48
              '162': 48
              '163': 18
              '164': 103
              '165': 10
              '166': 80
              '167': 10
              '168': 70
              '169': 10
              '170': 31
              '171': 47
              '172': 99
              '173': 111
              '174': 115
              '175': 109
              '176': 111
              '177': 115
              '178': 46
              '179': 99
              '180': 114
              '181': 121
              '182': 112
              '183': 116
              '184': 111
              '185': 46
              '186': 115
              '187': 101
              '188': 99
              '189': 112
              '190': 50
              '191': 53
              '192': 54
              '193': 107
              '194': 49
              '195': 46
              '196': 80
              '197': 117
              '198': 98
              '199': 75
              '200': 101
              '201': 121
              '202': 18
              '203': 35
              '204': 10
              '205': 33
              '206': 3
              '207': 156
              '208': 228
              '209': 123
              '210': 42
              '211': 129
              '212': 61
              '213': 19
              '214': 135
              '215': 97
              '216': 49
              '217': 169
              '218': 195
              '219': 190
              '220': 119
              '221': 232
              '222': 196
              '223': 175
              '224': 164
              '225': 158
              '226': 148
              '227': 135
              '228': 68
              '229': 171
              '230': 190
              '231': 225
              '232': 31
              '233': 147
              '234': 158
              '235': 42
              '236': 66
              '237': 15
              '238': 70
              '239': 18
              '240': 4
              '241': 10
              '242': 2
              '243': 8
              '244': 1
              '245': 24
              '246': 33
              '247': 18
              '248': 19
              '249': 10
              '250': 13
              '251': 10
              '252': 5
              '253': 117
              '254': 97
              '255': 116
              '256': 111
              '257': 109
              '258': 18
              '259': 4
              '260': 53
              '261': 48
              '262': 48
              '263': 48
              '264': 16
              '265': 224
              '266': 167
              '267': 18
              '268': 26
              '269': 64
              '270': 25
              '271': 31
              '272': 135
              '273': 165
              '274': 77
              '275': 206
              '276': 175
              '277': 182
              '278': 171
              '279': 154
              '280': 95
              '281': 17
              '282': 42
              '283': 19
              '284': 68
              '285': 76
              '286': 163
              '287': 126
              '288': 73
              '289': 160
              '290': 41
              '291': 229
              '292': 49
              '293': 187
              '294': 33
              '295': 48
              '296': 31
              '297': 215
              '298': 46
              '299': 157
              '300': 57
              '301': 3
              '302': 4
              '303': 199
              '304': 99
              '305': 204
              '306': 165
              '307': 169
              '308': 118
              '309': 10
              '310': 99
              '311': 29
              '312': 200
              '313': 87
              '314': 5
              '315': 221
              '316': 107
              '317': 8
              '318': 181
              '319': 15
              '320': 95
              '321': 255
              '322': 125
              '323': 93
              '324': 232
              '325': 215
              '326': 59
              '327': 44
              '328': 235
              '329': 209
              '330': 244
              '331': 195
              '332': 182
              '333': 160
            gasUsed: 167798
            gasWanted: 300000
    FETCraftUnstakeTxPayload:
      type: object
      required:
        - pubkey
        - validator
      properties:
        pubkey:
          type: string
          example: 039ce47b2a813d13876131a9c3be77e8c4afa49e948744abbee11f939e2a420f46
          description: Wallet public key (compressed or uncompressed), this is different than the wallet address
        validator:
          type: string
          example: fetchvaloper1djqecw6nn5tydxq0shan7srv8j65clsfmnxcfu
          description: Validator address
        amount_afet:
          type: string
          example: '1000000000000000000000000'
          description: Amount to unstake in uFET. Omit to unstake all the delegated amount
    FETCraftRedelegateTxPayload:
      type: object
      required:
        - account_id
        - pubkey
        - validator_source
        - validator_destination
      properties:
        account_id:
          type: string
          example: b7177fd2-fbb3-479f-aa92-db9fb16e229f
          format: uuid
          description: Kiln Account ID to which the new stake will be linked
        pubkey:
          type: string
          example: 039ce47b2a813d13876131a9c3be77e8c4afa49e948744abbee11f939e2a420f46
          description: Wallet public key (compressed or uncompressed), this is different than the wallet address
        validator_source:
          type: string
          example: fetchvaloper1djqecw6nn5tydxq0shan7srv8j65clsfmnxcfu
          description: Validator source address of current stake
        validator_destination:
          type: string
          example: fetchvaloper1djqecw6nn5tydxq0shan7srv8j65clsfmnxcfu
          description: Validator destination address to which redelegate the stake
        amount_afet:
          type: string
          example: '1000000000000000000000000'
          description: Amount to redelegate in uFET
    FETCraftStakeTxPayload:
      type: object
      required:
        - account_id
        - pubkey
        - validator
        - amount_afet
      properties:
        account_id:
          type: string
          example: b7177fd2-fbb3-479f-aa92-db9fb16e229f
          format: uuid
          description: Kiln Account ID to stake into
        pubkey:
          type: string
          example: 039ce47b2a813d13876131a9c3be77e8c4afa49e948744abbee11f939e2a420f46
          description: Wallet public key (compressed or uncompressed), this is different than the wallet address
        validator:
          type: string
          example: fetchvaloper1djqecw6nn5tydxq0shan7srv8j65clsfmnxcfu
          description: Validator address
        amount_afet:
          type: string
          example: '1000000000000000000000000'
          description: Amount to stake in afet
        restake_rewards:
          type: boolean
          default: false
          description: If enabled, the rewards will be automatically restaked
        grantee_address:
          type: string
          example: cosmos1u4whe0pwlgt7q7ph37qxalq2wfq4pkcdze5fmd
          description: 'Grantee address, this address is specific to each validator. Kiln grantee addresses are found here: https://github.com/eco-stake/validator-registry/blob/master/Kiln/chains.json https://github.com/eco-stake/validator-registry/blob/master/interop/chains.json'
    FETCraftRestakeRewardsTxPayload:
      type: object
      required:
        - pubkey
        - validator_address
        - grantee_address
      properties:
        pubkey:
          type: string
          example: 039ce47b2a813d13876131a9c3be77e8c4afa49e948744abbee11f939e2a420f46
          description: Wallet public key (compressed or uncompressed), this is different than the wallet address
        validator_address:
          type: string
          example: fetchvaloper1djqecw6nn5tydxq0shan7srv8j65clsfmnxcfu
          description: Validator address
        grantee_address:
          type: string
          example: cosmos1u4whe0pwlgt7q7ph37qxalq2wfq4pkcdze5fmd
          description: 'Grantee address, this address is specific to each validator. Kiln grantee addresses are found here: https://github.com/eco-stake/validator-registry/blob/master/Kiln/chains.json https://github.com/eco-stake/validator-registry/blob/master/interop/chains.json'
    FETCraftWithdrawRewardsTxPayload:
      type: object
      required:
        - pubkey
        - validator
      properties:
        pubkey:
          type: string
          example: 039ce47b2a813d13876131a9c3be77e8c4afa49e948744abbee11f939e2a420f46
          description: Wallet public key (compressed or uncompressed), this is different than the wallet address
        validator:
          type: string
          example: fetchvaloper1djqecw6nn5tydxq0shan7srv8j65clsfmnxcfu
          description: Validator address
    FETReward:
      type: object
      required:
        - date
        - rewards
        - balance
        - net_apy
      properties:
        date:
          type: string
          description: Day for this reward entry
          format: date
          example: '2023-01-15'
        rewards:
          type: string
          description: Accumulated rewards in uFET during the day
          example: '3575891083876864200000'
        balance:
          type: string
          description: Staked balance in uFET at the end of the day
          example: '6300000000000000000000000'
        net_apy:
          type: number
          description: Net annual percentage yield
          example: 20.76
        rewards_usd:
          type: number
          description: Estimated value of rewards generated for that day in USD. The exchange rate is the rate at the end of the day provided by CoinGeckko.
        balance_usd:
          type: number
          description: Estimated value of the staked balance at the beginning of the day in USD. The exchange rate is the rate at the end of the day provided by CoinGeckko.
    FETOperationDelegate:
      type: object
      properties:
        type:
          type: string
          description: Operation type
          example: staking.MsgDelegate
        time:
          type: string
          description: Date of the operation
          format: date-time
          example: '2023-06-22T15:35:01.892644Z'
        block:
          type: number
          description: Transaction block
          example: 15828207
        tx_hash:
          type: string
          description: Transaction hash
          example: 7DBC7C481A9A28961BDDF5BCDD47217A126EC0497017908453D71FACA9FA3506
        tx_gas_used:
          type: string
          description: Gas used for the whole transaction in uFET
          example: '186733'
        message_index:
          type: number
          description: Index of the message in the transaction
          example: 0
        validator_address:
          type: string
          description: Validator address
          example: fetchvaloper1djqecw6nn5tydxq0shan7srv8j65clsfmnxcfu
        delegator_address:
          type: string
          description: Delegator address
          example: fetch1djqecw6nn5tydxq0shan7srv8j65clsf7vypl6
        amount:
          type: string
          description: Amount added to the staked balance in uFET
          example: '3000000'
        withdraw_rewards:
          type: string
          description: Rewards auto-claimed alongside the operation in uFET
          example: '10841'
    FETOperationUndelegate:
      type: object
      properties:
        type:
          type: string
          description: Operation type
          example: staking.MsgUndelegate
        time:
          type: string
          description: Date of the operation
          format: date-time
          example: '2023-06-22T15:35:01.892644Z'
        block:
          type: number
          description: Transaction block
          example: 15828207
        tx_hash:
          type: string
          description: Transaction hash
          example: 7DBC7C481A9A28961BDDF5BCDD47217A126EC0497017908453D71FACA9FA3506
        tx_gas_used:
          type: string
          description: Gas used for the whole transaction in uFET
          example: '186733'
        message_index:
          type: number
          description: Index of the message in the transaction
          example: 0
        validator_address:
          type: string
          description: Validator address
          example: fetchvaloper1djqecw6nn5tydxq0shan7srv8j65clsfmnxcfu
        delegator_address:
          type: string
          description: Delegator address
          example: fetch1djqecw6nn5tydxq0shan7srv8j65clsf7vypl6
        amount:
          type: string
          description: Amount removed from the staked balance in uFET
          example: '3000000'
        withdraw_rewards:
          type: string
          description: Rewards auto-claimed alongside the operation in uFET
          example: '10841'
    FETOperationRedelegate:
      type: object
      properties:
        type:
          type: string
          description: Operation type
          example: staking.MsgBeginRedelegate
        time:
          type: string
          description: Date of the operation
          format: date-time
          example: '2023-06-22T15:35:01.892644Z'
        block:
          type: number
          description: Transaction block
          example: 15828207
        tx_hash:
          type: string
          description: Transaction hash
          example: 7DBC7C481A9A28961BDDF5BCDD47217A126EC0497017908453D71FACA9FA3506
        tx_gas_used:
          type: string
          description: Gas used for the whole transaction in uFET
          example: '186733'
        message_index:
          type: number
          description: Index of the message in the transaction
          example: 0
        validator_address:
          type: string
          description: Destination validator address
          example: fetchvaloper1djqecw6nn5tydxq0shan7srv8j65clsfmnxcfu
        validator_address_source:
          type: string
          description: Source validator address
          example: fetchvaloper1djqecw6nn5tydxq0shan7srv8j65clsfmnxcfu
        delegator_address:
          type: string
          description: Delegator address
          example: fetch1djqecw6nn5tydxq0shan7srv8j65clsf7vypl6
        amount:
          type: string
          description: Amount moved from the source validator staked balance to the destination validator staked balance in uFET
          example: '3000000'
        withdraw_rewards:
          type: string
          description: Rewards auto-claimed from the destination validator alongside the operation in uFET
          example: '10841'
        withdraw_rewards_source:
          type: string
          description: Rewards auto-claimed from the source validator alongside the operation in uFET
          example: '10841'
    FETOperationWithdrawRewards:
      type: object
      properties:
        type:
          type: string
          description: Operation type
          example: distr.MsgWithdrawDelegatorReward
        time:
          type: string
          description: Date of the operation
          format: date-time
          example: '2023-06-22T15:35:01.892644Z'
        block:
          type: number
          description: Transaction block
          example: 15828207
        tx_hash:
          type: string
          description: Transaction hash
          example: 7DBC7C481A9A28961BDDF5BCDD47217A126EC0497017908453D71FACA9FA3506
        tx_gas_used:
          type: string
          description: Gas used for the whole transaction in uFET
          example: '186733'
        message_index:
          type: number
          description: Index of the message in the transaction
          example: 0
        validator_address:
          type: string
          description: Validator address
          example: fetchvaloper1djqecw6nn5tydxq0shan7srv8j65clsfmnxcfu
        delegator_address:
          type: string
          description: Delegator address
          example: fetch1djqecw6nn5tydxq0shan7srv8j65clsf7vypl6
        withdraw_rewards:
          type: string
          description: Rewards claimed alongside the operation in uFET
          example: '10841'
    FETOperationGrant:
      type: object
      properties:
        type:
          type: string
          description: Operation type
          example: Authz.Grant
        time:
          type: string
          description: Date of the operation
          format: date-time
          example: '2023-06-22T15:35:01.892644Z'
        block:
          type: number
          description: Transaction block
          example: 15828207
        tx_hash:
          type: string
          description: Transaction hash
          example: 7DBC7C481A9A28961BDDF5BCDD47217A126EC0497017908453D71FACA9FA3506
        tx_gas_used:
          type: string
          description: Gas used for the whole transaction in uFET
          example: '186733'
        message_index:
          type: number
          description: Index of the message in the transaction
          example: 0
        grantee:
          type: string
          description: Recipient of the permissions
          example: fetch1djqecw6nn5tydxq0shan7srv8j65clsf7vypl6
        granter:
          type: string
          description: Owner of the stake giving the permissions
          example: fetch1djqecw6nn5tydxq0shan7srv8j65clsf7vypl6
        permission:
          type: string
          description: 'Kind of permission been grantee, can be: "Staking.MsgDelegate", "Staking.MsgUndelegate", "Staking.MsgRedelegate" or "Distribution.MsgWithdrawDelegatorReward"'
          example: Staking.MsgDelegate
        allow_list:
          type: array
          items:
            type: string
          nullable: true
          description: List of address on which the granted permission can be applied (ie validator on which delegation is allowed)
          example:
            - fetch1djqecw6nn5tydxq0shan7srv8j65clsf7vypl6
            - fetch1djqecw6nn5tydxq0shan7srv8j65clsf7vypl6
        deny_list:
          type: array
          items:
            type: string
          nullable: true
          description: List of address on which the granted permission cannot be applied (ie validator on which delegation is allowed)
          example:
            - fetch1djqecw6nn5tydxq0shan7srv8j65clsf7vypl6
            - fetch1djqecw6nn5tydxq0shan7srv8j65clsf7vypl6
    FETOperationExec:
      type: object
      properties:
        type:
          type: string
          description: Operation type
          example: Authz.Exec
        time:
          type: string
          description: Date of the operation
          format: date-time
          example: '2023-06-22T15:35:01.892644Z'
        block:
          type: number
          description: Transaction block
          example: 15828207
        tx_hash:
          type: string
          description: Transaction hash
          example: 7DBC7C481A9A28961BDDF5BCDD47217A126EC0497017908453D71FACA9FA3506
        tx_gas_used:
          type: string
          description: Gas used for the whole transaction in uFET
          example: '186733'
        message_index:
          type: number
          description: Index of the message in the transaction
          example: 0
        executed_operations:
          type: array
          nullable: true
          items:
            type: object
            properties:
              type:
                type: string
                description: Operation type
                example: staking.Delegate
              validator_address:
                type: string
                description: Destination validator address
                example: fetchvaloper1djqecw6nn5tydxq0shan7srv8j65clsfmnxcfu
              validator_address_source:
                type: string
                description: Source validator address
                example: fetchvaloper1djqecw6nn5tydxq0shan7srv8j65clsfmnxcfu
              delegator_address:
                type: string
                description: Delegator address
                example: fetch1djqecw6nn5tydxq0shan7srv8j65clsf7vypl6
              amount:
                type: string
                description: Amount moved from the source validator staked balance to the destination validator staked balance in uFET
                example: '3000000'
              withdraw_rewards:
                type: string
                description: Rewards auto-claimed from the destination validator alongside the operation in uFET
                example: '10841'
              withdraw_rewards_source:
                type: string
                description: Rewards auto-claimed from the source validator alongside the operation in uFET
                example: '10841'
    FETNetworkStats:
      type: object
      required:
        - fet_price_usd
        - nb_validators
        - network_gross_apy
        - supply_staked_percent
        - inflation_rate
        - updated_at
      properties:
        fet_price_usd:
          type: number
          description: Price of Fetch in USD
          example: 10.53
        nb_validators:
          type: number
          description: Number of validators in the network
          example: 100
        network_gross_apy:
          type: number
          description: Gross annual percentage yield
          example: 4.5
        supply_staked_percent:
          type: number
          description: Supply of Fetch currently staked
          example: 12.4
        inflation_rate:
          type: number
          description: Fetch inflation rate
          example: 3.5
        updated_at:
          type: string
          description: Last date this data was updated
          format: date-time
          example: '2023-01-14T01:13:59Z'
    FETTxDecoding:
      type: object
      description: Decoded transaction
      example:
        authInfo:
          signerInfos:
            - publicKey:
                typeUrl: /cosmos.crypto.secp256k1.PubKey
                value:
                  '0': 10
                  '1': 33
                  '2': 3
                  '3': 156
                  '4': 228
                  '5': 123
                  '6': 42
                  '7': 129
                  '8': 61
                  '9': 19
                  '10': 135
                  '11': 97
                  '12': 49
                  '13': 169
                  '14': 195
                  '15': 190
                  '16': 119
                  '17': 232
                  '18': 196
                  '19': 175
                  '20': 164
                  '21': 158
                  '22': 148
                  '23': 135
                  '24': 68
                  '25': 171
                  '26': 190
                  '27': 225
                  '28': 31
                  '29': 147
                  '30': 158
                  '31': 42
                  '32': 66
                  '33': 15
                  '34': 70
              modeInfo:
                single:
                  mode: 1
              sequence:
                low: 102
                high: 0
                unsigned: true
          fee:
            amount:
              - denom: afet
                amount: '5000'
            gasLimit:
              low: 2000000
              high: 0
              unsigned: true
            payer: ''
            granter: ''
        body:
          messages:
            - typeUrl: /cosmos.staking.v1beta1.MsgDelegate
              value:
                '0': 10
                '1': 45
                '2': 99
                '3': 111
                '4': 115
                '5': 109
                '6': 111
                '7': 115
                '8': 49
                '9': 57
                '10': 99
                '11': 57
                '12': 102
                '13': 100
                '14': 104
                '15': 52
                '16': 56
                '17': 56
                '18': 118
                '19': 113
                '20': 106
                '21': 99
                '22': 108
                '23': 108
                '24': 116
                '25': 119
                '26': 112
                '27': 54
                '28': 56
                '29': 106
                '30': 109
                '31': 53
                '32': 48
                '33': 121
                '34': 100
                '35': 119
                '36': 121
                '37': 104
                '38': 51
                '39': 54
                '40': 106
                '41': 113
                '42': 101
                '43': 97
                '44': 116
                '45': 101
                '46': 118
                '47': 18
                '48': 52
                '49': 99
                '50': 111
                '51': 115
                '52': 109
                '53': 111
                '54': 115
                '55': 118
                '56': 97
                '57': 108
                '58': 111
                '59': 112
                '60': 101
                '61': 114
                '62': 49
                '63': 54
                '64': 121
                '65': 115
                '66': 48
                '67': 101
                '68': 103
                '69': 57
                '70': 51
                '71': 53
                '72': 109
                '73': 107
                '74': 113
                '75': 112
                '76': 107
                '77': 121
                '78': 100
                '79': 107
                '80': 103
                '81': 102
                '82': 99
                '83': 106
                '84': 57
                '85': 97
                '86': 103
                '87': 101
                '88': 50
                '89': 97
                '90': 117
                '91': 56
                '92': 108
                '93': 57
                '94': 54
                '95': 110
                '96': 97
                '97': 101
                '98': 114
                '99': 101
                '100': 57
                '101': 26
                '102': 16
                '103': 10
                '104': 5
                '105': 117
                '106': 97
                '107': 116
                '108': 111
                '109': 109
                '110': 18
                '111': 7
                '112': 49
                '113': 48
                '114': 48
                '115': 48
                '116': 48
                '117': 48
                '118': 48
          memo: ''
          timeoutHeight:
            low: 0
            high: 0
            unsigned: true
          extensionOptions: []
          nonCriticalExtensionOptions: []
        signatures:
          - '0': 116
            '1': 104
            '2': 101
            '3': 116
            '4': 97
            '5': 45
            '6': 116
            '7': 101
            '8': 115
            '9': 116
            '10': 110
            '11': 101
            '12': 116
            '13': 45
            '14': 48
            '15': 48
            '16': 49
    FETCraftSendTxPayload:
      type: object
      required:
        - pubkey
        - to
        - amount_afet
      properties:
        pubkey:
          type: string
          description: Wallet public key (compressed or uncompressed), this is different than the wallet address
          example: 039ce47b2a813d13876131a9c3be77e8c4afa49e948744abbee11f939e2a420f46
        to:
          type: string
          description: Recipient address
          example: fetch1mfdn23y2ydnp6j3l3f8rw6r2gzazrmprgxn5xl
        amount_afet:
          type: string
          description: Amount to send in afet
          example: '1000000000000000000000000'
    FETGetBalancePayload:
      type: object
      required:
        - address
        - denom
      properties:
        address:
          type: string
          description: Wallet address
          example: fetch1djqecw6nn5tydxq0shan7srv8j65clsf7vypl6
        denom:
          type: string
          description: The denomination of the balance to query
          example: afet
    INJStake:
      type: object
      required:
        - validator_address
        - delegator_address
        - rewards
        - available_rewards
        - balance
        - state
        - net_apy
        - unbondings
        - permissions
      properties:
        validator_address:
          type: string
          description: Public key of the validator
          example: injvaloper1djqecw6nn5tydxq0shan7srv8j65clsfmnxcfu
        delegator_address:
          type: string
          description: Public key of the delegator
          example: inj1mfdn23y2ydnp6j3l3f8rw6r2gzazrmprgxn5xl
        delegated_at:
          type: string
          description: Date of first delegation ever for the stake. Unavailable for stakes older than [Theta v7 (12/04/2022)](https://github.com/cosmos/gaia/tree/main/docs/roadmap#cosmos-hub-summary).
          format: date-time
          example: '2023-06-16T03:13:23.058547Z'
        delegated_block:
          type: number
          description: Block of first delegation ever for the stake. Unavailable for stakes older than [Theta v7 (12/04/2022)](https://github.com/cosmos/gaia/tree/main/docs/roadmap#cosmos-hub-summary).
          example: 15739267
        undelegated_at:
          type: string
          description: Date of undelegation for the stake
          format: date-time
          example: '2023-07-14T03:56:13.561156Z'
        undelegated_block:
          type: number
          description: Block of undelegation for the stake
          example: 16126416
        rewards:
          type: string
          description: Total rewards accumulated by this stake since its first ever delegation in uINJ. Includes currently available rewards not yet withdrawn.
          example: '735573808534727891000000'
        available_rewards:
          type: string
          description: Available rewards in uINJ that can be withdrawn from this stake
          example: '36748808534727891000000'
        balance:
          type: string
          description: Staked balance on this stake in uINJ
          example: '6300000000000000000000000'
        net_apy:
          type: number
          description: Net annual percentage yield. Unavailable for stakes older than [Theta v7 (12/04/2022)](https://github.com/cosmos/gaia/tree/main/docs/roadmap#cosmos-hub-summary).
          example: 5.76
        state:
          type: string
          description: State of the Injective stake
          example: active
          enum:
            - active
            - deactivating
            - inactive
        updated_at:
          type: string
          description: Last date this data was updated
          format: date-time
          example: '2023-01-14T01:13:59Z'
        permissions:
          description: permissions related to the stake currently active, ignored if there is no ongoing grants
          type: array
          items:
            type: object
            properties:
              source:
                type: string
                description: whether the stake is recipient (grantee) or the giver (granter) of the permissions
                example: granter
              creation_height:
                type: number
                description: Block at which the unbonding was created
                example: 15000000
              permission:
                type: string
                description: 'Kind of permission been grantee, can be: "Staking.MsgDelegate", "Staking.MsgUndelegate", "Staking.MsgRedelegate" or "Distribution.MsgWithdrawDelegatorReward"'
                example: Staking.MsgDelegate
              expires_at:
                type: string
                description: Exact time at which the permissions will be revoked
                format: date-time
                example: '2023-01-10T01:12:34Z'
                nullable: true
              allow_list:
                type: array
                items:
                  type: string
                nullable: true
                description: List of address on which the granted permission can be applied (ie validator on which delegation is allowed)
                example:
                  - injvaloper1xyz
                  - injvaloper1abc
              deny_list:
                type: array
                items:
                  type: string
                nullable: true
                description: List of address on which the granted permission cannot be applied (ie validator on which delegation is allowed)
                example:
                  - injvaloper1xyz
                  - injvaloper1abc
        unbondings:
          description: unbondings currently active on the stakes. ignored if no unbondings are returned
          type: array
          items:
            type: object
            required:
              - creation_height
              - completion_time
              - balance
              - initial_balance
            properties:
              creation_height:
                type: number
                description: Block at which the unbonding was created
                example: 15000000
              completion_time:
                type: string
                description: Exact time at which the unbonding will take effect
                format: date-time
                example: '2023-01-10T01:12:34Z'
              balance:
                type: string
                description: Amount currently associated with the unbonding (slashes included)
                example: '129300'
              initial_balance:
                type: string
                description: Amount expected at creation (slashes non-included)
                example: '150300'
    PostINJStakesPayload:
      type: object
      required:
        - stakes
        - account_id
      properties:
        stakes:
          type: array
          items:
            type: object
            properties:
              stakeId:
                type: string
                description: Stake id {validator_address}_{delegator_address}
                example: injvaloper1djqecw6nn5tydxq0shan7srv8j65clsfmnxcfu_inj1djqecw6nn5tydxq0shan7srv8j65clsf7vypl6}
        account_id:
          type: string
          description: Kiln Account ID
          example: 92f5bfd4-ea38-4824-84f7-686eddff5539
    INJStakeMessage:
      type: object
      properties:
        typeUrl:
          type: string
          description: Type URL of the message
          example: /cosmos.staking.v1beta1.MsgDelegate
        value:
          type: object
          description: Message value
          example:
            delegatorAddress: inj1djqecw6nn5tydxq0shan7srv8j65clsf7vypl6
            validatorAddress: injvaloper1djqecw6nn5tydxq0shan7srv8j65clsfmnxcfu
            amount:
              denom: inj
              amount: '1000000'
    INJStakeMessageRestake:
      type: object
      properties:
        typeUrl:
          type: string
          description: Type URL of the message
          example: /cosmos.staking.v1beta1.StakeAuthorization
        value:
          type: object
          description: Message value
          example:
            allowList:
              address:
                - injvaloper1djqecw6nn5tydxq0shan7srv8j65clsfmnxcfu
            AuthorizationType: 1
    INJStakeUnsignedTx:
      type: object
      required:
        - unsigned_tx_serialized
        - unsigned_tx_hash
        - tx_body
        - tx_auth_info
        - pubkey
        - messages
        - fee
        - chain_id
        - account_number
      properties:
        unsigned_tx_serialized:
          type: string
          description: Unsigned serialized transaction
          example: 0adf010adc010a2a2f636f736d6f732e7374616b696e672e763162657461312e4d7367426567696e526564656c656761746512ad010a2d636f736d6f733139633966646834383876716a636c6c74777036386a6d3530796477796833366a7165617465761234636f736d6f7376616c6f70657231307636777664656e65653872396c36776c73706863677572326c746c387a746b6672766a39611a34636f736d6f7376616c6f70657231796d7a336b6a7466397a6b666d6d3273326c7279376568307a6439657a33766335797030306622100a057561746f6d12073433313030303012670a500a460a1f2f636f736d6f732e63727970746f2e736563703235366b312e5075624b657912230a21039ce47b2a813d13876131a9c3be77e8c4afa49e948744abbee11f939e2a420f4612040a020801186d12130a0d0a057561746f6d1204353030301080897a1a1174686574612d746573746e65742d30303120e0cd2a
        unsigned_tx_hash:
          type: string
          description: Hash of the unsigned transaction
          example: b6ce1c8185416ce7d42a8c39566a9a2b6b2361a55c04a1dba3dd7445a0e1e364
        tx_body:
          type: string
          description: Transaction body serialized in hex
          example: 0a9e010a232f636f736d6f732e7374616b696e672e763162657461312e4d736744656c656761746512770a2d636f736d6f733139633966646834383876716a636c6c74777036386a6d3530796477796833366a7165617465761234636f736d6f7376616c6f706572313679733065673933356d6b71706b79646b6766636a39616765326175386c39366e61657265391a100a057561746f6d120731303030303030
        tx_auth_info:
          type: string
          description: Transaction auth info serialized in hex
          example: 0a2c0a2a0a28636f736d6f733139633966646834383876716a636c6c74777036386a6d3530796477796833366a716561746576120a2d636f736d6f733139633966646834383876716a636c6c74777036386a6d3530796477796833366a7165617465761234636f736d6f7376616c6f706572313679733065673933356d6b71706b79646b6766636a39616765326175386c39366e6165726539
        pubkey:
          type: string
          description: Wallet compressed public key, this is different than the wallet address
          example: 039ce47b2a813d13876131a9c3be77e8c4afa49e948744abbee11f939e2a420f46
        fee:
          type: object
          description: Fee included in the transaction. Object shape can be found [here](https://github.com/cosmos/cosmjs/blob/72da7971ee4fd77fec1bfef2ec1ba4f14f8c319d/packages/amino/src/signdoc.ts#L12)
          example:
            amount:
              - denom: inj
                amount: '5000'
            gas: '200000'
        messages:
          type: array
          description: List of messages included in the transaction.
          items:
            oneOf:
              - $ref: '#/components/schemas/INJStakeMessage'
          example:
            - typeUrl: /cosmos.staking.v1beta1.MsgDelegate
              value:
                delegatorAddress: inj1djqecw6nn5tydxq0shan7srv8j65clsf7vypl6
                validatorAddress: injvaloper1djqecw6nn5tydxq0shan7srv8j65clsfmnxcfu
                amount:
                  denom: inj
                  amount: '1000000'
        chain_id:
          type: string
          description: Chain ID
          example: cosmoshub-4
        account_number:
          type: number
          description: Account number
          example: 1234
    INJUnsignedTx:
      type: object
      required:
        - unsigned_tx_serialized
        - unsigned_tx_hash
        - tx_body
        - tx_auth_info
        - pubkey
        - message
        - fee
        - chain_id
        - account_number
      properties:
        unsigned_tx_serialized:
          type: string
          description: Unsigned serialized transaction
          example: 0adf010adc010a2a2f636f736d6f732e7374616b696e672e763162657461312e4d7367426567696e526564656c656761746512ad010a2d636f736d6f733139633966646834383876716a636c6c74777036386a6d3530796477796833366a7165617465761234636f736d6f7376616c6f70657231307636777664656e65653872396c36776c73706863677572326c746c387a746b6672766a39611a34636f736d6f7376616c6f70657231796d7a336b6a7466397a6b666d6d3273326c7279376568307a6439657a33766335797030306622100a057561746f6d12073433313030303012670a500a460a1f2f636f736d6f732e63727970746f2e736563703235366b312e5075624b657912230a21039ce47b2a813d13876131a9c3be77e8c4afa49e948744abbee11f939e2a420f4612040a020801186d12130a0d0a057561746f6d1204353030301080897a1a1174686574612d746573746e65742d30303120e0cd2a
        unsigned_tx_hash:
          type: string
          description: Hash of the unsigned transaction
          example: b6ce1c8185416ce7d42a8c39566a9a2b6b2361a55c04a1dba3dd7445a0e1e364
        tx_body:
          type: string
          description: Transaction body serialized in hex
          example: 0a9e010a232f636f736d6f732e7374616b696e672e763162657461312e4d736744656c656761746512770a2d636f736d6f733139633966646834383876716a636c6c74777036386a6d3530796477796833366a7165617465761234636f736d6f7376616c6f706572313679733065673933356d6b71706b79646b6766636a39616765326175386c39366e61657265391a100a057561746f6d120731303030303030
        tx_auth_info:
          type: string
          description: Transaction auth info serialized in hex
          example: 0a2c0a2a0a28636f736d6f733139633966646834383876716a636c6c74777036386a6d3530796477796833366a716561746576120a2d636f736d6f733139633966646834383876716a636c6c74777036386a6d3530796477796833366a7165617465761234636f736d6f7376616c6f706572313679733065673933356d6b71706b79646b6766636a39616765326175386c39366e6165726539
        pubkey:
          type: string
          description: Wallet compressed public key, this is different than the wallet address
          example: 039ce47b2a813d13876131a9c3be77e8c4afa49e948744abbee11f939e2a420f46
        message:
          type: object
          description: Message included in the transaction
          example:
            typeUrl: /cosmos.staking.v1beta1.MsgDelegate
            value:
              delegatorAddress: inj1djqecw6nn5tydxq0shan7srv8j65clsf7vypl6
              validatorAddress: injvaloper1djqecw6nn5tydxq0shan7srv8j65clsfmnxcfu
              amount:
                denom: inj
                amount: '1000000'
        fee:
          type: object
          description: Fee included in the transaction. Object shape can be found [here](https://github.com/cosmos/cosmjs/blob/72da7971ee4fd77fec1bfef2ec1ba4f14f8c319d/packages/amino/src/signdoc.ts#L12)
          example:
            amount:
              - denom: inj
                amount: '5000'
            gas: '200000'
        chain_id:
          type: string
          description: Chain ID
          example: cosmoshub-4
        account_number:
          type: number
          description: Account number
          example: 1234
    INJSignedTx:
      type: object
      required:
        - signed_tx_serialized
      properties:
        signed_tx_serialized:
          type: string
          description: Serialized signed transaction in hex
          example: 0aa1010a9e010a232f636f736d6f732e7374616b696e672e763162657461312e4d736744656c656761746512770a2d636f736d6f733139633966646834383876716a636c6c74777036386a6d3530796477796833366a7165617465761234636f736d6f7376616c6f706572313679733065673933356d6b71706b79646b6766636a39616765326175386c39366e61657265391a100a057561746f6d12073130303030303012670a500a460a1f2f636f736d6f732e63727970746f2e736563703235366b312e5075624b657912230a21039ce47b2a813d13876131a9c3be77e8c4afa49e948744abbee11f939e2a420f4612040a020801182012130a0d0a057561746f6d12043530303010e0a7121a40191f87a54dceafb6ab9a5f112a13444ca37e49a029e531bb21301fd72e9d390304c763cca5a9760a631dc85705dd6b08b50f5fff7d5de8d73b2cebd1f4c3b6a0
    INJTxHash:
      type: object
      required:
        - tx_hash
      properties:
        tx_hash:
          type: string
          description: Hash of the transaction
          example: 2B4F732E12D5D5AF1F907AD03B199167A718EDC6201DE5713143AB80990420CB
    INJPrepareTxPayload:
      type: object
      required:
        - pubkey
        - tx_body
        - tx_auth_info
        - signature
      properties:
        pubkey:
          type: string
          description: Wallet public key (compressed or uncompressed), this is different than the wallet address
          example: 039ce47b2a813d13876131a9c3be77e8c4afa49e948744abbee11f939e2a420f46
        tx_body:
          type: string
          description: Transaction body serialized in hex
          example: 0a9e010a232f636f736d6f732e7374616b696e672e763162657461312e4d736744656c656761746512770a2d636f736d6f733139633966646834383876716a636c6c74777036386a6d3530796477796833366a7165617465761234636f736d6f7376616c6f706572313679733065673933356d6b71706b79646b6766636a39616765326175386c39366e61657265391a100a057561746f6d120731303030303030
        tx_auth_info:
          type: string
          description: Transaction auth info serialized in hex
          example: 0a2c0a2a0a28636f736d6f733139633966646834383876716a636c6c74777036386a6d3530796477796833366a716561746576120a2d636f736d6f733139633966646834383876716a636c6c74777036386a6d3530796477796833366a7165617465761234636f736d6f7376616c6f706572313679733065673933356d6b71706b79646b6766636a39616765326175386c39366e6165726539
        signature:
          type: string
          description: Transaction signature serialized in hex
          example: 191f87a54dceafb6ab9a5f112a13444ca37e49a029e531bb21301fd72e9d390304c763cca5a9760a631dc85705dd6b08b50f5fff7d5de8d73b2cebd1f4c3b6a0
    INJBroadcastTxPayload:
      type: object
      required:
        - tx_serialized
      properties:
        tx_serialized:
          type: string
          description: Signed transaction serialized in hex
          example: 0aa1010a9e010a232f636f736d6f732e7374616b696e672e763162657461312e4d736744656c656761746512770a2d636f736d6f733139633966646834383876716a636c6c74777036386a6d3530796477796833366a7165617465761234636f736d6f7376616c6f706572313679733065673933356d6b71706b79646b6766636a39616765326175386c39366e61657265391a100a057561746f6d12073130303030303012670a500a460a1f2f636f736d6f732e63727970746f2e736563703235366b312e5075624b657912230a21039ce47b2a813d13876131a9c3be77e8c4afa49e948744abbee11f939e2a420f4612040a020801182012130a0d0a057561746f6d12043530303010e0a7121a40191f87a54dceafb6ab9a5f112a13444ca37e49a029e531bb21301fd72e9d390304c763cca5a9760a631dc85705dd6b08b50f5fff7d5de8d73b2cebd1f4c3b6a0
    INJTxStatus:
      type: object
      properties:
        status:
          type: string
          enum:
            - success
            - error
          description: Transaction status
          example: success
        receipt:
          type: object
          description: Transaction receipt. Only present if status is success. Object shape can be found [here](https://github.com/cosmos/cosmjs/blob/e8e65aa0c145616ccb58625c32bffe08b46ff574/packages/stargate/src/stargateclient.ts#L67)
          example:
            height: 16007296
            txIndex: 0
            hash: 2B4F732E12D5D5AF1F907AD03B199167A718EDC6201DE5713143AB80990420CB
            code: 0
            events:
              - type: coin_spent
                attributes:
                  - key: spender
                    value: inj19c9fdh488vqjclltwp68jm50ydwyh36jqeatev
                  - key: amount
                    value: 5000inj
              - type: coin_received
                attributes:
                  - key: receiver
                    value: inj17xpfvakm2amg962yls6f84z3kell8c5lserqta
                  - key: amount
                    value: 5000inj
              - type: transfer
                attributes:
                  - key: recipient
                    value: inj17xpfvakm2amg962yls6f84z3kell8c5lserqta
                  - key: sender
                    value: inj19c9fdh488vqjclltwp68jm50ydwyh36jqeatev
                  - key: amount
                    value: 5000inj
              - type: message
                attributes:
                  - key: sender
                    value: inj19c9fdh488vqjclltwp68jm50ydwyh36jqeatev
              - type: tx
                attributes:
                  - key: fee
                    value: 5000inj
                  - key: fee_payer
                    value: inj19c9fdh488vqjclltwp68jm50ydwyh36jqeatev
              - type: tx
                attributes:
                  - key: acc_seq
                    value: inj19c9fdh488vqjclltwp68jm50ydwyh36jqeatev/33
              - type: tx
                attributes:
                  - key: signature
                    value: GR+HpU3Or7arml8RKhNETKN+SaAp5TG7ITAf1y6dOQMEx2PMpal2CmMdyFcF3WsItQ9f/31d6Nc7LOvR9MO2oA==
              - type: message
                attributes:
                  - key: action
                    value: /cosmos.staking.v1beta1.MsgDelegate
              - type: coin_spent
                attributes:
                  - key: spender
                    value: inj1jv65s3grqf6v6jl3dp4t6c9t9rk99cd88lyufl
                  - key: amount
                    value: 5inj
              - type: coin_received
                attributes:
                  - key: receiver
                    value: inj19c9fdh488vqjclltwp68jm50ydwyh36jqeatev
                  - key: amount
                    value: 5inj
              - type: transfer
                attributes:
                  - key: recipient
                    value: inj19c9fdh488vqjclltwp68jm50ydwyh36jqeatev
                  - key: sender
                    value: inj1jv65s3grqf6v6jl3dp4t6c9t9rk99cd88lyufl
                  - key: amount
                    value: 5inj
              - type: message
                attributes:
                  - key: sender
                    value: inj1jv65s3grqf6v6jl3dp4t6c9t9rk99cd88lyufl
              - type: withdraw_rewards
                attributes:
                  - key: amount
                    value: 5inj
                  - key: validator
                    value: injvaloper1djqecw6nn5tydxq0shan7srv8j65clsfmnxcfu
              - type: coin_spent
                attributes:
                  - key: spender
                    value: inj19c9fdh488vqjclltwp68jm50ydwyh36jqeatev
                  - key: amount
                    value: 100000inj
              - type: coin_received
                attributes:
                  - key: receiver
                    value: inj1fl48vsnmsdzcv85q5d2q4z5ajdha8yu34mf0eh
                  - key: amount
                    value: 100000inj
              - type: delegate
                attributes:
                  - key: validator
                    value: injvaloper1djqecw6nn5tydxq0shan7srv8j65clsfmnxcfu
                  - key: amount
                    value: 100000inj
                  - key: new_shares
                    value: '100000.000000000000000000'
              - type: message
                attributes:
                  - key: module
                    value: staking
                  - key: sender
                    value: inj19c9fdh488vqjclltwp68jm50ydwyh36jqeatev
            rawLog: '[{"events":[{"type":"coin_received","attributes":[{"key":"receiver","value":"inj19c9fdh488vqjclltwp68jm50ydwyh36jqeatev"},{"key":"amount","value":"5inj"},{"key":"receiver","value":"inj1fl48vsnmsdzcv85q5d2q4z5ajdha8yu34mf0eh"},{"key":"amount","value":"100000inj"}]},{"type":"coin_spent","attributes":[{"key":"spender","value":"inj1jv65s3grqf6v6jl3dp4t6c9t9rk99cd88lyufl"},{"key":"amount","value":"5inj"},{"key":"spender","value":"inj19c9fdh488vqjclltwp68jm50ydwyh36jqeatev"},{"key":"amount","value":"100000inj"}]},{"type":"delegate","attributes":[{"key":"validator","value":"injvaloper1djqecw6nn5tydxq0shan7srv8j65clsfmnxcfu"},{"key":"amount","value":"100000inj"},{"key":"new_shares","value":"100000.000000000000000000"}]},{"type":"message","attributes":[{"key":"action","value":"/cosmos.staking.v1beta1.MsgDelegate"},{"key":"sender","value":"inj1jv65s3grqf6v6jl3dp4t6c9t9rk99cd88lyufl"},{"key":"module","value":"staking"},{"key":"sender","value":"inj19c9fdh488vqjclltwp68jm50ydwyh36jqeatev"}]},{"type":"transfer","attributes":[{"key":"recipient","value":"inj19c9fdh488vqjclltwp68jm50ydwyh36jqeatev"},{"key":"sender","value":"inj1jv65s3grqf6v6jl3dp4t6c9t9rk99cd88lyufl"},{"key":"amount","value":"5inj"}]},{"type":"withdraw_rewards","attributes":[{"key":"amount","value":"5inj"},{"key":"validator","value":"injvaloper1djqecw6nn5tydxq0shan7srv8j65clsfmnxcfu"}]}]}]'
            tx:
              '0': 10
              '1': 160
              '2': 1
              '3': 10
              '4': 157
              '5': 1
              '6': 10
              '7': 35
              '8': 47
              '9': 99
              '10': 111
              '11': 115
              '12': 109
              '13': 111
              '14': 115
              '15': 46
              '16': 115
              '17': 116
              '18': 97
              '19': 107
              '20': 105
              '21': 110
              '22': 103
              '23': 46
              '24': 118
              '25': 49
              '26': 98
              '27': 101
              '28': 116
              '29': 97
              '30': 49
              '31': 46
              '32': 77
              '33': 115
              '34': 103
              '35': 68
              '36': 101
              '37': 108
              '38': 101
              '39': 103
              '40': 97
              '41': 116
              '42': 101
              '43': 18
              '44': 118
              '45': 10
              '46': 45
              '47': 99
              '48': 111
              '49': 115
              '50': 109
              '51': 111
              '52': 115
              '53': 49
              '54': 57
              '55': 99
              '56': 57
              '57': 102
              '58': 100
              '59': 104
              '60': 52
              '61': 56
              '62': 56
              '63': 118
              '64': 113
              '65': 106
              '66': 99
              '67': 108
              '68': 108
              '69': 116
              '70': 119
              '71': 112
              '72': 54
              '73': 56
              '74': 106
              '75': 109
              '76': 53
              '77': 48
              '78': 121
              '79': 100
              '80': 119
              '81': 121
              '82': 104
              '83': 51
              '84': 54
              '85': 106
              '86': 113
              '87': 101
              '88': 97
              '89': 116
              '90': 101
              '91': 118
              '92': 18
              '93': 52
              '94': 99
              '95': 111
              '96': 115
              '97': 109
              '98': 111
              '99': 115
              '100': 118
              '101': 97
              '102': 108
              '103': 111
              '104': 112
              '105': 101
              '106': 114
              '107': 49
              '108': 54
              '109': 121
              '110': 115
              '111': 48
              '112': 101
              '113': 103
              '114': 57
              '115': 51
              '116': 53
              '117': 109
              '118': 107
              '119': 113
              '120': 112
              '121': 107
              '122': 121
              '123': 100
              '124': 107
              '125': 103
              '126': 102
              '127': 99
              '128': 106
              '129': 57
              '130': 97
              '131': 103
              '132': 101
              '133': 50
              '134': 97
              '135': 117
              '136': 56
              '137': 108
              '138': 57
              '139': 54
              '140': 110
              '141': 97
              '142': 101
              '143': 114
              '144': 101
              '145': 57
              '146': 26
              '147': 15
              '148': 10
              '149': 5
              '150': 117
              '151': 97
              '152': 116
              '153': 111
              '154': 109
              '155': 18
              '156': 6
              '157': 49
              '158': 48
              '159': 48
              '160': 48
              '161': 48
              '162': 48
              '163': 18
              '164': 103
              '165': 10
              '166': 80
              '167': 10
              '168': 70
              '169': 10
              '170': 31
              '171': 47
              '172': 99
              '173': 111
              '174': 115
              '175': 109
              '176': 111
              '177': 115
              '178': 46
              '179': 99
              '180': 114
              '181': 121
              '182': 112
              '183': 116
              '184': 111
              '185': 46
              '186': 115
              '187': 101
              '188': 99
              '189': 112
              '190': 50
              '191': 53
              '192': 54
              '193': 107
              '194': 49
              '195': 46
              '196': 80
              '197': 117
              '198': 98
              '199': 75
              '200': 101
              '201': 121
              '202': 18
              '203': 35
              '204': 10
              '205': 33
              '206': 3
              '207': 156
              '208': 228
              '209': 123
              '210': 42
              '211': 129
              '212': 61
              '213': 19
              '214': 135
              '215': 97
              '216': 49
              '217': 169
              '218': 195
              '219': 190
              '220': 119
              '221': 232
              '222': 196
              '223': 175
              '224': 164
              '225': 158
              '226': 148
              '227': 135
              '228': 68
              '229': 171
              '230': 190
              '231': 225
              '232': 31
              '233': 147
              '234': 158
              '235': 42
              '236': 66
              '237': 15
              '238': 70
              '239': 18
              '240': 4
              '241': 10
              '242': 2
              '243': 8
              '244': 1
              '245': 24
              '246': 33
              '247': 18
              '248': 19
              '249': 10
              '250': 13
              '251': 10
              '252': 5
              '253': 117
              '254': 97
              '255': 116
              '256': 111
              '257': 109
              '258': 18
              '259': 4
              '260': 53
              '261': 48
              '262': 48
              '263': 48
              '264': 16
              '265': 224
              '266': 167
              '267': 18
              '268': 26
              '269': 64
              '270': 25
              '271': 31
              '272': 135
              '273': 165
              '274': 77
              '275': 206
              '276': 175
              '277': 182
              '278': 171
              '279': 154
              '280': 95
              '281': 17
              '282': 42
              '283': 19
              '284': 68
              '285': 76
              '286': 163
              '287': 126
              '288': 73
              '289': 160
              '290': 41
              '291': 229
              '292': 49
              '293': 187
              '294': 33
              '295': 48
              '296': 31
              '297': 215
              '298': 46
              '299': 157
              '300': 57
              '301': 3
              '302': 4
              '303': 199
              '304': 99
              '305': 204
              '306': 165
              '307': 169
              '308': 118
              '309': 10
              '310': 99
              '311': 29
              '312': 200
              '313': 87
              '314': 5
              '315': 221
              '316': 107
              '317': 8
              '318': 181
              '319': 15
              '320': 95
              '321': 255
              '322': 125
              '323': 93
              '324': 232
              '325': 215
              '326': 59
              '327': 44
              '328': 235
              '329': 209
              '330': 244
              '331': 195
              '332': 182
              '333': 160
            gasUsed: 167798
            gasWanted: 300000
    INJCraftUnstakeTxPayload:
      type: object
      required:
        - pubkey
        - validator
      properties:
        pubkey:
          type: string
          example: 039ce47b2a813d13876131a9c3be77e8c4afa49e948744abbee11f939e2a420f46
          description: Wallet public key (compressed or uncompressed), this is different than the wallet address
        validator:
          type: string
          example: injvaloper1djqecw6nn5tydxq0shan7srv8j65clsfmnxcfu
          description: Validator address
        amount_inj:
          type: string
          example: '1000000000000000000000000'
          description: Amount to unstake in uINJ. Omit to unstake all the delegated amount
    INJCraftRedelegateTxPayload:
      type: object
      required:
        - account_id
        - pubkey
        - validator_source
        - validator_destination
      properties:
        account_id:
          type: string
          example: b7177fd2-fbb3-479f-aa92-db9fb16e229f
          format: uuid
          description: Kiln Account ID to which the new stake will be linked
        pubkey:
          type: string
          example: 039ce47b2a813d13876131a9c3be77e8c4afa49e948744abbee11f939e2a420f46
          description: Wallet public key (compressed or uncompressed), this is different than the wallet address
        validator_source:
          type: string
          example: injvaloper1djqecw6nn5tydxq0shan7srv8j65clsfmnxcfu
          description: Validator source address of current stake
        validator_destination:
          type: string
          example: injvaloper1djqecw6nn5tydxq0shan7srv8j65clsfmnxcfu
          description: Validator destination address to which redelegate the stake
        amount_inj:
          type: string
          example: '1000000000000000000000000'
          description: Amount to redelegate in uINJ
    INJCraftStakeTxPayload:
      type: object
      required:
        - account_id
        - pubkey
        - validator
        - amount_inj
      properties:
        account_id:
          type: string
          example: b7177fd2-fbb3-479f-aa92-db9fb16e229f
          format: uuid
          description: Kiln Account ID to stake into
        pubkey:
          type: string
          example: 039ce47b2a813d13876131a9c3be77e8c4afa49e948744abbee11f939e2a420f46
          description: Wallet public key (compressed or uncompressed), this is different than the wallet address
        validator:
          type: string
          example: injvaloper1djqecw6nn5tydxq0shan7srv8j65clsfmnxcfu
          description: Validator address
        amount_inj:
          type: string
          example: '1000000000000000000000000'
          description: Amount to stake in inj
    INJCraftRestakeRewardsTxPayload:
      type: object
      required:
        - pubkey
        - validator_address
        - grantee_address
      properties:
        pubkey:
          type: string
          example: 039ce47b2a813d13876131a9c3be77e8c4afa49e948744abbee11f939e2a420f46
          description: Wallet public key (compressed or uncompressed), this is different than the wallet address
        validator_address:
          type: string
          example: injvaloper1djqecw6nn5tydxq0shan7srv8j65clsfmnxcfu
          description: Validator address
        grantee_address:
          type: string
          example: cosmos1u4whe0pwlgt7q7ph37qxalq2wfq4pkcdze5fmd
          description: 'Grantee address, this address is specific to each validator. Kiln grantee addresses are found here: https://github.com/eco-stake/validator-registry/blob/master/Kiln/chains.json https://github.com/eco-stake/validator-registry/blob/master/interop/chains.json'
    INJCraftWithdrawRewardsTxPayload:
      type: object
      required:
        - pubkey
        - validator
      properties:
        pubkey:
          type: string
          example: 039ce47b2a813d13876131a9c3be77e8c4afa49e948744abbee11f939e2a420f46
          description: Wallet public key (compressed or uncompressed), this is different than the wallet address
        validator:
          type: string
          example: injvaloper1djqecw6nn5tydxq0shan7srv8j65clsfmnxcfu
          description: Validator address
    INJReward:
      type: object
      required:
        - date
        - rewards
        - balance
        - net_apy
      properties:
        date:
          type: string
          description: Day for this reward entry
          format: date
          example: '2023-01-15'
        rewards:
          type: string
          description: Accumulated rewards in uINJ during the day
          example: '3575891083876864200000'
        balance:
          type: string
          description: Staked balance in uINJ at the end of the day
          example: '6300000000000000000000000'
        net_apy:
          type: number
          description: Net annual percentage yield
          example: 20.76
        rewards_usd:
          type: number
          description: Estimated value of rewards generated for that day in USD. The exchange rate is the rate at the end of the day provided by CoinGeckko.
        balance_usd:
          type: number
          description: Estimated value of the staked balance at the beginning of the day in USD. The exchange rate is the rate at the end of the day provided by CoinGeckko.
    INJOperationDelegate:
      type: object
      properties:
        type:
          type: string
          description: Operation type
          example: staking.MsgDelegate
        time:
          type: string
          description: Date of the operation
          format: date-time
          example: '2023-06-22T15:35:01.892644Z'
        block:
          type: number
          description: Transaction block
          example: 15828207
        tx_hash:
          type: string
          description: Transaction hash
          example: 7DBC7C481A9A28961BDDF5BCDD47217A126EC0497017908453D71FACA9FA3506
        tx_gas_used:
          type: string
          description: Gas used for the whole transaction in uINJ
          example: '186733'
        message_index:
          type: number
          description: Index of the message in the transaction
          example: 0
        validator_address:
          type: string
          description: Validator address
          example: injvaloper1djqecw6nn5tydxq0shan7srv8j65clsfmnxcfu
        delegator_address:
          type: string
          description: Delegator address
          example: inj1djqecw6nn5tydxq0shan7srv8j65clsf7vypl6
        amount:
          type: string
          description: Amount added to the staked balance in uINJ
          example: '3000000'
        withdraw_rewards:
          type: string
          description: Rewards auto-claimed alongside the operation in uINJ
          example: '10841'
    INJOperationUndelegate:
      type: object
      properties:
        type:
          type: string
          description: Operation type
          example: staking.MsgUndelegate
        time:
          type: string
          description: Date of the operation
          format: date-time
          example: '2023-06-22T15:35:01.892644Z'
        block:
          type: number
          description: Transaction block
          example: 15828207
        tx_hash:
          type: string
          description: Transaction hash
          example: 7DBC7C481A9A28961BDDF5BCDD47217A126EC0497017908453D71FACA9FA3506
        tx_gas_used:
          type: string
          description: Gas used for the whole transaction in uINJ
          example: '186733'
        message_index:
          type: number
          description: Index of the message in the transaction
          example: 0
        validator_address:
          type: string
          description: Validator address
          example: injvaloper1djqecw6nn5tydxq0shan7srv8j65clsfmnxcfu
        delegator_address:
          type: string
          description: Delegator address
          example: inj1djqecw6nn5tydxq0shan7srv8j65clsf7vypl6
        amount:
          type: string
          description: Amount removed from the staked balance in uINJ
          example: '3000000'
        withdraw_rewards:
          type: string
          description: Rewards auto-claimed alongside the operation in uINJ
          example: '10841'
    INJOperationRedelegate:
      type: object
      properties:
        type:
          type: string
          description: Operation type
          example: staking.MsgBeginRedelegate
        time:
          type: string
          description: Date of the operation
          format: date-time
          example: '2023-06-22T15:35:01.892644Z'
        block:
          type: number
          description: Transaction block
          example: 15828207
        tx_hash:
          type: string
          description: Transaction hash
          example: 7DBC7C481A9A28961BDDF5BCDD47217A126EC0497017908453D71FACA9FA3506
        tx_gas_used:
          type: string
          description: Gas used for the whole transaction in uINJ
          example: '186733'
        message_index:
          type: number
          description: Index of the message in the transaction
          example: 0
        validator_address:
          type: string
          description: Destination validator address
          example: injvaloper1djqecw6nn5tydxq0shan7srv8j65clsfmnxcfu
        validator_address_source:
          type: string
          description: Source validator address
          example: injvaloper1djqecw6nn5tydxq0shan7srv8j65clsfmnxcfu
        delegator_address:
          type: string
          description: Delegator address
          example: inj1djqecw6nn5tydxq0shan7srv8j65clsf7vypl6
        amount:
          type: string
          description: Amount moved from the source validator staked balance to the destination validator staked balance in uINJ
          example: '3000000'
        withdraw_rewards:
          type: string
          description: Rewards auto-claimed from the destination validator alongside the operation in uINJ
          example: '10841'
        withdraw_rewards_source:
          type: string
          description: Rewards auto-claimed from the source validator alongside the operation in uINJ
          example: '10841'
    INJOperationWithdrawRewards:
      type: object
      properties:
        type:
          type: string
          description: Operation type
          example: distr.MsgWithdrawDelegatorReward
        time:
          type: string
          description: Date of the operation
          format: date-time
          example: '2023-06-22T15:35:01.892644Z'
        block:
          type: number
          description: Transaction block
          example: 15828207
        tx_hash:
          type: string
          description: Transaction hash
          example: 7DBC7C481A9A28961BDDF5BCDD47217A126EC0497017908453D71FACA9FA3506
        tx_gas_used:
          type: string
          description: Gas used for the whole transaction in uINJ
          example: '186733'
        message_index:
          type: number
          description: Index of the message in the transaction
          example: 0
        validator_address:
          type: string
          description: Validator address
          example: injvaloper1djqecw6nn5tydxq0shan7srv8j65clsfmnxcfu
        delegator_address:
          type: string
          description: Delegator address
          example: inj1djqecw6nn5tydxq0shan7srv8j65clsf7vypl6
        withdraw_rewards:
          type: string
          description: Rewards claimed alongside the operation in uINJ
          example: '10841'
    INJOperationGrant:
      type: object
      properties:
        type:
          type: string
          description: Operation type
          example: Authz.Grant
        time:
          type: string
          description: Date of the operation
          format: date-time
          example: '2023-06-22T15:35:01.892644Z'
        block:
          type: number
          description: Transaction block
          example: 15828207
        tx_hash:
          type: string
          description: Transaction hash
          example: 7DBC7C481A9A28961BDDF5BCDD47217A126EC0497017908453D71FACA9FA3506
        tx_gas_used:
          type: string
          description: Gas used for the whole transaction in uINJ
          example: '186733'
        message_index:
          type: number
          description: Index of the message in the transaction
          example: 0
        grantee:
          type: string
          description: Recipient of the permissions
          example: inj1djqecw6nn5tydxq0shan7srv8j65clsf7vypl6
        granter:
          type: string
          description: Owner of the stake giving the permissions
          example: inj1djqecw6nn5tydxq0shan7srv8j65clsf7vypl6
        permission:
          type: string
          description: 'Kind of permission been grantee, can be: "Staking.MsgDelegate", "Staking.MsgUndelegate", "Staking.MsgRedelegate" or "Distribution.MsgWithdrawDelegatorReward"'
          example: Staking.MsgDelegate
        allow_list:
          type: array
          items:
            type: string
          nullable: true
          description: List of address on which the granted permission can be applied (ie validator on which delegation is allowed)
          example:
            - inj1djqecw6nn5tydxq0shan7srv8j65clsf7vypl6
            - inj1djqecw6nn5tydxq0shan7srv8j65clsf7vypl6
        deny_list:
          type: array
          items:
            type: string
          nullable: true
          description: List of address on which the granted permission cannot be applied (ie validator on which delegation is allowed)
          example:
            - inj1djqecw6nn5tydxq0shan7srv8j65clsf7vypl6
            - inj1djqecw6nn5tydxq0shan7srv8j65clsf7vypl6
    INJOperationExec:
      type: object
      properties:
        type:
          type: string
          description: Operation type
          example: Authz.Exec
        time:
          type: string
          description: Date of the operation
          format: date-time
          example: '2023-06-22T15:35:01.892644Z'
        block:
          type: number
          description: Transaction block
          example: 15828207
        tx_hash:
          type: string
          description: Transaction hash
          example: 7DBC7C481A9A28961BDDF5BCDD47217A126EC0497017908453D71FACA9FA3506
        tx_gas_used:
          type: string
          description: Gas used for the whole transaction in uINJ
          example: '186733'
        message_index:
          type: number
          description: Index of the message in the transaction
          example: 0
        executed_operations:
          type: array
          nullable: true
          items:
            type: object
            properties:
              type:
                type: string
                description: Operation type
                example: staking.Delegate
              validator_address:
                type: string
                description: Destination validator address
                example: injvaloper1djqecw6nn5tydxq0shan7srv8j65clsfmnxcfu
              validator_address_source:
                type: string
                description: Source validator address
                example: injvaloper1djqecw6nn5tydxq0shan7srv8j65clsfmnxcfu
              delegator_address:
                type: string
                description: Delegator address
                example: inj1djqecw6nn5tydxq0shan7srv8j65clsf7vypl6
              amount:
                type: string
                description: Amount moved from the source validator staked balance to the destination validator staked balance in uINJ
                example: '3000000'
              withdraw_rewards:
                type: string
                description: Rewards auto-claimed from the destination validator alongside the operation in uINJ
                example: '10841'
              withdraw_rewards_source:
                type: string
                description: Rewards auto-claimed from the source validator alongside the operation in uINJ
                example: '10841'
    INJNetworkStats:
      type: object
      required:
        - inj_price_usd
        - nb_validators
        - network_gross_apy
        - supply_staked_percent
        - inflation_rate
        - updated_at
      properties:
        inj_price_usd:
          type: number
          description: Price of Injective in USD
          example: 10.53
        nb_validators:
          type: number
          description: Number of validators in the network
          example: 100
        network_gross_apy:
          type: number
          description: Gross annual percentage yield
          example: 4.5
        supply_staked_percent:
          type: number
          description: Supply of Injective currently staked
          example: 12.4
        inflation_rate:
          type: number
          description: Injective inflation rate
          example: 3.5
        updated_at:
          type: string
          description: Last date this data was updated
          format: date-time
          example: '2023-01-14T01:13:59Z'
    INJTxDecoding:
      type: object
      description: Decoded transaction
      example:
        authInfo:
          signerInfos:
            - publicKey:
                typeUrl: /cosmos.crypto.secp256k1.PubKey
                value:
                  '0': 10
                  '1': 33
                  '2': 3
                  '3': 156
                  '4': 228
                  '5': 123
                  '6': 42
                  '7': 129
                  '8': 61
                  '9': 19
                  '10': 135
                  '11': 97
                  '12': 49
                  '13': 169
                  '14': 195
                  '15': 190
                  '16': 119
                  '17': 232
                  '18': 196
                  '19': 175
                  '20': 164
                  '21': 158
                  '22': 148
                  '23': 135
                  '24': 68
                  '25': 171
                  '26': 190
                  '27': 225
                  '28': 31
                  '29': 147
                  '30': 158
                  '31': 42
                  '32': 66
                  '33': 15
                  '34': 70
              modeInfo:
                single:
                  mode: 1
              sequence:
                low: 102
                high: 0
                unsigned: true
          fee:
            amount:
              - denom: inj
                amount: '5000'
            gasLimit:
              low: 2000000
              high: 0
              unsigned: true
            payer: ''
            granter: ''
        body:
          messages:
            - typeUrl: /cosmos.staking.v1beta1.MsgDelegate
              value:
                '0': 10
                '1': 45
                '2': 99
                '3': 111
                '4': 115
                '5': 109
                '6': 111
                '7': 115
                '8': 49
                '9': 57
                '10': 99
                '11': 57
                '12': 102
                '13': 100
                '14': 104
                '15': 52
                '16': 56
                '17': 56
                '18': 118
                '19': 113
                '20': 106
                '21': 99
                '22': 108
                '23': 108
                '24': 116
                '25': 119
                '26': 112
                '27': 54
                '28': 56
                '29': 106
                '30': 109
                '31': 53
                '32': 48
                '33': 121
                '34': 100
                '35': 119
                '36': 121
                '37': 104
                '38': 51
                '39': 54
                '40': 106
                '41': 113
                '42': 101
                '43': 97
                '44': 116
                '45': 101
                '46': 118
                '47': 18
                '48': 52
                '49': 99
                '50': 111
                '51': 115
                '52': 109
                '53': 111
                '54': 115
                '55': 118
                '56': 97
                '57': 108
                '58': 111
                '59': 112
                '60': 101
                '61': 114
                '62': 49
                '63': 54
                '64': 121
                '65': 115
                '66': 48
                '67': 101
                '68': 103
                '69': 57
                '70': 51
                '71': 53
                '72': 109
                '73': 107
                '74': 113
                '75': 112
                '76': 107
                '77': 121
                '78': 100
                '79': 107
                '80': 103
                '81': 102
                '82': 99
                '83': 106
                '84': 57
                '85': 97
                '86': 103
                '87': 101
                '88': 50
                '89': 97
                '90': 117
                '91': 56
                '92': 108
                '93': 57
                '94': 54
                '95': 110
                '96': 97
                '97': 101
                '98': 114
                '99': 101
                '100': 57
                '101': 26
                '102': 16
                '103': 10
                '104': 5
                '105': 117
                '106': 97
                '107': 116
                '108': 111
                '109': 109
                '110': 18
                '111': 7
                '112': 49
                '113': 48
                '114': 48
                '115': 48
                '116': 48
                '117': 48
                '118': 48
          memo: ''
          timeoutHeight:
            low: 0
            high: 0
            unsigned: true
          extensionOptions: []
          nonCriticalExtensionOptions: []
        signatures:
          - '0': 116
            '1': 104
            '2': 101
            '3': 116
            '4': 97
            '5': 45
            '6': 116
            '7': 101
            '8': 115
            '9': 116
            '10': 110
            '11': 101
            '12': 116
            '13': 45
            '14': 48
            '15': 48
            '16': 49
    INJCraftSendTxPayload:
      type: object
      required:
        - pubkey
        - to
        - amount_inj
      properties:
        pubkey:
          type: string
          description: Wallet public key (compressed or uncompressed), this is different than the wallet address
          example: 039ce47b2a813d13876131a9c3be77e8c4afa49e948744abbee11f939e2a420f46
        to:
          type: string
          description: Recipient address
          example: inj1mfdn23y2ydnp6j3l3f8rw6r2gzazrmprgxn5xl
        amount_inj:
          type: string
          description: Amount to send in inj
          example: '1000000000000000000000000'
    TONStake:
      type: object
      required:
        - id
        - pool
        - nominator
        - balance
        - elector_balance
        - total_balance
        - withdraw_requested
        - pending_deposit_amount
        - pool_type
        - rewards
        - net_apy
        - kiln_requested_withdraw
        - withdraw_balance
        - withdraw_pending_balance
      properties:
        id:
          type: string
          description: Internal Kiln ID
          example: Ef-2Cee_wxtgo9OKdbjXjauQJ15yxuyMTNpQxJbJ2FTZ2RJY|Uf_Jm1_syLkND8FqagYAtYljbWzutxz2u9AxZS9x59OxHKkF
        pool:
          type: string
          description: Pool address where this stake is made
          example: Ef-2Cee_wxtgo9OKdbjXjauQJ15yxuyMTNpQxJbJ2FTZ2RJY
        nominator:
          type: string
          description: Nominator address
          example: Uf_Jm1_syLkND8FqagYAtYljbWzutxz2u9AxZS9x59OxHKkF
        balance:
          type: string
          description: The amount of TON currently present on the stake in nanoton
          example: '92908788559'
        elector_balance:
          type: string
          description: The amount of TON currently present on the elector (only set for single pool nominator pools)
          example: '1221263396940000'
        total_balance:
          type: string
          description: Sum of balance and elector_balance
          example: '1221356305728559'
        withdraw_requested:
          type: boolean
          description: Whether the stake withdrawal has been requested. This flag is contract specific.
          example: false
        pending_deposit_amount:
          type: string
          description: Amount not yet credited due to a validation round
          example: '0'
        pool_type:
          type: string
          description: The type of the pool
          example: single_nominator_pool_v1
          enum:
            - single_nominator_pool_v1
            - nominator_pool_v1
            - ton_whales
        rewards:
          type: string
          description: Total rewards accumulated by this stake since its first ever delegation
          example: '9020446847418'
        net_apy:
          type: number
          description: Net annual percentage yield
          example: 6.02
        kiln_requested_withdraw:
          type: object
          nullable: true
          description: Single_nominator_pool_v1 contract only. Kiln specific withdrawal information
          required:
            - amount
            - is_withdrawable
          properties:
            amount:
              type: string
              description: Amount to withdraw
              example: '1002001960122254'
            is_withdrawable:
              type: boolean
              description: Flag to identify if the withdraw_request can be withdraw-able
              example: true
        withdraw_balance:
          type: string
          nullable: true
          description: Ton_whales contract only. Amount currently withdraw-able
          example: '100012345678'
        withdraw_pending_balance:
          type: string
          nullable: true
          description: Ton_whales contract only. Amount requested for withdraw
          example: '100087654321'
    TONRewardByEpoch:
      type: object
      required:
        - epoch
        - start_at
        - end_at
        - effective_balance
        - rewards
        - net_apy
      properties:
        epoch:
          type: string
          description: Epoch ID
          example: '1715953195'
        start_at:
          type: string
          description: Epoch start date
          example: '2024-05-17T13:39:55Z'
        end_at:
          type: string
          description: Epoch end date
          example: '2024-05-17T16:34:55Z'
        effective_balance:
          type: string
          description: Staked balance in nanoton at the end of the epoch
          example: '10001198470000'
        rewards:
          type: string
          description: Rewards accumulated on the period
          example: '28936464584'
        net_apy:
          type: number
          description: Net annual percentage yield
          example: 6.02
    TONRewardByDay:
      type: object
      required:
        - date
        - effective_balance
        - rewards
        - net_apy
      properties:
        date:
          type: string
          description: Day for this reward entry
          example: '2024-05-17'
        effective_balance:
          type: string
          description: Staked balance in nanoton at the end of the day
          example: '10001198470000'
        rewards:
          type: string
          description: Accumulated rewards in nanoton during the day
          example: '28936464584'
        net_apy:
          type: number
          description: Net annual percentage yield
          example: 6.02
        rewards_usd:
          type: number
          description: Estimated value of rewards generated for that day in USD. The exchange rate is the rate at the end of the day provided by CoinGeckko.
          example: 2344.36
        effective_balance_usd:
          type: number
          description: Estimated value of the effective balance of that day in USD. The exchange rate is the rate at the end of the day provided by CoinGeckko.
          example: 4407596.22
    TONWithdrawRequest:
      type: object
      properties:
        pool:
          type: string
          example: Ef_zhiLfydITUXevx3NOkBKyjczc565UvqwkWp07os7EwZMa
          description: Pool address where this withdraw request is for
        amount:
          type: string
          description: The amount of TON to withdraw in nanoton
          example: '1002001960122254'
        created_at:
          type: string
          description: The date this withdraw request was created
          format: date-time
          example: '2023-01-15T01:13:59Z'
        withdrawable_at:
          type: string
          description: The date this withdraw request can be executed
          format: date-time
          example: '2023-01-15T01:13:59Z'
        tx_hash:
          type: string
          description: Hash of the transaction if the withdraw request has been withdrawn
          example: XGU4jMF6JGhcqvpdXJ+w7XhnFM6fhrRpidnLp7CuGV0=
        status:
          type: string
          description: Status of the withdraw request
          example: requested
          enum:
            - requested
            - withdrawn
    TONPostStakesPayload:
      type: object
      required:
        - stakes
        - account_id
      properties:
        stakes:
          type: array
          items:
            type: object
            properties:
              stakeId:
                type: string
                description: Stake id to be linked in the format {pool_address}|{nominator_address}
                example: kf_bOKif9YRKIGTRZw_6ZTZsObUug4J3EZ68BQ7t7E7zAORr|EQBQJR9IALMi8kLWKKoo20A1-i9tLB1F2ZTIIyppHGPFYQlR
        account_id:
          type: string
          description: Kiln Account ID
          example: 92f5bfd4-ea38-4824-84f7-686eddff5539
    TONNetworkStats:
      type: object
      required:
        - network_gross_apy
        - supply_staked_percent
        - nb_validators
        - ton_price_usd
        - inflation_rate
        - updated_at
      properties:
        network_gross_apy:
          type: number
          description: Gross annual percentage yield
          example: 4.5
        supply_staked_percent:
          type: number
          description: Supply of Ton currently staked
          example: 12.4
        nb_validators:
          type: number
          description: Number of active validators
          example: 402
        ton_price_usd:
          type: number
          description: TON price in USD
          example: 3.5
        inflation_rate:
          type: number
          description: TON inflation rate
          example: 25.11560824007323
        updated_at:
          type: string
          description: Last date this data was updated
          format: date-time
          example: '2023-01-14T01:13:59Z'
    TONPrepareTxPayload:
      type: object
      required:
        - unsigned_tx_serialized
        - signatures
      properties:
        unsigned_tx_serialized:
          type: string
          description: Hex encoded unsigned transaction
          example: b5ee9c72c1010201004a000011011c29a9a317667c507500000000000301006e627fbdbe5ba683f903a336f8b6ae670f51439b4507823c21a90c447e332094964ff8b838d7ea4c68000000000000000000000000000000586c223e
        signature:
          type: string
          description: Hex encoded signature
          example: 58375aa7640d8f1f9023e30c156d58b1e07e76832814549b6067c03139f057c4b31ee4356fd5785693bbd163004a92fccf53c80c4f720e1cfcce05ba64603709
        from:
          type: string
          description: Address of the signer
          example: UQBzQbAszir_fMErkktI7_8Xl2FkhlDUKE4iUGc9V66OMpp1
    TONPreparedTx:
      type: object
      required:
        - signed_tx_serialized
      properties:
        signed_tx_serialized:
          type: string
          description: Hex encoded signed transaction
          example: te6cckEBAgEArQAB4YgA5oNgWZxV/vmCVySWkd/+Ly7CyQyhqFCcRKDOeq9dHGQCwbrVOyBsePyBHxhgq2rFjwPztBlAoqTbAz4Bic+CviWY9yGrfqvCtJ3eixgCVJfmep5AYnuQcOfmcC3TIwG4SU1NGLsz4oOoAAAAAAAcAQBuYn+9vlumg/kDozb4tq5nD1FDm0UHgjwhqQxEfjMglJZP+Lg41+pMaAAAAAAAAAAAAAAAAAAAAKKEVgs=
    TONBroadcastTxPayload:
      type: object
      required:
        - tx_serialized
      properties:
        tx_serialized:
          type: string
          description: Hex encoded signed transaction
          example: te6cckEBAgEArQAB4YgA5oNgWZxV/vmCVySWkd/+Ly7CyQyhqFCcRKDOeq9dHGQCwbrVOyBsePyBHxhgq2rFjwPztBlAoqTbAz4Bic+CviWY9yGrfqvCtJ3eixgCVJfmep5AYnuQcOfmcC3TIwG4SU1NGLsz4oOoAAAAAAAcAQBuYn+9vlumg/kDozb4tq5nD1FDm0UHgjwhqQxEfjMglJZP+Lg41+pMaAAAAAAAAAAAAAAAAAAAAKKEVgs=
    TONBroadcastTx:
      type: object
      required:
        - tx_hash
      properties:
        tx_hash:
          type: string
          description: Hash of the transaction
          example: SQ5y4jeRZzU4h/lbyWiLhTrR9A3smK5Vmm/1p9ylDFo=
    TONTxStatus:
      type: object
      example:
        transactions:
          - account: 0:50251F4800B322F242D628AA28DB4035FA2F6D2C1D45D994C8232A691C63C561
            hash: B2FiWHWiKXq3wFeyrz3heGnk6paG37zc4eHymCzHVv0=
            lt: '23434414000001'
            now: 1720454314
            orig_status: active
            end_status: active
            total_fees: '5553039'
            prev_trans_hash: 0YwyJ6rnmD6GSHjCwbSqYRRRZR4Je3ajRSVOmQKTBDM=
            prev_trans_lt: '22972195000001'
            description:
              type: ord
              action:
                valid: true
                success: true
                no_funds: false
                result_code: 0
                tot_actions: 1
                msgs_created: 1
                spec_actions: 0
                tot_msg_size:
                  bits: '705'
                  cells: '1'
                status_change: unchanged
                total_fwd_fees: '10000000'
                skipped_actions: 0
                action_list_hash: +TCFxMn1MktBa4iGZ8y01pEMygRnmYGEMofeFHiIuxY=
                total_action_fees: '3333282'
              aborted: false
              credit_ph:
                credit: '140268068471039'
              destroyed: false
              compute_ph:
                mode: 0
                type: vm
                success: true
                gas_fees: '1323200'
                gas_used: '3308'
                vm_steps: 68
                exit_code: 0
                gas_limit: '0'
                gas_credit: '10000'
                msg_state_used: false
                account_activated: false
                vm_init_state_hash: AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA=
                vm_final_state_hash: AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA=
              storage_ph:
                status_change: unchanged
                storage_fees_collected: '290157'
              credit_first: true
            block_ref:
              workchain: 0
              shard: '6000000000000000'
              seqno: 22378256
            in_msg:
              hash: kndVN02mdubtxmhkkjz60OwyD6g0aUwThWSjqeqxC3Y=
              source: null
              destination: 0:50251F4800B322F242D628AA28DB4035FA2F6D2C1D45D994C8232A691C63C561
              value: null
              fwd_fee: null
              ihr_fee: null
              created_lt: null
              created_at: null
              opcode: '0x4b958d56'
              ihr_disabled: null
              bounce: null
              bounced: null
              import_fee: '0'
              message_content:
                hash: xvKE5GreYe2GUpcVdyGql8Zl04TGBSH1v5CmSJXneI4=
                body: te6cckEBAgEAhwABnEuVjVbI54rXHHGaszAM0rq344hhUNJLET1sYmiqiKqFtDbL1WzGLMTzRRha4nVO5alpP1cX3E5P4Dls3fIO8gMpqaMXZowasQAAAD0AAwEAaGJ/7ZxUT/rCJRAyaLOH/TKbNhzal0HBO4jPXgKHdvYneYAh3NZQAAAAAAAAAAAAAAAAAADeRiM9
                decoded: null
              init_state: null
            out_msgs:
              - hash: 1U8v7l9QJDW/CMNa05LL6UzdBrSBRNLm7LmkvRnTyzQ=
                source: 0:50251F4800B322F242D628AA28DB4035FA2F6D2C1D45D994C8232A691C63C561
                destination: '-1:DB38A89FF5844A2064D1670FFA65366C39B52E838277119EBC050EEDEC4EF300'
                value: '1000000000'
                fwd_fee: '6666718'
                ihr_fee: '0'
                created_lt: '23434414000002'
                created_at: '1720454314'
                opcode: null
                ihr_disabled: true
                bounce: true
                bounced: false
                import_fee: null
                message_content:
                  hash: lqKW0iTyhcZ77pPDD4owkVfw2qNdxbh+QQt4YwoJz8c=
                  body: te6cckEBAQEAAgAAAEysuc0=
                  decoded: null
                init_state: null
            account_state_before:
              hash: Kcz+vnm2nmbO4pb0wSyo264F8/3WnFdVYaWNhNR5Cus=
              balance: '164023287343'
              account_status: active
              frozen_hash: null
              code_hash: /rX/aCDi/w2Ug+fg1iyBfYRniftK5YDIeIZtlZ2r1cA=
              data_hash: 9R2bD8OcpgFI8z7PHJaN5vXUJr7HQ06nKX3pTN9Bg6o=
            account_state_after:
              hash: IsFANgt7iHcwOtk3TPC67SOV+MNCq0w4f6oLpuk9Im8=
              balance: '163011067586'
              account_status: active
              frozen_hash: null
              code_hash: /rX/aCDi/w2Ug+fg1iyBfYRniftK5YDIeIZtlZ2r1cA=
              data_hash: LL9jzy6YehhW15AcV9JHjL4+VE0pnr/eN+WSqjoF4dA=
            mc_block_seqno: 20853046
        address_book:
          0:50251F4800B322F242D628AA28DB4035FA2F6D2C1D45D994C8232A691C63C561:
            user_friendly: 0QBQJR9IALMi8kLWKKoo20A1-i9tLB1F2ZTIIyppHGPFYe8e
          '-1:DB38A89FF5844A2064D1670FFA65366C39B52E838277119EBC050EEDEC4EF300':
            user_friendly: kf_bOKif9YRKIGTRZw_6ZTZsObUug4J3EZ68BQ7t7E7zAORr
    TONStakeTxPayload:
      type: object
      required:
        - account_id
        - wallet
        - amount_nanoton
        - pool_address
      properties:
        account_id:
          type: string
          description: Kiln Account ID
          example: d3f1b917-72b1-4982-a4dd-93fce579a708
        wallet:
          type: string
          description: Wallet address
          example: 0QBQJR9IALMi8kLWKKoo20A1-i9tLB1F2ZTIIyppHGPFYe8e
        amount_nanoton:
          type: string
          description: Amount in nanoton. Minimum is 12000000000 nanoton (1.2 TON)
          example: '1000000000000000'
        pool_address:
          type: string
          description: Pool address
          example: Ef8xihYQ_8JBVBmystDCnNcAsy5yH_NzpFi2eYcXNaSzIdgw
        vesting_contract_address:
          type: string
          description: Vesting contract address (optional), to be used when staking from a vesting contract
          example: Ef8xihYQ_8JBVBmystDCnNcAsy5yH_NzpFi2eYcXNaSzIdgw
    TONTx:
      type: object
      required:
        - unsigned_tx_hash
        - unsigned_tx_serialized
        - from
      properties:
        unsigned_tx_hash:
          type: string
          description: Hex encoded transaction data that need to be covered by signature
          example: 5b451f530950de0cb371a91edf16f36a5180e31162faccc7f10db8ccf027023a
        unsigned_tx_serialized:
          type: string
          description: Hex encoded full transaction
          example: b5ee9c72c10102010046000011011c29a9a317668d4f0a0000003e0003010066627fed9c544ffac225103268b387fd329b361cda9741c13b88cf5e028776f6277980187a1200000000000000000000000000002537dddb
        from:
          type: string
          description: Address of the signer
          example: 0QBQJR9IALMi8kLWKKoo20A1-i9tLB1F2ZTIIyppHGPFYe8e
    TONUnstakeTxPayload:
      type: object
      required:
        - wallet
        - pool_address
      properties:
        wallet:
          type: string
          description: Wallet address
          example: 0QBQJR9IALMi8kLWKKoo20A1-i9tLB1F2ZTIIyppHGPFYe8e
        pool_address:
          type: string
          description: Pool address
          example: Ef8xihYQ_8JBVBmystDCnNcAsy5yH_NzpFi2eYcXNaSzIdgw
        amount_nanoton:
          type: string
          description: Amount in nanoton (optional). If not provided, the full stake will be unstaked
          example: '1000000000000000'
        vesting_contract_address:
          type: string
          description: Vesting contract address (optional), to be used when unstaking from a vesting contract. Note that it is not possible to do partial unstake when staking from a vesting contract - only full withdraw are possible in such case.
          example: Ef8xihYQ_8JBVBmystDCnNcAsy5yH_NzpFi2eYcXNaSzIdgw
    TONWhitelistTxPayload:
      type: object
      required:
        - wallet
        - vesting_contract_address
        - addresses
      properties:
        wallet:
          type: string
          description: Wallet address
          example: 0QBQJR9IALMi8kLWKKoo20A1-i9tLB1F2ZTIIyppHGPFYe8e
        vesting_contract_address:
          type: string
          description: Vesting contract address
          example: Ef8xihYQ_8JBVBmystDCnNcAsy5yH_NzpFi2eYcXNaSzIdgw
        addresses:
          type: array
          description: List of addresses to whitelist
          items:
            type: string
            example: 0QBQJR9IALMi8kLWKKoo20A1-i9tLB1F2ZTIIyppHGPFYe8e
    TONStakeVestingContractTxPayload:
      type: object
      required:
        - account_id
        - wallet
        - amount_nanoton
        - vesting_contract_address
        - destination_address
      properties:
        account_id:
          type: string
          description: Kiln Account ID
          example: d3f1b917-72b1-4982-a4dd-93fce579a708
        wallet:
          type: string
          description: Wallet address
          example: 0QBQJR9IALMi8kLWKKoo20A1-i9tLB1F2ZTIIyppHGPFYe8e
        amount_nanoton:
          type: string
          description: Amount in nanoton
          example: '1000000000000000'
        vesting_contract_address:
          type: string
          description: Vesting contract address
          example: Ef8xihYQ_8JBVBmystDCnNcAsy5yH_NzpFi2eYcXNaSzIdgw
        destination_address:
          type: string
          description: Destination address, usually a pool address
          example: Ef8xihYQ_8JBVBmystDCnNcAsy5yH_NzpFi2eYcXNaSzIdgw
    TONUnstakeVestingContractTxPayload:
      type: object
      required:
        - wallet
        - amount_nanoton
        - vesting_contract_address
        - pool_address
      properties:
        wallet:
          type: string
          description: Wallet address
          example: 0QBQJR9IALMi8kLWKKoo20A1-i9tLB1F2ZTIIyppHGPFYe8e
        amount_nanoton:
          type: string
          description: Amount in nanoton
          example: '1000000000000000'
        vesting_contract_address:
          type: string
          description: Vesting contract address
          example: Ef8xihYQ_8JBVBmystDCnNcAsy5yH_NzpFi2eYcXNaSzIdgw
        pool_address:
          type: string
          description: Pool address
          example: Ef8xihYQ_8JBVBmystDCnNcAsy5yH_NzpFi2eYcXNaSzIdgw
    TONWithdrawRequestPayload:
      type: object
      required:
        - pool
        - amount_nanoton
      properties:
        pool:
          type: string
          description: Pool address where this withdraw request is for
          example: kf_bOKif9YRKIGTRZw_6ZTZsObUug4J3EZ68BQ7t7E7zAORr
        amount_nanoton:
          type: string
          description: The amount of TON to withdraw in nanoton
          example: '1000'
    TONGetBalancePayload:
      type: object
      required:
        - address
      properties:
        address:
          type: string
          description: Wallet address
          example: UQAfjn5-4M5H7q_2z4rCjAIGDslZoT0VsZNWaQ9BIaR4w0V9
    NOBLEGetBalancePayload:
      type: object
      required:
        - address
        - denom
      properties:
        address:
          type: string
          description: Wallet address
          example: noble1p59lpw8cdu948kn3kxjwely7gm9kgxuzschy48
        denom:
          type: string
          description: The denomination of the balance to query
          example: uusdc
    NOBLEBurnUsdcPayload:
      type: object
      required:
        - pubkey
        - recipient
        - amount_uusdc
      properties:
        pubkey:
          type: string
          description: Wallet public key (compressed or uncompressed), this is different than the wallet address
          example: 036d22419964c19ec91afa0e3a9c58dbb1aa1a4a30e5ad06cd47cd4e67f0671180
        recipient:
          type: string
          description: Wallet address on Ethereum to receive the USDC
          example: '0xBC86717BaD3F8CcF86d2882a6bC351C94580A994'
        amount_uusdc:
          type: string
          description: The amount of USDC to burn
          example: '1000000'
    NOBLEOsmoIbcTransferPayload:
      type: object
      required:
        - pubkey
        - recipient
        - amount_uusdc
      properties:
        pubkey:
          type: string
          description: Wallet public key (compressed or uncompressed), this is different than the wallet address
          example: 036d22419964c19ec91afa0e3a9c58dbb1aa1a4a30e5ad06cd47cd4e67f0671180
        recipient:
          type: string
          description: Osmosis address to receive the USDC
          example: osmo1p59lpw8cdu948kn3kxjwely7gm9kgxuzschy48
        amount_uusdc:
          type: string
          description: The amount of USDC to send
          example: '1000000'
    TRXUnsignedTx:
      type: object
      required:
        - unsigned_tx_id
        - unsigned_tx_serialized
      properties:
        unsigned_tx_id:
          type: string
          description: Unsigned transaction Id
          example: a610890432d168c44f902ab8d984685aa732aeb6b5c9b5d55afaec1c658ec495
        unsigned_tx_serialized:
          type: string
          description: Unsigned serialized transaction
          example: 0a02237722087aa78d8d8af3f1cd40c8a6949cbf325a57083612530a34747970652e676f6f676c65617069732e636f6d2f70726f746f636f6c2e467265657a6542616c616e63655632436f6e7472616374121b0a154102e07e61860efd34e1bdedcb5b485da75407d8f110c0843d70e8f4b49abf32
    TRXPreparedTx:
      type: object
      required:
        - signed_tx_serialized
      properties:
        signed_tx_serialized:
          type: string
          description: Signed serialized transaction
          example: 0a750a02238e2208b63bcc4a1991f66a40d0c1989cbf325a57083612530a34747970652e676f6f676c65617069732e636f6d2f70726f746f636f6c2e467265657a6542616c616e63655632436f6e7472616374121b0a154102e07e61860efd34e1bdedcb5b485da75407d8f110c0843d70f08fb99abf321241f19adddba846d1fae9233d872048b04a7b003b7757816b5f601d2a08b00f99901b25ec8e6b906a46165a25ece7f8b9e138b755a9d5aca2c880ba8dbaaf8f8a8400
    TRXBroadcastedTx:
      type: object
      required:
        - tx_hash
      properties:
        tx_hash:
          type: string
          description: Hash of transaction
          example: 4a783155af9825fefabad5e338a1e16d1d3e4b049ab67bc1a32d41aabc8b6d9e
    TRXCraftStakeTxPayload:
      type: object
      required:
        - account_id
        - owner_address
        - amount_sun
        - resource
      properties:
        account_id:
          type: string
          format: uuid
          description: Kiln Account ID
          example: b7177fd2-fbb3-479f-aa92-db9fb16e229f
        owner_address:
          type: string
          description: Wallet address of the owner
          example: TAERHY5gyzDRmAaeqqa6C4Fuyc9HLnnHx7
        amount_sun:
          type: integer
          description: Amount of TRX to stake in sun
          example: 100000
        resource:
          type: string
          enum:
            - BANDWIDTH
            - ENERGY
          description: Resource to obtain
          example: BANDWIDTH
    TRXCraftUnstakeTxPayload:
      type: object
      required:
        - owner_address
        - resource
        - amount_sun
      properties:
        owner_address:
          type: string
          description: Wallet address of the owner
          example: TAERHY5gyzDRmAaeqqa6C4Fuyc9HLnnHx7
        amount_sun:
          type: integer
          description: Amount of TRX to unstake in sun
          example: 100000
        resource:
          type: string
          enum:
            - BANDWIDTH
            - ENERGY
          description: Resource to release
          example: BANDWIDTH
    TRXCraftCancelUnstakeTxPayload:
      type: object
      required:
        - owner_address
      properties:
        owner_address:
          type: string
          description: Wallet address of the owner
          example: TAERHY5gyzDRmAaeqqa6C4Fuyc9HLnnHx7
    TRXCraftWithdrawUnstakedTxPayload:
      type: object
      required:
        - owner_address
      properties:
        owner_address:
          type: string
          description: Wallet address of the owner
          example: TAERHY5gyzDRmAaeqqa6C4Fuyc9HLnnHx7
    TRXCraftVoteTxPayload:
      type: object
      required:
        - account_id
        - owner_address
        - vote_count
      properties:
        account_id:
          type: string
          format: uuid
          description: Kiln Account ID
          example: b7177fd2-fbb3-479f-aa92-db9fb16e229f
        owner_address:
          type: string
          description: Wallet address of the owner
          example: TAERHY5gyzDRmAaeqqa6C4Fuyc9HLnnHx7
        votes:
          type: object
          description: Number of votes to cast
          additionalProperties:
            type: integer
          example:
            TQzd66b9EFVHJfZK5AmiVhBjtJvXGeSPPZ: 1
    TRXCraftWithdrawRewardsTxPayload:
      type: object
      required:
        - owner_address
      properties:
        owner_address:
          type: string
          description: Wallet address of the owner
          example: TAERHY5gyzDRmAaeqqa6C4Fuyc9HLnnHx7
    TRXPrepareTxPayload:
      type: object
      required:
        - unsigned_tx_serialized
        - signature
      properties:
        unsigned_tx_serialized:
          type: string
          description: Unsigned serialized transaction
          example: 0a026554220847c22aa98d1f46a94090ee9ba0be325a6a080412660a30747970652e676f6f676c65617069732e636f6d2f70726f6f746f636f6c2e566f74655769746e657373436f6e747261637412320a154102e07e61860efd34e1bdedcb5b485da75407d8f112190a1541a4ce68cfcdd27884bde52cec653354048e0aa989100170b0e1fef6bd32
        signature:
          type: string
          description: Signature of the transaction
          example: 47b1f77b3e30cfbbfa41d795dd34475865240617dd1c5a7bad526f5fd89e52cd057c80b665cc2431efab53520e2b1b92a0425033baee915df858ca1c588b0a1800
    TRXBroadcastTxPayload:
      type: object
      required:
        - tx_serialized
      properties:
        tx_serialized:
          type: string
          description: Signed serialized transaction
          example: 0a026554220847c22aa98d1f46a94090ee9ba0be325a6a080412660a30747970652e676f6f676c65617069732e636f6d2f70726f6f746f636f6c2e566f74655769746e7373616c6c656454787061796c6f616412320a154102e07e61860efd34e1bdedcb5b485da75407d8f112190a1541a4ce68cfcdd27884bde52cec653354048e0aa989100170b0e1fef6bd32
    TRXNetworkStats:
      type: object
      required:
        - trx_price_usd
        - nb_validators
        - network_gross_apy
        - supply_staked_percent
        - inflation_rate
        - updated_at
      properties:
        trx_price_usd:
          type: number
          description: TRX price in USD
          example: 0.27
        nb_validators:
          type: integer
          description: Number of active bakers
          example: 423
        network_gross_apy:
          type: number
          description: Gross annual percentage yield
          example: 4.5
        supply_staked_percent:
          type: number
          description: Supply percentage of Tron currently staked
          example: 47.39
        inflation_rate:
          type: number
          description: TRX inflation rate
          example: 5.5
        updated_at:
          type: string
          description: Last date this data was updated
          format: date-time
          example: '2023-01-14T01:13:59Z'
    TRXAccount:
      type: object
      required:
        - wallet
        - available_balance
        - claimable_rewards
        - frozen
        - votes
        - updated_at
      properties:
        wallet:
          type: string
          description: Wallet address
          example: TAERHY5gyzDRmAaeqqa6C4Fuyc9HLnnHx7
        available_balance:
          type: integer
          description: Available balance in sun
          example: 4000000
        claimable_rewards:
          type: integer
          description: Available balance in sun
          example: 3000000
        frozen_bandwidth:
          type: integer
          description: Frozen TRX for bandwidth in sun
          example: 1000000
        frozen_energy:
          type: integer
          description: Frozen TRX for energy in sun
          example: 1000000
        votes:
          type: array
          description: Votes
          items:
            type: object
            properties:
              address:
                type: string
                description: super representative address
                example: TQzd66b9EFVHJfZK5AmiVhBjtJvXGeSPPZ
              count:
                type: integer
                description: Vote count
                example: 4
        updated_at:
          type: string
          format: date-time
          description: Last updated timestamp
          example: '2021-01-01T00:00:00Z'
    TRXStake:
      type: object
      required:
        - wallet
        - validator
        - balance
        - updated_at
      properties:
        wallet:
          type: string
          description: Wallet address
          example: TAERHY5gyzDRmAaeqqa6C4Fuyc9HLnnHx7
        validator:
          type: string
          description: Validator address
          example: TAERHY5gyzDRmAaeqqa6C4Fuyc9HLnnHx7
        balance:
          type: string
          description: Staked balance in sun
          example: '10000'
        updated_at:
          type: string
          format: date-time
          description: Last updated timestamp
          example: '2021-01-01T00:00:00Z'
    BasePosition:
      type: object
      required:
        - balance
        - decimals
        - chain_id
      properties:
        balance:
          type: string
          description: The balance associated with the position.
        decimals:
          type: integer
          format: int32
          description: The number of decimals for the position's asset.
        chain_id:
          type: string
          description: The chain ID where the position is located.
    ETHPosition:
      allOf:
        - $ref: '#/components/schemas/BasePosition'
        - type: object
          required:
            - type
          properties:
            type:
              type: string
              description: The type of the position, such as ETH, ERC20, or PRODUCT.
              enum:
                - ETH
    ERC20Position:
      allOf:
        - $ref: '#/components/schemas/BasePosition'
        - type: object
          required:
            - type
            - asset_address
            - asset_decimals
            - asset_price_usd
            - asset_symbol
            - asset_icon
          properties:
            type:
              type: string
              description: The type of the position, such as ETH, ERC20, or PRODUCT.
              enum:
                - ERC20
            asset_address:
              type: string
              description: The address of the ERC20 asset.
            asset_icon:
              type: string
              description: The icon URL of the ERC20 asset.
            asset_symbol:
              type: string
              description: The symbol of the ERC20 asset.
            asset_price_usd:
              type: number
              format: double
              description: The price of the ERC20 asset in USD.
    ProductPosition:
      allOf:
        - $ref: '#/components/schemas/BasePosition'
        - type: object
          required:
            - type
            - product
            - product_address
            - total_rewards
            - total_deposited_amount
            - total_withdrawn_amount
            - nrr
            - grr
            - additional_rewards
          properties:
            type:
              type: string
              description: The type of the position, such as ETH, ERC20, or PRODUCT.
              enum:
                - PRODUCT
            product:
              type: string
              description: The name of the product.
            product_address:
              type: string
              description: The address of the product.
            total_rewards:
              type: string
              description: The total rewards earned by the product.
            total_deposited_amount:
              type: string
              description: The total amount deposited into the product.
            total_withdrawn_amount:
              type: string
              description: The total amount withdrawn from the product.
            nrr:
              type: number
              format: double
              description: The net reward rate of the product.
            grr:
              type: number
              format: double
              description: The gross reward rate of the product.
            additional_rewards:
              type: array
              items:
                oneOf:
                  - $ref: '#/components/schemas/ETHPosition'
                  - $ref: '#/components/schemas/ERC20Position'
                  - $ref: '#/components/schemas/ProductPosition'
    Summary:
      type: object
      required:
        - total_usd
        - product_total_usd
        - assets_total_usd
        - total_earned_usd
      properties:
        total_usd:
          type: number
          format: double
          description: The total USD value of all positions.
        product_total_usd:
          type: number
          format: double
          description: The total USD value of all product positions.
        assets_total_usd:
          type: number
          format: double
          description: The total USD value of all asset positions.
        total_earned_usd:
          type: number
          format: double
          description: The total USD earned across all positions.
security:
  - bearerAuth: []
x-readme:
  explorer-enabled: true
  proxy-enabled: true
